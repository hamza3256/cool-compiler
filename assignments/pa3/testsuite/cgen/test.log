+ testfile=/home/raj/cool/distro/testsuite/cgen/abort.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/abort.cl
+ outname=abort.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/abort.cl
+ errname=abort.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.out /home/raj/cool/distro/testsuite/cgen/abort.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.out /home/raj/cool/distro/testsuite/cgen/abort.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.out
36c36
< str_const7:
---
> str_const5:
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
45c45
< str_const6:
---
> str_const7:
47c47
< 	.word	6
---
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54c54
< str_const5:
---
> str_const0:
56c56
< 	.word	6
---
> 	.word	16
58,59c58,59
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/abort.cl"
63c63
< str_const4:
---
> str_const2:
65c65
< 	.word	5
---
> 	.word	6
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"Object"
72c72
< str_const3:
---
> str_const6:
74c74
< 	.word	5
---
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81c81
< str_const2:
---
> str_const3:
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const1
> 	.ascii	"Main"
99c99
< str_const0:
---
> str_const4:
101c101
< 	.word	16
---
> 	.word	5
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/abort.cl"
---
> 	.ascii	"Int"
108c108,114
< int_const6:
---
> int_const0:
> 	.word	2
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
> int_const3:
120c126
< int_const4:
---
> int_const2:
126c132
< int_const3:
---
> int_const6:
132,137d137
< int_const2:
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
< 	.word	6
< 	.word	-1
144c144
< int_const0:
---
> int_const4:
148c148
< 	.word	0
---
> 	.word	6
171,172c171,172
< 	.word	IO_protObj
< 	.word	IO_init
---
> 	.word	Main_protObj
> 	.word	Main_init
179,213c179,181
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> Object_dispTabMain_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTab	.word	-1
220c188
< 	.word	5
---
> 	.word	1
224c192,193
< String_protObj:
---
> Int_protObj:
> 	.word	2
226,228c195
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
---
> 	.word	Int_dispTab
237,238c204
< Int_protObj:
< 	.word	2
---
> String_protObj:
240c206,208
< 	.word	Int_dispTab
---
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
244c212
< 	.word	1
---
> 	.word	5
283c251
< String_init:
---
> Int_init:
311c279
< Int_init:
---
> String_init:
346,355c314
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/abort.cl
+ spim_outname=abort.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/abort.cl
+ spim_errname=abort.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.spim.out
6,8c6,25
< Abort called from class Main
< Stats -- #instructions : 135
<          #reads : 21  #writes 17  #branches 24  #other 73
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.spim.out.filtered
6c6,25
< Abort called from class Main
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/abort.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 181 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/abort.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/abort.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ outname=assignment-val.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ errname=assignment-val.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.out /home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.out /home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.out
13c13
< 	.word	3
---
> 	.word	1
15,16d14
< 	.word	4
< _string_tag:
17a16,17
> _string_tag:
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,46c36,37
< str_const10:
< 	.word	5
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const4
< 	.ascii	"String"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	5
---
> str_const2:
> 	.word	2
50c41
< 	.ascii	"Bool"
---
> 	.ascii	"\ny: "
54,56c45,47
< str_const8:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	2
> 	.word	18
58,59c49,50
< 	.word	int_const1
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/assignment-val.cl"
63,64c54,55
< str_const7:
< 	.word	5
---
> str_const10:
> 	.word	2
68c59
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
72,73c63,64
< str_const6:
< 	.word	5
---
> str_const8:
> 	.word	2
82c73
< 	.word	5
---
> 	.word	2
85c76
< 	.word	int_const4
---
> 	.word	int_const5
90c81,82
< str_const4:
---
> str_const3:
> 	.word	2
92c84,92
< 	.word	8
---
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const7:
> 	.word	2
> 	.word	6
95c95
< 	.ascii	"<basic class>"
---
> 	.ascii	"String"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	18
---
> str_const9:
> 	.word	2
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/assignment-val.cl"
---
> 	.word	int_const2
> 	.ascii	"Main"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
117c117,118
< str_const1:
---
> str_const6:
> 	.word	2
119d119
< 	.word	6
121,122c121,122
< 	.word	int_const2
< 	.ascii	"\ny: "
---
> 	.word	int_const1
> 	.ascii	"Int"
126,127c126,127
< str_const0:
< 	.word	5
---
> str_const1:
> 	.word	2
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const3:
> 	.word	1
139c139
< 	.word	1
---
> 	.word	0
142c142
< 	.word	3
---
> 	.word	1
145c145
< 	.word	54
---
> 	.word	1
147,148c147,148
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	1
153,154c153,154
< int_const4:
< 	.word	3
---
> int_const0:
> 	.word	1
157c157
< 	.word	6
---
> 	.word	2
159,160c159,160
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	1
163c163
< 	.word	0
---
> 	.word	3
166c166
< 	.word	3
---
> 	.word	1
171,172c171,172
< int_const1:
< 	.word	3
---
> int_const5:
> 	.word	1
175c175
< 	.word	3
---
> 	.word	6
177,178c177,178
< int_const0:
< 	.word	3
---
> int_const4:
> 	.word	1
181c181
< 	.word	2
---
> 	.word	54
184c184
< 	.word	4
---
> 	.word	5
190c190
< 	.word	4
---
> 	.word	5
203a204,207
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	String_protObj
> 	.word	String_init
208,209d211
< 	.word	Int_protObj
< 	.word	Int_init
212,251c214
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.f
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabInt_dispTabString_dispTabIO_dispTabMain_dispTabBool_dispTab	.word	-1
256a220,225
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
258c227
< 	.word	5
---
> 	.word	2
264,275d232
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
277c234
< 	.word	1
---
> 	.word	3
282c239
< 	.word	2
---
> 	.word	4
284a242,247
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
307c270
< String_init:
---
> Int_init:
321c284
< Bool_init:
---
> String_init:
335c298
< Int_init:
---
> IO_init:
349c312
< IO_init:
---
> Main_init:
356c319
< 	jal	Object_init
---
> 	jal	IO_init
363c326
< Main_init:
---
> Bool_init:
370c333
< 	jal	IO_init
---
> 	jal	Object_init
384,443c347
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
456,486c360,362
< 	la	$s1 int_const0
< 	la	$s1 int_const1
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	la	$s1 int_const2
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	la	$a0 int_const0
> 	sw	$a0 0($fp)
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ spim_outname=assignment-val.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/assignment-val.cl
+ spim_errname=assignment-val.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.spim.out
6,10c6,25
< x: 3
< y: 4
< 4COOL program successfully executed
< Stats -- #instructions : 270
<          #reads : 59  #writes 39  #branches 46  #other 126
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.spim.out.filtered
6,8c6,25
< x: 3
< y: 4
< 4COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/assignment-val.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/assignment-val.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/assignment-val.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ outname=basicequality.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ errname=basicequality.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.out /home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.out /home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.out
13c13
< 	.word	2
---
> 	.word	5
15c15
< 	.word	3
---
> 	.word	2
17c17
< 	.word	4
---
> 	.word	3
28,39c28,30
< str_const9:
< 	.word	4
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const3
< 	.ascii	"Main"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const8:
< 	.word	4
< 	.word	6
---
> str_const2:
> 	.word	3
> 	.word	5
41,42c32
< 	.word	int_const2
< 	.ascii	"String"
---
> 	.word	int_const0
46,47c36,37
< str_const7:
< 	.word	4
---
> str_const6:
> 	.word	3
55,56c45,46
< str_const6:
< 	.word	4
---
> str_const5:
> 	.word	3
60c50
< 	.ascii	"Int"
---
> 	.ascii	"IO"
64,66c54,56
< str_const5:
< 	.word	4
< 	.word	5
---
> str_const4:
> 	.word	3
> 	.word	6
68,69c58,59
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const2
> 	.ascii	"Object"
73,74c63,64
< str_const4:
< 	.word	4
---
> str_const7:
> 	.word	3
78c68
< 	.ascii	"Object"
---
> 	.ascii	"String"
82,84c72,74
< str_const3:
< 	.word	4
< 	.word	8
---
> str_const1:
> 	.word	3
> 	.word	6
86,87c76,77
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const1
> 	.ascii	"hello"
91,93c81,83
< str_const2:
< 	.word	4
< 	.word	18
---
> str_const8:
> 	.word	3
> 	.word	6
95,96c85,86
< 	.word	int_const7
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/basicequality.cl"
---
> 	.word	int_const3
> 	.ascii	"Main"
100,101c90,100
< str_const1:
< 	.word	4
---
> str_const3:
> 	.word	3
> 	.word	8
> 	.word	String_dispTab
> 	.word	int_const5
> 	.ascii	"<basic class>"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const9:
> 	.word	3
104c103,104
< 	.word	int_const0
---
> 	.word	int_const6
> 	.ascii	"Int"
109,110c109,110
< 	.word	4
< 	.word	6
---
> 	.word	3
> 	.word	18
112,113c112,113
< 	.word	int_const1
< 	.ascii	"hello"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/basicequality.cl"
117,118c117,118
< int_const7:
< 	.word	2
---
> int_const0:
> 	.word	5
121c121
< 	.word	53
---
> 	.word	0
123,124c123,124
< int_const6:
< 	.word	2
---
> int_const5:
> 	.word	5
129,130c129,130
< int_const5:
< 	.word	2
---
> int_const4:
> 	.word	5
135,136c135,136
< int_const4:
< 	.word	2
---
> int_const6:
> 	.word	5
142c142
< 	.word	2
---
> 	.word	5
147,148c147,148
< int_const2:
< 	.word	2
---
> int_const1:
> 	.word	5
151c151
< 	.word	6
---
> 	.word	5
153,154c153,154
< int_const1:
< 	.word	2
---
> int_const2:
> 	.word	5
157c157
< 	.word	5
---
> 	.word	6
159,160c159,160
< int_const0:
< 	.word	2
---
> int_const7:
> 	.word	5
163c163
< 	.word	0
---
> 	.word	53
166c166
< 	.word	3
---
> 	.word	2
172c172
< 	.word	3
---
> 	.word	2
188,189d187
< 	.word	Int_protObj
< 	.word	Int_init
196,228c194,196
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabBool_dispTabString_dispTabMain_dispTabInt_dispTab	.word	-1
234,235c202,203
< Main_protObj:
< 	.word	5
---
> IO_protObj:
> 	.word	1
237c205
< 	.word	Main_dispTab
---
> 	.word	IO_dispTab
239c207,208
< String_protObj:
---
> Bool_protObj:
> 	.word	2
240a210,214
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> String_protObj:
> 	.word	3
246,247c220
< Bool_protObj:
< 	.word	3
---
> Main_protObj:
249,250c222,223
< 	.word	Bool_dispTab
< 	.word	0
---
> 	.word	3
> 	.word	Main_dispTab
253c226
< 	.word	2
---
> 	.word	5
257,261d229
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
284c252
< Main_init:
---
> IO_init:
298c266
< String_init:
---
> Bool_init:
312c280
< Bool_init:
---
> String_init:
326c294
< Int_init:
---
> Main_init:
340c308
< IO_init:
---
> Int_init:
355,358c323,326
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
361,493c329,333
< 	la	$s1 bool_const1
< 	la	$t2 bool_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label2
< 	la	$a1 bool_const0
< 	jal	equality_test
< label2:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label1
< label0:
< 	la	$a0 int_const0
< label1:
< 	la	$s1 bool_const1
< 	la	$t2 bool_const1
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label6
< 	la	$a1 bool_const0
< 	jal	equality_test
< label6:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label4
< 	la	$a0 int_const0
< 	b	label5
< label4:
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label5:
< 	la	$s1 str_const0
< 	la	$a0 str_const0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 8($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$t1 $s1
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label10
< 	la	$a1 bool_const0
< 	jal	equality_test
< label10:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label8
< 	la	$a0 int_const0
< 	b	label9
< label8:
< 	move	$a0 $s0
< 	bne	$a0 $zero label12
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label9:
< 	la	$s1 str_const1
< 	move	$s2 $s1
< 	la	$t2 str_const1
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label15
< 	la	$a1 bool_const0
< 	jal	equality_test
< label15:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label13
< 	la	$a0 int_const0
< 	b	label14
< label13:
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label16
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< label14:
< 	la	$s1 int_const1
< 	la	$t2 int_const2
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label19
< 	la	$a1 bool_const0
< 	jal	equality_test
< label19:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label17
< 	move	$a0 $s0
< 	bne	$a0 $zero label20
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label18
< label17:
< 	la	$a0 int_const0
< label18:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ spim_outname=basicequality.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/basicequality.cl
+ spim_errname=basicequality.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.spim.out
6,8c6,25
< COOL program successfully executed
< Stats -- #instructions : 355
<          #reads : 70  #writes 27  #branches 89  #other 169
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.spim.out.filtered
6c6,25
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basicequality.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 196 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basicequality.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/basicequality.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ outname=basic-init.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ errname=basic-init.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.out /home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.out /home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,38c36,38
< str_const11:
< 	.word	5
< 	.word	6
---
> str_const4:
> 	.word	2
> 	.word	7
41c41
< 	.ascii	"String"
---
> 	.ascii	"not void"
45,46c45,46
< str_const10:
< 	.word	5
---
> str_const3:
> 	.word	2
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"void"
55c55
< 	.word	5
---
> 	.word	2
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,65c63,65
< str_const8:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	17
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/basic-init.cl"
72,74c72,74
< str_const7:
< 	.word	5
< 	.word	5
---
> str_const2:
> 	.word	2
> 	.word	6
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"false"
81,82c81,82
< str_const6:
< 	.word	5
---
> str_const8:
> 	.word	2
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const6
> 	.ascii	"String"
91c91
< 	.word	5
---
> 	.word	2
94c94
< 	.word	int_const5
---
> 	.word	int_const7
99c99,100
< str_const4:
---
> str_const11:
> 	.word	2
101d101
< 	.word	17
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/basic-init.cl"
---
> 	.word	int_const8
> 	.ascii	"Int"
108,110c108,110
< str_const3:
< 	.word	5
< 	.word	7
---
> str_const7:
> 	.word	2
> 	.word	6
112,113c112,113
< 	.word	int_const7
< 	.ascii	"not void"
---
> 	.word	int_const2
> 	.ascii	"Bool"
117,118c117,118
< str_const2:
< 	.word	5
---
> str_const1:
> 	.word	2
122c122
< 	.ascii	"void"
---
> 	.ascii	"true"
126,127c126,127
< str_const1:
< 	.word	5
---
> str_const6:
> 	.word	2
130,131c130,131
< 	.word	int_const8
< 	.ascii	"false"
---
> 	.word	int_const6
> 	.ascii	"Object"
135,136c135,136
< str_const0:
< 	.word	5
---
> str_const10:
> 	.word	2
140c140
< 	.ascii	"true"
---
> 	.ascii	"Main"
144,145c144,145
< int_const8:
< 	.word	3
---
> int_const0:
> 	.word	5
148c148
< 	.word	5
---
> 	.word	0
151c151
< 	.word	3
---
> 	.word	5
154c154
< 	.word	8
---
> 	.word	13
156,157c156,157
< int_const6:
< 	.word	3
---
> int_const3:
> 	.word	5
160c160
< 	.word	50
---
> 	.word	2
162,163c162,163
< int_const5:
< 	.word	3
---
> int_const8:
> 	.word	5
166,168d165
< 	.word	13
< 	.word	-1
< int_const4:
169a167,169
> 	.word	-1
> int_const2:
> 	.word	5
172c172
< 	.word	2
---
> 	.word	4
174,175c174,175
< int_const3:
< 	.word	3
---
> int_const5:
> 	.word	5
178c178
< 	.word	3
---
> 	.word	5
180,181c180,181
< int_const2:
< 	.word	3
---
> int_const6:
> 	.word	5
184c184
< 	.word	4
---
> 	.word	6
187c187
< 	.word	3
---
> 	.word	5
190c190
< 	.word	6
---
> 	.word	8
192,193c192,193
< int_const0:
< 	.word	3
---
> int_const4:
> 	.word	5
196c196
< 	.word	0
---
> 	.word	50
199c199
< 	.word	4
---
> 	.word	1
205c205
< 	.word	4
---
> 	.word	1
218a219,222
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	String_protObj
> 	.word	String_init
225,265c229
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabBool_dispTabString_dispTabIO_dispTabMain_dispTabInt_dispTab	.word	-1
271,277d234
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
279c236
< 	.word	4
---
> 	.word	1
284,287c241,245
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	2
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
291c249
< 	.word	1
---
> 	.word	3
296c254
< 	.word	2
---
> 	.word	4
302a261,266
> 	.word	-1
> Int_protObj:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
325c289
< String_init:
---
> Bool_init:
339c303
< Bool_init:
---
> String_init:
353c317
< Int_init:
---
> IO_init:
367c331
< IO_init:
---
> Main_init:
374c338
< 	jal	Object_init
---
> 	jal	IO_init
381c345
< Main_init:
---
> Int_init:
388c352
< 	jal	IO_init
---
> 	jal	Object_init
402,490c366
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label2
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	b	label3
< label2:
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< label3:
< 	lw	$a0 24($s0)
< 	move	$t1 $a0
< 	la	$a0 bool_const1
< 	beqz	$t1 label8
< 	la	$a0 bool_const0
< label8:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label6
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	b	label7
< label6:
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< label7:
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ spim_outname=basic-init.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/basic-init.cl
+ spim_errname=basic-init.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.spim.out
6,8c6,25
< 0falsevoidCOOL program successfully executed
< Stats -- #instructions : 237
<          #reads : 50  #writes 32  #branches 45  #other 110
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.spim.out.filtered
6c6,25
< 0falsevoidCOOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/basic-init.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 229 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/basic-init.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/basic-init.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ outname=bigexample.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ errname=bigexample.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.out /home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.out /home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.out
13c13
< 	.word	2
---
> 	.word	10
15c15
< 	.word	3
---
> 	.word	5
17c17
< 	.word	4
---
> 	.word	15
29c29
< 	.word	4
---
> 	.word	15
36,38c36,38
< str_const43:
< 	.word	4
< 	.word	6
---
> str_const29:
> 	.word	15
> 	.word	5
40,41c40,41
< 	.word	int_const9
< 	.ascii	"Main"
---
> 	.word	int_const2
> 	.ascii	"A"
45,47c45,47
< str_const42:
< 	.word	4
< 	.word	6
---
> str_const30:
> 	.word	15
> 	.word	5
49,50c49,50
< 	.word	int_const4
< 	.ascii	"Child"
---
> 	.word	int_const2
> 	.ascii	"B"
54,55c54,64
< str_const41:
< 	.word	4
---
> str_const31:
> 	.word	15
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const2
> 	.ascii	"C"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const40:
> 	.word	15
63,65c72,74
< str_const40:
< 	.word	4
< 	.word	7
---
> str_const13:
> 	.word	15
> 	.word	5
67,68c76,77
< 	.word	int_const19
< 	.ascii	"Grandparent"
---
> 	.word	int_const0
> 	.ascii	"foo"
72,74c81,83
< str_const39:
< 	.word	4
< 	.word	6
---
> str_const6:
> 	.word	15
> 	.word	7
76,77c85,86
< 	.word	int_const9
< 	.ascii	"Base"
---
> 	.word	int_const7
> 	.ascii	"bigWhile\n"
81,82c90,91
< str_const38:
< 	.word	4
---
> str_const8:
> 	.word	15
86c95,113
< 	.ascii	"C"
---
> 	.ascii	"\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const42:
> 	.word	15
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const5
> 	.ascii	"String"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const20:
> 	.word	15
> 	.word	12
> 	.word	String_dispTab
> 	.word	int_const82
> 	.ascii	"printed via dynamic dispatch\n"
91c118
< 	.word	4
---
> 	.word	15
94,95c121,122
< 	.word	int_const2
< 	.ascii	"B"
---
> 	.word	int_const0
> 	.ascii	"Int"
100c127
< 	.word	4
---
> 	.word	15
103,104c130,131
< 	.word	int_const2
< 	.ascii	"A"
---
> 	.word	int_const3
> 	.ascii	"C1"
108,109c135,136
< str_const35:
< 	.word	4
---
> str_const28:
> 	.word	15
117,118c144,145
< str_const34:
< 	.word	4
---
> str_const35:
> 	.word	15
126,136c153,154
< str_const33:
< 	.word	4
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const3
< 	.ascii	"C1"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const32:
< 	.word	4
---
> str_const34:
> 	.word	15
144,146c162,164
< str_const31:
< 	.word	4
< 	.word	6
---
> str_const14:
> 	.word	15
> 	.word	5
148,149c166,167
< 	.word	int_const5
< 	.ascii	"String"
---
> 	.word	int_const0
> 	.ascii	"bar"
153,155c171,173
< str_const30:
< 	.word	4
< 	.word	6
---
> str_const0:
> 	.word	15
> 	.word	17
157,158c175,176
< 	.word	int_const9
< 	.ascii	"Bool"
---
> 	.word	int_const83
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/bigexample.cl"
162,164c180,182
< str_const29:
< 	.word	4
< 	.word	5
---
> str_const18:
> 	.word	15
> 	.word	8
166,167c184,185
< 	.word	int_const0
< 	.ascii	"Int"
---
> 	.word	int_const22
> 	.ascii	"bigAttrAccess\n"
171,173c189,191
< str_const28:
< 	.word	4
< 	.word	5
---
> str_const15:
> 	.word	15
> 	.word	6
175,176c193,194
< 	.word	int_const3
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"foobar"
180,181c198,199
< str_const27:
< 	.word	4
---
> str_const32:
> 	.word	15
184,185c202,203
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const9
> 	.ascii	"Bool"
189,190c207,208
< str_const26:
< 	.word	4
---
> str_const4:
> 	.word	15
193,194c211,212
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const24
> 	.ascii	"more advanced:\n"
198,199c216,217
< str_const25:
< 	.word	4
---
> str_const11:
> 	.word	15
203c221
< 	.ascii	"looks ok!\n"
---
> 	.ascii	"bigAssign\n"
207,209c225,227
< str_const24:
< 	.word	4
< 	.word	10
---
> str_const41:
> 	.word	15
> 	.word	6
211,212c229,230
< 	.word	int_const82
< 	.ascii	"gonna call doThemAll\n"
---
> 	.word	int_const4
> 	.ascii	"Child"
216,218c234,236
< str_const23:
< 	.word	4
< 	.word	9
---
> str_const5:
> 	.word	15
> 	.word	6
220,221c238,239
< 	.word	int_const83
< 	.ascii	"gonna make a Blah\n"
---
> 	.word	int_const5
> 	.ascii	"bigIf\n"
225,226c243,244
< str_const22:
< 	.word	4
---
> str_const7:
> 	.word	15
230c248
< 	.ascii	"an int: "
---
> 	.ascii	"failed: "
234,236c252,254
< str_const21:
< 	.word	4
< 	.word	14
---
> str_const2:
> 	.word	15
> 	.word	5
238,239c256,257
< 	.word	int_const84
< 	.ascii	"tested static dispatch and 'new IO'\n"
---
> 	.word	int_const3
> 	.ascii	"Hi"
243,245c261,263
< str_const20:
< 	.word	4
< 	.word	12
---
> str_const1:
> 	.word	15
> 	.word	7
247,248c265,266
< 	.word	int_const85
< 	.ascii	"printed via dynamic dispatch\n"
---
> 	.word	int_const7
> 	.ascii	"whassup?!"
252,254c270,272
< str_const19:
< 	.word	4
< 	.word	8
---
> str_const43:
> 	.word	15
> 	.word	5
256,257c274,275
< 	.word	int_const6
< 	.ascii	"hello, world\n"
---
> 	.word	int_const3
> 	.ascii	"IO"
261,263c279,281
< str_const18:
< 	.word	4
< 	.word	8
---
> str_const25:
> 	.word	15
> 	.word	7
265,266c283,284
< 	.word	int_const22
< 	.ascii	"bigAttrAccess\n"
---
> 	.word	int_const11
> 	.ascii	"looks ok!\n"
270,272c288,290
< str_const17:
< 	.word	4
< 	.word	7
---
> str_const23:
> 	.word	15
> 	.word	9
274,275c292,293
< 	.word	int_const26
< 	.ascii	"bigCase\n"
---
> 	.word	int_const84
> 	.ascii	"gonna make a Blah\n"
280c298
< 	.word	4
---
> 	.word	15
288,290c306,308
< str_const15:
< 	.word	4
< 	.word	6
---
> str_const26:
> 	.word	15
> 	.word	8
292,293c310,311
< 	.word	int_const5
< 	.ascii	"foobar"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
297,299c315,317
< str_const14:
< 	.word	4
< 	.word	5
---
> str_const24:
> 	.word	15
> 	.word	10
301,302c319,320
< 	.word	int_const0
< 	.ascii	"bar"
---
> 	.word	int_const85
> 	.ascii	"gonna call doThemAll\n"
306,308c324,326
< str_const13:
< 	.word	4
< 	.word	5
---
> str_const9:
> 	.word	15
> 	.word	7
310,311c328,329
< 	.word	int_const0
< 	.ascii	"foo"
---
> 	.word	int_const26
> 	.ascii	"bigMath\n"
315,317c333,335
< str_const12:
< 	.word	4
< 	.word	7
---
> str_const38:
> 	.word	15
> 	.word	6
319,320c337,338
< 	.word	int_const26
< 	.ascii	"bigSelf\n"
---
> 	.word	int_const9
> 	.ascii	"Base"
324,326c342,344
< str_const11:
< 	.word	4
< 	.word	7
---
> str_const19:
> 	.word	15
> 	.word	8
328,329c346,347
< 	.word	int_const11
< 	.ascii	"bigAssign\n"
---
> 	.word	int_const6
> 	.ascii	"hello, world\n"
334c352
< 	.word	4
---
> 	.word	15
337c355
< 	.word	int_const83
---
> 	.word	int_const84
342,343c360,361
< str_const9:
< 	.word	4
---
> str_const3:
> 	.word	15
347,356c365
< 	.ascii	"bigMath\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const8:
< 	.word	4
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const2
< 	.ascii	"\n"
---
> 	.ascii	"basics:\n"
360,361c369,370
< str_const7:
< 	.word	4
---
> str_const22:
> 	.word	15
365c374
< 	.ascii	"failed: "
---
> 	.ascii	"an int: "
369,370c378,379
< str_const6:
< 	.word	4
---
> str_const17:
> 	.word	15
373,374c382,383
< 	.word	int_const7
< 	.ascii	"bigWhile\n"
---
> 	.word	int_const26
> 	.ascii	"bigCase\n"
378,379c387,388
< str_const5:
< 	.word	4
---
> str_const27:
> 	.word	15
383,392c392
< 	.ascii	"bigIf\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const4:
< 	.word	4
< 	.word	8
< 	.word	String_dispTab
< 	.word	int_const24
< 	.ascii	"more advanced:\n"
---
> 	.ascii	"Object"
396,397c396,397
< str_const3:
< 	.word	4
---
> str_const12:
> 	.word	15
401c401
< 	.ascii	"basics:\n"
---
> 	.ascii	"bigSelf\n"
405,407c405,407
< str_const2:
< 	.word	4
< 	.word	5
---
> str_const39:
> 	.word	15
> 	.word	7
409,410c409,410
< 	.word	int_const3
< 	.ascii	"Hi"
---
> 	.word	int_const19
> 	.ascii	"Grandparent"
414,416c414,416
< str_const1:
< 	.word	4
< 	.word	7
---
> str_const33:
> 	.word	15
> 	.word	6
418,419c418,419
< 	.word	int_const7
< 	.ascii	"whassup?!"
---
> 	.word	int_const9
> 	.ascii	"Main"
423,425c423,425
< str_const0:
< 	.word	4
< 	.word	17
---
> str_const21:
> 	.word	15
> 	.word	14
428c428
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/bigexample.cl"
---
> 	.ascii	"tested static dispatch and 'new IO'\n"
432,433c432,433
< int_const86:
< 	.word	2
---
> int_const21:
> 	.word	10
436c436
< 	.word	50
---
> 	.word	45
438,439c438,439
< int_const85:
< 	.word	2
---
> int_const70:
> 	.word	10
442c442
< 	.word	29
---
> 	.word	390
444,445c444,445
< int_const84:
< 	.word	2
---
> int_const64:
> 	.word	10
448c448
< 	.word	36
---
> 	.word	350
450,451c450,451
< int_const83:
< 	.word	2
---
> int_const65:
> 	.word	10
454c454
< 	.word	18
---
> 	.word	351
456,457c456,457
< int_const82:
< 	.word	2
---
> int_const66:
> 	.word	10
460c460
< 	.word	21
---
> 	.word	352
462,463c462,463
< int_const81:
< 	.word	2
---
> int_const67:
> 	.word	10
466c466
< 	.word	498
---
> 	.word	353
468,469c468,469
< int_const80:
< 	.word	2
---
> int_const52:
> 	.word	10
472c472
< 	.word	496
---
> 	.word	310
474,475c474,475
< int_const79:
< 	.word	2
---
> int_const71:
> 	.word	10
478c478
< 	.word	468
---
> 	.word	399
480,481c480,481
< int_const78:
< 	.word	2
---
> int_const68:
> 	.word	10
484c484
< 	.word	459
---
> 	.word	355
486,487c486,487
< int_const77:
< 	.word	2
---
> int_const53:
> 	.word	10
490c490
< 	.word	453
---
> 	.word	311
492,493c492,493
< int_const76:
< 	.word	2
---
> int_const54:
> 	.word	10
496c496
< 	.word	444
---
> 	.word	312
498,499c498,499
< int_const75:
< 	.word	2
---
> int_const38:
> 	.word	10
502c502
< 	.word	438
---
> 	.word	114
504,505c504,505
< int_const74:
< 	.word	2
---
> int_const55:
> 	.word	10
508c508
< 	.word	426
---
> 	.word	313
510,511c510,511
< int_const73:
< 	.word	2
---
> int_const39:
> 	.word	10
514c514
< 	.word	417
---
> 	.word	115
516,517c516,517
< int_const72:
< 	.word	2
---
> int_const57:
> 	.word	10
520c520
< 	.word	408
---
> 	.word	314
522,523c522,523
< int_const71:
< 	.word	2
---
> int_const42:
> 	.word	10
526c526
< 	.word	399
---
> 	.word	3114
528,529c528,529
< int_const70:
< 	.word	2
---
> int_const40:
> 	.word	10
532c532
< 	.word	390
---
> 	.word	116
534,535c534,535
< int_const69:
< 	.word	2
---
> int_const75:
> 	.word	10
538c538
< 	.word	381
---
> 	.word	438
540,541c540,541
< int_const68:
< 	.word	2
---
> int_const48:
> 	.word	10
544c544
< 	.word	355
---
> 	.word	92
546,547c546,547
< int_const67:
< 	.word	2
---
> int_const83:
> 	.word	10
550c550
< 	.word	353
---
> 	.word	50
552,553c552,553
< int_const66:
< 	.word	2
---
> int_const11:
> 	.word	10
556c556
< 	.word	352
---
> 	.word	10
558,559c558,559
< int_const65:
< 	.word	2
---
> int_const19:
> 	.word	10
562c562
< 	.word	351
---
> 	.word	11
564,565c564,565
< int_const64:
< 	.word	2
---
> int_const18:
> 	.word	10
568c568
< 	.word	350
---
> 	.word	55
570,571c570,571
< int_const63:
< 	.word	2
---
> int_const8:
> 	.word	10
574c574
< 	.word	346
---
> 	.word	99
576,577c576,577
< int_const62:
< 	.word	2
---
> int_const13:
> 	.word	10
580c580
< 	.word	342
---
> 	.word	12
582,583c582,583
< int_const61:
< 	.word	2
---
> int_const6:
> 	.word	10
586c586
< 	.word	341
---
> 	.word	13
588,589c588,589
< int_const60:
< 	.word	2
---
> int_const22:
> 	.word	10
592c592
< 	.word	340
---
> 	.word	14
594,595c594,595
< int_const59:
< 	.word	2
---
> int_const24:
> 	.word	10
598c598
< 	.word	339
---
> 	.word	15
600,601c600,601
< int_const58:
< 	.word	2
---
> int_const37:
> 	.word	10
604c604
< 	.word	327
---
> 	.word	16
606,607c606,607
< int_const57:
< 	.word	2
---
> int_const84:
> 	.word	10
610c610
< 	.word	314
---
> 	.word	18
612,613c612,613
< int_const56:
< 	.word	2
---
> int_const1:
> 	.word	10
616c616
< 	.word	320
---
> 	.word	0
618,619c618,619
< int_const55:
< 	.word	2
---
> int_const56:
> 	.word	10
622c622
< 	.word	313
---
> 	.word	320
624,625c624,625
< int_const54:
< 	.word	2
---
> int_const2:
> 	.word	10
628c628
< 	.word	312
---
> 	.word	1
630,631c630,631
< int_const53:
< 	.word	2
---
> int_const15:
> 	.word	10
634c634
< 	.word	311
---
> 	.word	123
636,637c636,637
< int_const52:
< 	.word	2
---
> int_const3:
> 	.word	10
640,642d639
< 	.word	310
< 	.word	-1
< int_const51:
644,646d640
< 	.word	4
< 	.word	Int_dispTab
< 	.word	106
648,649c642,643
< int_const50:
< 	.word	2
---
> int_const44:
> 	.word	10
652c646
< 	.word	105
---
> 	.word	2116
654,655c648,649
< int_const49:
< 	.word	2
---
> int_const0:
> 	.word	10
658c652
< 	.word	104
---
> 	.word	3
660,661c654,655
< int_const48:
< 	.word	2
---
> int_const76:
> 	.word	10
664c658
< 	.word	92
---
> 	.word	444
666,667c660,661
< int_const47:
< 	.word	2
---
> int_const9:
> 	.word	10
670c664
< 	.word	103
---
> 	.word	4
672,673c666,667
< int_const46:
< 	.word	2
---
> int_const41:
> 	.word	10
676c670
< 	.word	102
---
> 	.word	2114
678,679c672,673
< int_const45:
< 	.word	2
---
> int_const4:
> 	.word	10
682c676
< 	.word	101
---
> 	.word	5
684,685c678,679
< int_const44:
< 	.word	2
---
> int_const5:
> 	.word	10
688c682
< 	.word	2116
---
> 	.word	6
690,691c684,685
< int_const43:
< 	.word	2
---
> int_const25:
> 	.word	10
694c688
< 	.word	84
---
> 	.word	7
696,697c690,691
< int_const42:
< 	.word	2
---
> int_const58:
> 	.word	10
700c694
< 	.word	3114
---
> 	.word	327
702,703c696,697
< int_const41:
< 	.word	2
---
> int_const26:
> 	.word	10
706c700
< 	.word	2114
---
> 	.word	8
708,709c702,703
< int_const40:
< 	.word	2
---
> int_const7:
> 	.word	10
712c706
< 	.word	116
---
> 	.word	9
714,715c708,709
< int_const39:
< 	.word	2
---
> int_const72:
> 	.word	10
718c712
< 	.word	115
---
> 	.word	408
720,721c714,715
< int_const38:
< 	.word	2
---
> int_const85:
> 	.word	10
724c718
< 	.word	114
---
> 	.word	21
726,727c720,721
< int_const37:
< 	.word	2
---
> int_const31:
> 	.word	10
730c724
< 	.word	16
---
> 	.word	65
732,733c726,727
< int_const36:
< 	.word	2
---
> int_const32:
> 	.word	10
736c730
< 	.word	259
---
> 	.word	66
738,739c732,733
< int_const35:
< 	.word	2
---
> int_const20:
> 	.word	10
742c736
< 	.word	258
---
> 	.word	22
744,745c738,739
< int_const34:
< 	.word	2
---
> int_const12:
> 	.word	10
748c742
< 	.word	257
---
> 	.word	24
750,751c744,745
< int_const33:
< 	.word	2
---
> int_const82:
> 	.word	10
754c748
< 	.word	255
---
> 	.word	29
756,757c750,751
< int_const32:
< 	.word	2
---
> int_const16:
> 	.word	10
760c754
< 	.word	66
---
> 	.word	1000
762,763c756,757
< int_const31:
< 	.word	2
---
> int_const27:
> 	.word	10
766c760
< 	.word	65
---
> 	.word	250
768,769c762,763
< int_const30:
< 	.word	2
---
> int_const28:
> 	.word	10
772c766
< 	.word	254
---
> 	.word	251
775c769
< 	.word	2
---
> 	.word	10
780,781c774,775
< int_const28:
< 	.word	2
---
> int_const80:
> 	.word	10
784c778
< 	.word	251
---
> 	.word	496
786,787c780,781
< int_const27:
< 	.word	2
---
> int_const30:
> 	.word	10
790c784
< 	.word	250
---
> 	.word	254
792,793c786,787
< int_const26:
< 	.word	2
---
> int_const77:
> 	.word	10
796c790
< 	.word	8
---
> 	.word	453
798,799c792,793
< int_const25:
< 	.word	2
---
> int_const33:
> 	.word	10
802c796
< 	.word	7
---
> 	.word	255
804,805c798,799
< int_const24:
< 	.word	2
---
> int_const81:
> 	.word	10
808c802
< 	.word	15
---
> 	.word	498
810,811c804,805
< int_const23:
< 	.word	2
---
> int_const34:
> 	.word	10
814c808
< 	.word	75
---
> 	.word	257
816,817c810,811
< int_const22:
< 	.word	2
---
> int_const35:
> 	.word	10
820c814
< 	.word	14
---
> 	.word	258
822,823c816,817
< int_const21:
< 	.word	2
---
> int_const17:
> 	.word	10
826c820
< 	.word	45
---
> 	.word	1234
828,829c822,823
< int_const20:
< 	.word	2
---
> int_const36:
> 	.word	10
832c826
< 	.word	22
---
> 	.word	259
834,835c828,829
< int_const19:
< 	.word	2
---
> int_const78:
> 	.word	10
838c832
< 	.word	11
---
> 	.word	459
840,841c834,835
< int_const18:
< 	.word	2
---
> int_const59:
> 	.word	10
844c838
< 	.word	55
---
> 	.word	339
846,847c840,841
< int_const17:
< 	.word	2
---
> int_const73:
> 	.word	10
850c844
< 	.word	1234
---
> 	.word	417
852,853c846,847
< int_const16:
< 	.word	2
---
> int_const23:
> 	.word	10
856c850
< 	.word	1000
---
> 	.word	75
858,859c852,853
< int_const15:
< 	.word	2
---
> int_const10:
> 	.word	10
862c856
< 	.word	123
---
> 	.word	34
864,865c858,859
< int_const14:
< 	.word	2
---
> int_const86:
> 	.word	10
868c862
< 	.word	100
---
> 	.word	36
870,871c864,865
< int_const13:
< 	.word	2
---
> int_const69:
> 	.word	10
874c868
< 	.word	12
---
> 	.word	381
876,877c870,871
< int_const12:
< 	.word	2
---
> int_const60:
> 	.word	10
880c874
< 	.word	24
---
> 	.word	340
882,883c876,877
< int_const11:
< 	.word	2
---
> int_const61:
> 	.word	10
886c880
< 	.word	10
---
> 	.word	341
888,889c882,883
< int_const10:
< 	.word	2
---
> int_const62:
> 	.word	10
892c886
< 	.word	34
---
> 	.word	342
894,895c888,889
< int_const9:
< 	.word	2
---
> int_const14:
> 	.word	10
897a892,895
> 	.word	100
> 	.word	-1
> int_const45:
> 	.word	10
898a897,898
> 	.word	Int_dispTab
> 	.word	101
900,901c900,901
< int_const8:
< 	.word	2
---
> int_const46:
> 	.word	10
904c904
< 	.word	99
---
> 	.word	102
906,907c906,907
< int_const7:
< 	.word	2
---
> int_const47:
> 	.word	10
910c910
< 	.word	9
---
> 	.word	103
912,913c912,913
< int_const6:
< 	.word	2
---
> int_const63:
> 	.word	10
916c916
< 	.word	13
---
> 	.word	346
918,919c918,919
< int_const5:
< 	.word	2
---
> int_const49:
> 	.word	10
922c922
< 	.word	6
---
> 	.word	104
924,925c924,925
< int_const4:
< 	.word	2
---
> int_const79:
> 	.word	10
928c928
< 	.word	5
---
> 	.word	468
930,931c930,931
< int_const3:
< 	.word	2
---
> int_const50:
> 	.word	10
934c934
< 	.word	2
---
> 	.word	105
936,937c936,937
< int_const2:
< 	.word	2
---
> int_const51:
> 	.word	10
940c940
< 	.word	1
---
> 	.word	106
942,943c942,943
< int_const1:
< 	.word	2
---
> int_const74:
> 	.word	10
946c946
< 	.word	0
---
> 	.word	426
948,949c948,949
< int_const0:
< 	.word	2
---
> int_const43:
> 	.word	10
952c952
< 	.word	3
---
> 	.word	84
955c955
< 	.word	3
---
> 	.word	5
961c961
< 	.word	3
---
> 	.word	5
986,999d985
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< 	.word	P_protObj
< 	.word	P_init
< 	.word	C1_protObj
< 	.word	C1_init
< 	.word	C2_protObj
< 	.word	C2_init
1007a994,1005
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	P_protObj
> 	.word	P_init
> 	.word	C2_protObj
> 	.word	C2_init
> 	.word	C1_protObj
> 	.word	C1_init
> 	.word	Int_protObj
> 	.word	Int_init
1016,1145c1014,1018
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Grandparent_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Parent_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Child_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.e
< 	.word	A.f
< 	.word	A.g
< 	.word	A.i
< 	.word	A.j
< B_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	B.e
< 	.word	A.f
< 	.word	B.g
< 	.word	A.i
< 	.word	A.j
< 	.word	B.h
< 	.word	B.k
< C_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	C.e
< 	.word	A.f
< 	.word	B.g
< 	.word	C.i
< 	.word	A.j
< 	.word	C.h
< 	.word	B.k
< 	.word	C.ell
< Blah_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Blah.tiny
< 	.word	Blah.add
< 	.word	Blah.compare
< 	.word	Blah.compareEq
< 	.word	Blah.isv
< 	.word	Blah.divByZero
< 	.word	Blah.cmp
< 	.word	Blah.ng
< 	.word	Blah.caller
< 	.word	Blah.callee
< 	.word	Blah.get_t
< 	.word	Blah.useLet
< 	.word	Blah.useIf
< 	.word	Blah.useWhile
< 	.word	Blah.useCase
< 	.word	Blah.useNew
< 	.word	Blah.doThemAll
< 	.word	Blah.bigIf
< 	.word	Blah.bigWhile
< 	.word	Blah.bail
< 	.word	Blah.bigMath
< 	.word	Blah.assert
< 	.word	Blah.bigAssign
< 	.word	Blah.setI
< 	.word	Blah.getI
< 	.word	Blah.bigSelf
< 	.word	Blah.bigStrCompare
< 	.word	Blah.bigCase
< 	.word	Blah.bigAttrAccess
< P_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< C2_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	C2.getX
< 	.word	C2.setX
< C1_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	String_protObj
> 	.word	String_init
> 	.word	IO_protObj
> 	.word	IO_init
> Object_dispTabBlah_dispTabA_dispTabB_dispTabC_dispTabBool_dispTabMain_dispTabP_dispTabC2_dispTabC1_dispTabInt_dispTabBase_dispTabGrandparent_dispTabParent_dispTabChild_dispTabString_dispTabIO_dispTab	.word	-1
1150a1024,1057
> Blah_protObj:
> 	.word	1
> 	.word	11
> 	.word	Blah_dispTab
> 	.word	int_const1
> 	.word	bool_const0
> 	.word	str_const44
> 	.word	int_const1
> 	.word	bool_const0
> 	.word	str_const44
> 	.word	0
> 	.word	0
> 	.word	-1
> A_protObj:
> 	.word	2
> 	.word	3
> 	.word	A_dispTab
> 	.word	-1
> B_protObj:
> 	.word	3
> 	.word	3
> 	.word	B_dispTab
> 	.word	-1
> C_protObj:
> 	.word	4
> 	.word	3
> 	.word	C_dispTab
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
1152c1059
< 	.word	16
---
> 	.word	6
1155a1063,1086
> P_protObj:
> 	.word	7
> 	.word	4
> 	.word	P_dispTab
> 	.word	int_const1
> 	.word	-1
> C2_protObj:
> 	.word	8
> 	.word	4
> 	.word	C2_dispTab
> 	.word	int_const1
> 	.word	-1
> C1_protObj:
> 	.word	9
> 	.word	4
> 	.word	C1_dispTab
> 	.word	int_const1
> 	.word	-1
> Int_protObj:
> 	.word	10
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
1157c1088
< 	.word	12
---
> 	.word	11
1165c1096
< 	.word	13
---
> 	.word	12
1176c1107
< 	.word	14
---
> 	.word	13
1190c1121
< 	.word	15
---
> 	.word	14
1207,1252d1137
< A_protObj:
< 	.word	9
< 	.word	3
< 	.word	A_dispTab
< 	.word	-1
< B_protObj:
< 	.word	10
< 	.word	3
< 	.word	B_dispTab
< 	.word	-1
< C_protObj:
< 	.word	11
< 	.word	3
< 	.word	C_dispTab
< 	.word	-1
< Blah_protObj:
< 	.word	8
< 	.word	11
< 	.word	Blah_dispTab
< 	.word	int_const1
< 	.word	bool_const0
< 	.word	str_const44
< 	.word	int_const1
< 	.word	bool_const0
< 	.word	str_const44
< 	.word	0
< 	.word	0
< 	.word	-1
< P_protObj:
< 	.word	5
< 	.word	4
< 	.word	P_dispTab
< 	.word	int_const1
< 	.word	-1
< C2_protObj:
< 	.word	7
< 	.word	4
< 	.word	C2_dispTab
< 	.word	int_const1
< 	.word	-1
< C1_protObj:
< 	.word	6
< 	.word	4
< 	.word	C1_dispTab
< 	.word	int_const1
< 	.word	-1
1254c1139
< 	.word	4
---
> 	.word	15
1260,1271d1144
< Bool_protObj:
< 	.word	3
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
1273c1146
< 	.word	1
---
> 	.word	16
1298c1171
< Main_init:
---
> Blah_init:
1306a1180,1189
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label0:
> 	lw	$t1 8($a0)
> 	lw	$t1 12($t1)
> 	jalr	$t1
> 	la	$a0 bool_const1
> 	move	$a0 $s0
1312c1195
< Base_init:
---
> A_init:
1326c1209
< Grandparent_init:
---
> B_init:
1333c1216
< 	jal	Base_init
---
> 	jal	A_init
1340c1223
< Parent_init:
---
> C_init:
1347c1230
< 	jal	Grandparent_init
---
> 	jal	B_init
1354c1237
< Child_init:
---
> Bool_init:
1361c1244
< 	jal	Parent_init
---
> 	jal	Object_init
1368c1251
< A_init:
---
> Main_init:
1382c1265
< B_init:
---
> P_init:
1389c1272,1273
< 	jal	A_init
---
> 	jal	Object_init
> 	la	$a0 int_const0
1396c1280
< C_init:
---
> C2_init:
1403c1287
< 	jal	B_init
---
> 	jal	P_init
1410c1294
< Blah_init:
---
> C1_init:
1417,1444c1301
< 	jal	Object_init
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 24($s0)
< 	la	$a0 bool_const1
< 	sw	$a0 28($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	la	$t1 Blah_dispTab
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 32($s0)
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	sw	$a0 36($s0)
---
> 	jal	P_init
1451c1308
< P_init:
---
> Int_init:
1459,1460d1315
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
1467c1322
< C2_init:
---
> Base_init:
1474c1329
< 	jal	P_init
---
> 	jal	Object_init
1481c1336
< C1_init:
---
> Grandparent_init:
1488c1343
< 	jal	P_init
---
> 	jal	Base_init
1495c1350
< String_init:
---
> Parent_init:
1502c1357
< 	jal	Object_init
---
> 	jal	Grandparent_init
1509c1364
< Bool_init:
---
> Child_init:
1516c1371
< 	jal	Object_init
---
> 	jal	Parent_init
1523c1378
< Int_init:
---
> String_init:
1551,1739c1406
< Main.main:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	move	$s1 $a0
< 	move	$s2 $zero
< 	la	$a0 str_const19
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	la	$t1 IO_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	la	$a0 str_const20
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	la	$a0 str_const21
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	la	$t1 IO_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	la	$s3 int_const0
< 	la	$a0 str_const22
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	la	$t1 IO_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	sw	$s3 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	la	$t1 IO_dispTab
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	la	$t1 IO_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 str_const23
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label8
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	la	$a0 Blah_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	Blah_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s2 $a0
< 	la	$a0 str_const24
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label9
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label10
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 76($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	la	$a0 str_const25
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< A.e:
---
> Blah.tiny:
1746c1413
< 	la	$a0 int_const1
---
> 	move	$a0 null
1752c1419
< A.f:
---
> Blah.add:
1759c1426
< 	la	$a0 int_const1
---
> 	move	$a0 null
1765c1432
< A.g:
---
> Blah.compare:
1772c1439
< 	la	$a0 int_const1
---
> 	move	$a0 null
1778c1445
< A.i:
---
> Blah.compareEq:
1785d1451
< 	la	$a0 int_const1
1791c1457
< A.j:
---
> Blah.isv:
1798c1464
< 	la	$a0 int_const1
---
> 	move	$a0 null
1804c1470
< B.e:
---
> Blah.divByZero:
1811c1477
< 	la	$a0 int_const1
---
> 	move	$a0 null
1817c1483
< B.g:
---
> Blah.cmp:
1824c1490
< 	la	$a0 int_const1
---
> 	move	$a0 null
1830c1496
< B.h:
---
> Blah.ng:
1837c1503,1506
< 	la	$a0 int_const1
---
> 	jal	Object.copy
> 	lw	$t1 12($a0)
> 	neg	$t1 $t1
> 	sw	$t1 12($a0)
1843c1512
< B.k:
---
> Blah.caller:
1850c1519
< 	la	$a0 int_const1
---
> 	move	$a0 null
1856c1525
< C.e:
---
> Blah.callee:
1863c1532
< 	la	$a0 int_const1
---
> 	move	$a0 null
1867c1536
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
1869c1538
< C.h:
---
> Blah.get_t:
1876c1545
< 	la	$a0 int_const1
---
> 	move	$a0 null
1882c1551,1569
< C.i:
---
> Blah.useLet:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	la	$a0 int_const1
> 	sw	$a0 0($fp)
> 	la	$a0 int_const8
> 	sw	$a0 4($fp)
> 	sw	null 8($fp)
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 24
> 	jr	$ra	
> Blah.useIf:
1889d1575
< 	la	$a0 int_const1
1895c1581
< C.ell:
---
> Blah.useWhile:
1902d1587
< 	la	$a0 int_const1
1908c1593
< Blah.tiny:
---
> Blah.useCase:
1915,1917c1600,1626
< 	la	$a0 str_const2
< 	la	$a0 bool_const0
< 	la	$a0 int_const1
---
> 	move	$a0 $s0
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_case_abort2
> label3:
> 	lw	$t2 0($a0)
> 	blt	$t2 7 label4
> 	bgt	$t2 9 label4
> 	sw	$a0 0($fp)
> 	la	$a0 int_const0
> 	b	label2
> label4:
> 	blt	$t2 4 label5
> 	bgt	$t2 4 label5
> 	sw	$a0 0($fp)
> 	la	$a0 int_const9
> 	b	label2
> label5:
> 	blt	$t2 1 label6
> 	bgt	$t2 1 label6
> 	sw	$a0 0($fp)
> 	la	$a0 int_const4
> 	b	label2
> label6:
> 	jal	_case_abort
> label2:
1923,1942c1632
< Blah.add:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$s1 int_const2
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Blah.compare:
---
> Blah.useNew:
1949,1956c1639
< 	la	$s1 int_const2
< 	la	$a0 int_const3
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label12
< 	la	$a0 bool_const0
< label12:
---
> 	move	$a0 null
1962,1966c1645,1649
< Blah.compareEq:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> Blah.doThemAll:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
1969,1980c1652,1656
< 	la	$s1 int_const2
< 	la	$t2 int_const3
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label13
< 	la	$a1 bool_const0
< 	jal	equality_test
< label13:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
1982c1658
< Blah.isv:
---
> Blah.bigIf:
1989,1994c1665
< 	la	$a0 int_const2
< 	move	$t1 $a0
< 	la	$a0 bool_const1
< 	beqz	$t1 label14
< 	la	$a0 bool_const0
< label14:
---
> 	move	$a0 null
2000,2004c1671,1675
< Blah.divByZero:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> Blah.bigWhile:
> 	addiu	$sp $sp -36
> 	sw	$fp 36($sp)
> 	sw	$s0 32($sp)
> 	sw	$ra 28($sp)
2007,2017c1678,1682
< 	la	$s1 int_const2
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 36($sp)
> 	lw	$s0 32($sp)
> 	lw	$ra 28($sp)
> 	addiu	$sp $sp 36
2019c1684
< Blah.cmp:
---
> Blah.bail:
2026,2031c1691
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label15
< 	la	$a0 bool_const0
< label15:
---
> 	move	$a0 null
2035c1695
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 16
2037c1697
< Blah.ng:
---
> Blah.bigMath:
2044,2048c1704
< 	la	$a0 int_const4
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
---
> 	move	$a0 null
2054,2123c1710
< Blah.caller:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 int_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label16
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	la	$t1 Blah_dispTab
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label17
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label17:
< 	la	$t1 Blah_dispTab
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Blah.callee:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 20($fp)
< 	lw	$a0 16($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< Blah.get_t:
---
> Blah.assert:
2130d1716
< 	lw	$a0 32($s0)
2134c1720
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
2136,2140c1722,1726
< Blah.useLet:
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> Blah.bigAssign:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
2143,2163c1729,1739
< 	la	$s1 int_const1
< 	la	$s2 int_const8
< 	lw	$s3 24($s0)
< 	move	$s4 $s1
< 	move	$a0 $s2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s4 $a0
< 	move	$a0 $s3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 28
---
> 	la	$a0 int_const1
> 	sw	$a0 0($fp)
> 	la	$a0 int_const1
> 	sw	$a0 4($fp)
> 	la	$a0 int_const1
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 24
2165c1741
< Blah.useIf:
---
> Blah.setI:
2172,2203c1748
< 	move	$a0 $s0
< 	bne	$a0 $zero label20
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label18
< 	move	$a0 $s0
< 	bne	$a0 $zero label21
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	b	label19
< label18:
< 	move	$a0 $s0
< 	bne	$a0 $zero label22
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label22:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< label19:
---
> 	lw	$a0 12($fp)
2207c1752
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 16
2209c1754
< Blah.useWhile:
---
> Blah.getI:
2216,2239c1761
< label23:
< 	move	$a0 $s0
< 	bne	$a0 $zero label25
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label25:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label24
< 	move	$a0 $s0
< 	bne	$a0 $zero label26
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label26:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	b	label23
< label24:
< 	move	$a0 $zero
---
> 	move	$a0 null
2245,2249c1767,1771
< Blah.useCase:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> Blah.bigSelf:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
2251a1774
> 	sw	$zero 0($fp)
2253,2282c1776,1782
< 	bne	$a0 $zero label28
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label28:
< 	lw	$t2 0($a0)
< 	blt	$t2 11 label29
< 	bgt	$t2 11 label29
< 	move	$s1 $a0
< 	la	$a0 int_const9
< 	b	label27
< label29:
< 	blt	$t2 8 label30
< 	bgt	$t2 8 label30
< 	move	$s1 $a0
< 	la	$a0 int_const4
< 	b	label27
< label30:
< 	blt	$t2 5 label31
< 	bgt	$t2 7 label31
< 	move	$s1 $a0
< 	la	$a0 int_const0
< 	b	label27
< label31:
< 	jal	_case_abort
< label27:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	sw	$a0 4($fp)
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 24
2284c1784,1829
< Blah.useNew:
---
> Blah.bigStrCompare:
> 	addiu	$sp $sp -32
> 	sw	$fp 32($sp)
> 	sw	$s0 28($sp)
> 	sw	$ra 24($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	la	$a0 str_const13
> 	sw	$a0 0($fp)
> 	la	$a0 str_const14
> 	sw	$a0 4($fp)
> 	la	$a0 str_const15
> 	sw	$a0 8($fp)
> 	la	$a0 str_const44
> 	sw	$a0 12($fp)
> 	la	$a0 str_const44
> 	sw	$a0 16($fp)
> 	move	$a0 null
> 	lw	$fp 32($sp)
> 	lw	$s0 28($sp)
> 	lw	$ra 24($sp)
> 	addiu	$sp $sp 32
> 	jr	$ra	
> Blah.bigCase:
> 	addiu	$sp $sp -44
> 	sw	$fp 44($sp)
> 	sw	$s0 40($sp)
> 	sw	$ra 36($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	sw	$a0 0($fp)
> 	sw	$a0 4($fp)
> 	sw	$a0 8($fp)
> 	sw	$a0 12($fp)
> 	sw	$a0 16($fp)
> 	sw	$a0 20($fp)
> 	la	$a0 int_const1
> 	sw	$a0 24($fp)
> 	sw	$zero 28($fp)
> 	move	$a0 null
> 	lw	$fp 44($sp)
> 	lw	$s0 40($sp)
> 	lw	$ra 36($sp)
> 	addiu	$sp $sp 44
> 	jr	$ra	
> Blah.bigAttrAccess:
2291,2311c1836,1837
< 	la	$a0 Int_protObj
< 	jal	Object.copy
< 	jal	Int_init
< 	la	$a0 Bool_protObj
< 	jal	Object.copy
< 	jal	Bool_init
< 	la	$a0 C_protObj
< 	jal	Object.copy
< 	jal	C_init
< 	la	$a0 Main_protObj
< 	jal	Object.copy
< 	jal	Main_init
< 	la	$t1 class_objTab
< 	lw	$t2 0($s0)
< 	sll	$t2 $t2 3
< 	addu	$t1 $t1 $t2
< 	move	$s1 $t1
< 	lw	$a0 0($t1)
< 	jal	Object.copy
< 	lw	$t1 4($s1)
< 	jalr		$t1
---
> 	sw	$a0 0($fp)
> 	move	$a0 null
2317c1843
< Blah.doThemAll:
---
> A.e:
2324,2560d1849
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label32
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label32:
< 	la	$t1 IO_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label33
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label33:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label34
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label34:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label35
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label35:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label36
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label36:
< 	lw	$t1 8($a0)
< 	lw	$t1 24($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label37
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label37:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label38
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label38:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label39
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label39:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label40
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label40:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label41
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label41:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label42
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label42:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label43
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label43:
< 	lw	$t1 8($a0)
< 	lw	$t1 56($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label44
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label44:
< 	lw	$t1 8($a0)
< 	lw	$t1 60($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label45
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label45:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label46
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label46:
< 	lw	$t1 8($a0)
< 	lw	$t1 68($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label47
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label47:
< 	lw	$t1 8($a0)
< 	lw	$t1 72($t1)
< 	jalr		$t1
< 	la	$a0 str_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label48
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label48:
< 	la	$t1 IO_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label49
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label49:
< 	lw	$t1 8($a0)
< 	lw	$t1 80($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label50
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label50:
< 	lw	$t1 8($a0)
< 	lw	$t1 92($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label51
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label51:
< 	lw	$t1 8($a0)
< 	lw	$t1 100($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label52
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label52:
< 	lw	$t1 8($a0)
< 	lw	$t1 84($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label53
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label53:
< 	lw	$t1 8($a0)
< 	lw	$t1 112($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label54
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label54:
< 	lw	$t1 8($a0)
< 	lw	$t1 116($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label55
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label55:
< 	lw	$t1 8($a0)
< 	lw	$t1 120($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label56
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label56:
< 	lw	$t1 8($a0)
< 	lw	$t1 124($t1)
< 	jalr		$t1
2567c1856
< Blah.bigIf:
---
> A.f:
2574,2709d1862
< 	la	$a0 str_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label57
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label57:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label58
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	beqz	$t1 label60
< 	move	$a0 $s0
< 	bne	$a0 $zero label62
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label62:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label61
< label60:
< 	la	$a0 int_const1
< label61:
< 	b	label59
< label58:
< 	move	$a0 $s0
< 	bne	$a0 $zero label63
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label63:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label59:
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	beqz	$t1 label64
< 	move	$a0 $s0
< 	bne	$a0 $zero label66
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label66:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label65
< label64:
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	beqz	$t1 label67
< 	move	$a0 $s0
< 	bne	$a0 $zero label69
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label69:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label68
< label67:
< 	la	$a0 int_const1
< label68:
< label65:
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label70
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label72
< 	la	$a0 int_const1
< 	b	label73
< label72:
< 	move	$a0 $s0
< 	bne	$a0 $zero label74
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label74:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label73:
< 	b	label71
< label70:
< 	move	$a0 $s0
< 	bne	$a0 $zero label75
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label75:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label71:
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	beqz	$t1 label76
< 	move	$a0 $s0
< 	bne	$a0 $zero label78
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label78:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label77
< label76:
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label79
< 	la	$a0 int_const1
< 	b	label80
< label79:
< 	move	$a0 $s0
< 	bne	$a0 $zero label81
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label81:
< 	la	$t1 Object_dispTab
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label80:
< label77:
2716,2720c1869,1873
< Blah.bigWhile:
< 	addiu	$sp $sp -40
< 	sw	$fp 40($sp)
< 	sw	$s0 36($sp)
< 	sw	$ra 32($sp)
---
> A.g:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
2723,3048c1876,1880
< 	la	$a0 str_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label82
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label82:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$s1 int_const10
< 	la	$s2 int_const1
< label83:
< 	move	$s3 $s1
< 	la	$a0 int_const11
< 	lw	$t1 12($s3)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	ble	$t1 $t2 label86
< 	la	$a0 bool_const0
< label86:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label85
< 	la	$a0 bool_const0
< label85:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label84
< 	move	$s3 $s1
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$s3 $s2
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s2 $a0
< 	b	label83
< label84:
< 	move	$a0 $zero
< 	move	$s3 $s1
< 	la	$t2 int_const11
< 	move	$t1 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label90
< 	la	$a1 bool_const0
< 	jal	equality_test
< label90:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label89
< 	la	$a0 bool_const0
< label89:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label87
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label91
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label91:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	b	label88
< label87:
< 	move	$s3 $s2
< 	la	$t2 int_const12
< 	move	$t1 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label95
< 	la	$a1 bool_const0
< 	jal	equality_test
< label95:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label94
< 	la	$a0 bool_const0
< label94:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label92
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label96
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label96:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	b	label93
< label92:
< 	move	$a0 $s0
< label93:
< label88:
< 	la	$s1 int_const1
< 	la	$s2 int_const1
< 	la	$s3 int_const1
< 	la	$s4 int_const1
< 	la	$s5 int_const1
< 	la	$s6 int_const1
< 	la	$s1 int_const1
< label97:
< 	sw	$s1 24($fp)
< 	la	$a0 int_const11
< 	lw	$t1 24($fp)
< 	lw	$t1 12($t1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label99
< 	la	$a0 bool_const0
< label99:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label98
< 	la	$s2 int_const1
< label100:
< 	sw	$s2 24($fp)
< 	la	$a0 int_const11
< 	lw	$t1 24($fp)
< 	lw	$t1 12($t1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label102
< 	la	$a0 bool_const0
< label102:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label101
< 	la	$s3 int_const1
< label103:
< 	sw	$s3 24($fp)
< 	la	$a0 int_const11
< 	lw	$t1 24($fp)
< 	lw	$t1 12($t1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label105
< 	la	$a0 bool_const0
< label105:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label104
< 	sw	$s3 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s3 $a0
< 	sw	$s6 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s6 $a0
< 	b	label103
< label104:
< 	move	$a0 $zero
< 	sw	$s2 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s2 $a0
< 	sw	$s5 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s5 $a0
< 	b	label100
< label101:
< 	move	$a0 $zero
< 	sw	$s1 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	sw	$s4 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s4 $a0
< 	b	label97
< label98:
< 	move	$a0 $zero
< 	sw	$s4 24($fp)
< 	la	$t2 int_const11
< 	lw	$t1 24($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label106
< 	la	$a1 bool_const0
< 	jal	equality_test
< label106:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const13
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label107
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label107:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s5 24($fp)
< 	la	$t2 int_const14
< 	lw	$t1 24($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label108
< 	la	$a1 bool_const0
< 	jal	equality_test
< label108:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const15
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label109
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label109:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s6 24($fp)
< 	la	$t2 int_const16
< 	lw	$t1 24($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label110
< 	la	$a1 bool_const0
< 	jal	equality_test
< label110:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const17
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label111
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label111:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	lw	$fp 40($sp)
< 	lw	$s0 36($sp)
< 	lw	$ra 32($sp)
< 	addiu	$sp $sp 40
---
> 	la	$a0 int_const1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
3050c1882
< Blah.bail:
---
> A.i:
3057,3101c1889
< 	la	$a0 str_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label112
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label112:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label113
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label113:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label114
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label114:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label115
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label115:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
---
> 	la	$a0 int_const1
3105c1893
< 	addiu	$sp $sp 16
---
> 	addiu	$sp $sp 12
3107,3111c1895,1899
< Blah.bigMath:
< 	addiu	$sp $sp -48
< 	sw	$fp 48($sp)
< 	sw	$s0 44($sp)
< 	sw	$ra 40($sp)
---
> A.j:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
3114,3130d1901
< 	la	$s1 int_const2
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label118
< 	la	$a1 bool_const0
< 	jal	equality_test
< label118:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label116
3132,3797c1903,1914
< 	b	label117
< label116:
< 	la	$a0 int_const18
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label119
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label119:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label117:
< 	la	$a0 str_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label120
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label120:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$s1 int_const2
< 	la	$t2 int_const2
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label123
< 	la	$a1 bool_const0
< 	jal	equality_test
< label123:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label121
< 	la	$s1 int_const2
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label126
< 	la	$a1 bool_const0
< 	jal	equality_test
< label126:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label124
< 	la	$s1 int_const4
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const3
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label129
< 	la	$a1 bool_const0
< 	jal	equality_test
< label129:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label127
< 	la	$s1 int_const19
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const20
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label132
< 	la	$a1 bool_const0
< 	jal	equality_test
< label132:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label130
< 	la	$s1 int_const8
< 	la	$a0 int_const19
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const7
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label135
< 	la	$a1 bool_const0
< 	jal	equality_test
< label135:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label133
< 	la	$s1 int_const21
< 	la	$a0 int_const22
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$s2 int_const23
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const14
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const7
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label138
< 	la	$a1 bool_const0
< 	jal	equality_test
< label138:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label136
< 	la	$s1 int_const14
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label141
< 	la	$a1 bool_const0
< 	jal	equality_test
< label141:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label139
< 	la	$s1 int_const2
< 	la	$s2 int_const3
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const5
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label144
< 	la	$a1 bool_const0
< 	jal	equality_test
< label144:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label142
< 	la	$s1 int_const2
< 	la	$s2 int_const3
< 	la	$s3 int_const0
< 	la	$s4 int_const9
< 	la	$a0 int_const4
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const24
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label147
< 	la	$a1 bool_const0
< 	jal	equality_test
< label147:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label145
< 	la	$s1 int_const2
< 	la	$s2 int_const3
< 	la	$s3 int_const0
< 	la	$s4 int_const9
< 	la	$s5 int_const4
< 	la	$s6 int_const5
< 	la	$a0 int_const25
< 	sw	$a0 24($fp)
< 	la	$a0 int_const26
< 	sw	$a0 28($fp)
< 	la	$a0 int_const7
< 	sw	$a0 32($fp)
< 	la	$a0 int_const11
< 	jal	Object.copy
< 	lw	$t1 32($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 28($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s6)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s5)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const18
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label150
< 	la	$a1 bool_const0
< 	jal	equality_test
< label150:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label148
< 	la	$a0 bool_const1
< 	b	label149
< label148:
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label151
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label151:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label149:
< 	b	label146
< label145:
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label152
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label152:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label146:
< 	b	label143
< label142:
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label153
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label153:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label143:
< 	b	label140
< label139:
< 	la	$a0 int_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label154
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label154:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label140:
< 	b	label137
< label136:
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label155
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label155:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label137:
< 	b	label134
< label133:
< 	la	$a0 int_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label156
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label156:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label134:
< 	b	label131
< label130:
< 	la	$a0 int_const25
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label157
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label157:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label131:
< 	b	label128
< label127:
< 	la	$a0 int_const26
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label158
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label158:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label128:
< 	b	label125
< label124:
< 	la	$a0 int_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label159
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label159:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label125:
< 	b	label122
< label121:
< 	la	$a0 int_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label160
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label160:
< 	lw	$t1 8($a0)
< 	lw	$t1 88($t1)
< 	jalr		$t1
< label122:
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label161
< 	la	$a0 bool_const0
< label161:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const27
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label162
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label162:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label164
< 	la	$a0 bool_const0
< label164:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label163
< 	la	$a0 bool_const0
< label163:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const28
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label165
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label165:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$s1 int_const0
< 	la	$a0 int_const9
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label166
< 	la	$a0 bool_const0
< label166:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const29
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label167
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label167:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$s1 int_const0
< 	la	$a0 int_const0
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label169
< 	la	$a0 bool_const0
< label169:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label168
< 	la	$a0 bool_const0
< label168:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const30
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label170
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label170:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$s1 int_const31
< 	la	$a0 int_const32
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	ble	$t1 $t2 label171
< 	la	$a0 bool_const0
< label171:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const33
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label172
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label172:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$s1 int_const31
< 	la	$a0 int_const31
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	ble	$t1 $t2 label173
< 	la	$a0 bool_const0
< label173:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const33
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label174
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label174:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$s2 int_const1
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$t1 $s1
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label175
< 	la	$a1 bool_const0
< 	jal	equality_test
< label175:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const34
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label176
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label176:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label177
< 	la	$a0 bool_const0
< label177:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const35
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label178
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label178:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> B.e:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
3799,3828c1916,1919
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const1
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label179
< 	la	$a1 bool_const0
< 	jal	equality_test
< label179:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const36
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label180
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label180:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$fp 48($sp)
< 	lw	$s0 44($sp)
< 	lw	$ra 40($sp)
< 	addiu	$sp $sp 48
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
3830c1921
< Blah.assert:
---
> B.g:
3837,3888c1928
< 	lw	$a0 16($fp)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label181
< 	la	$a0 bool_const1
< 	b	label182
< label181:
< 	la	$a0 str_const10
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label183
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label183:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label184
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label184:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	bne	$a0 $zero label185
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label185:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label186
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label186:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< label182:
---
> 	la	$a0 int_const1
3892c1932
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 12
3894,4570c1934,1945
< Blah.bigAssign:
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$s1 int_const1
< 	la	$s2 int_const1
< 	la	$s3 int_const1
< 	la	$a0 str_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label187
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label187:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s1
< 	la	$t2 int_const1
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label188
< 	la	$a1 bool_const0
< 	jal	equality_test
< label188:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label189
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label189:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const1
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label190
< 	la	$a1 bool_const0
< 	jal	equality_test
< label190:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label191
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label191:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s3
< 	la	$t2 int_const1
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label192
< 	la	$a1 bool_const0
< 	jal	equality_test
< label192:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label193
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label193:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$s1 int_const2
< 	la	$s2 int_const3
< 	la	$s3 int_const0
< 	move	$s4 $s1
< 	la	$t2 int_const2
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label194
< 	la	$a1 bool_const0
< 	jal	equality_test
< label194:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label195
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label195:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const3
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label196
< 	la	$a1 bool_const0
< 	jal	equality_test
< label196:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label197
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label197:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s3
< 	la	$t2 int_const0
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label198
< 	la	$a1 bool_const0
< 	jal	equality_test
< label198:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label199
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label199:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$s3 int_const2
< 	la	$s2 int_const3
< 	la	$s1 int_const0
< 	move	$s4 $s3
< 	la	$t2 int_const2
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label200
< 	la	$a1 bool_const0
< 	jal	equality_test
< label200:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const22
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label201
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label201:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const3
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label202
< 	la	$a1 bool_const0
< 	jal	equality_test
< label202:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const24
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label203
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label203:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s1
< 	la	$t2 int_const0
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label204
< 	la	$a1 bool_const0
< 	jal	equality_test
< label204:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const37
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label205
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label205:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$s2 int_const5
< 	move	$s1 $s2
< 	move	$s4 $s1
< 	la	$t2 int_const5
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label206
< 	la	$a1 bool_const0
< 	jal	equality_test
< label206:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const38
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label207
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label207:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const5
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label208
< 	la	$a1 bool_const0
< 	jal	equality_test
< label208:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const39
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label209
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label209:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s3
< 	la	$t2 int_const2
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label210
< 	la	$a1 bool_const0
< 	jal	equality_test
< label210:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const40
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label211
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label211:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$a0 int_const9
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$s4 $s1
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s2 $a0
< 	move	$s4 $s1
< 	move	$a0 $s2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s4 $a0
< 	la	$a0 int_const22
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s3 $a0
< 	move	$s4 $s2
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s2 $a0
< 	move	$s4 $s1
< 	la	$t2 int_const11
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label212
< 	la	$a1 bool_const0
< 	jal	equality_test
< label212:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const41
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label213
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label213:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const26
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label214
< 	la	$a1 bool_const0
< 	jal	equality_test
< label214:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const42
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label215
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label215:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s3
< 	la	$t2 int_const43
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label216
< 	la	$a1 bool_const0
< 	jal	equality_test
< label216:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const44
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label217
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label217:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s1 $s2
< 	move	$s2 $s3
< 	move	$s3 $s1
< 	move	$s4 $s1
< 	la	$t2 int_const26
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label218
< 	la	$a1 bool_const0
< 	jal	equality_test
< label218:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const45
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label219
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label219:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const43
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label220
< 	la	$a1 bool_const0
< 	jal	equality_test
< label220:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const46
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label221
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label221:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s3
< 	la	$t2 int_const26
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label222
< 	la	$a1 bool_const0
< 	jal	equality_test
< label222:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const47
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label223
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label223:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s1
< 	move	$a0 $s2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s4 $a0
< 	la	$t2 int_const48
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label224
< 	la	$a1 bool_const0
< 	jal	equality_test
< label224:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const49
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label225
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label225:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s1
< 	la	$t2 int_const26
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label226
< 	la	$a1 bool_const0
< 	jal	equality_test
< label226:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const50
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label227
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label227:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	la	$t2 int_const43
< 	move	$t1 $s4
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label228
< 	la	$a1 bool_const0
< 	jal	equality_test
< label228:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const51
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label229
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label229:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 28
---
> B.h:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	la	$a0 int_const1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
4572c1947
< Blah.setI:
---
> B.k:
4579,4580c1954
< 	lw	$a0 12($fp)
< 	sw	$a0 12($s0)
---
> 	la	$a0 int_const1
4584c1958
< 	addiu	$sp $sp 16
---
> 	addiu	$sp $sp 12
4586c1960
< Blah.getI:
---
> C.e:
4593c1967
< 	lw	$a0 12($s0)
---
> 	la	$a0 int_const1
4599,4603c1973,1977
< Blah.bigSelf:
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> C.h:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
4606,4986c1980,1984
< 	move	$s1 $zero
< 	move	$s2 $s0
< 	la	$a0 Blah_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	Blah_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	la	$a0 str_const12
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label230
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label230:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 bool_const1
< 	beqz	$s1 label231
< 	la	$a0 bool_const0
< label231:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const52
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label232
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label232:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s1
< 	move	$t1 $s4
< 	move	$t2 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label234
< 	la	$a1 bool_const0
< 	jal	equality_test
< label234:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label233
< 	la	$a0 bool_const0
< label233:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const53
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label235
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label235:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s2
< 	move	$t1 $s4
< 	move	$t2 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label237
< 	la	$a1 bool_const0
< 	jal	equality_test
< label237:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label236
< 	la	$a0 bool_const0
< label236:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const54
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label238
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label238:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $s1
< 	move	$t1 $s4
< 	move	$t2 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label240
< 	la	$a1 bool_const0
< 	jal	equality_test
< label240:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label239
< 	la	$a0 bool_const0
< label239:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const55
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label241
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label241:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label242
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label242:
< 	lw	$t1 8($a0)
< 	lw	$t1 104($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 int_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label243
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label243:
< 	lw	$t1 8($a0)
< 	lw	$t1 104($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label246
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label246:
< 	lw	$t1 8($a0)
< 	lw	$t1 108($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $a0
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label247
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label247:
< 	lw	$t1 8($a0)
< 	lw	$t1 108($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	move	$t1 $s4
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label245
< 	la	$a1 bool_const0
< 	jal	equality_test
< label245:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label244
< 	la	$a0 bool_const0
< label244:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const56
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label248
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label248:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s3 $s0
< 	move	$s4 $s2
< 	move	$t1 $s4
< 	move	$t2 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label249
< 	la	$a1 bool_const0
< 	jal	equality_test
< label249:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const57
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label250
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label250:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label251
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label251:
< 	lw	$t1 8($a0)
< 	lw	$t1 104($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 int_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label252
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label252:
< 	lw	$t1 8($a0)
< 	lw	$t1 104($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label254
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label254:
< 	lw	$t1 8($a0)
< 	lw	$t1 108($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $a0
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label255
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label255:
< 	lw	$t1 8($a0)
< 	lw	$t1 108($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	move	$t1 $s4
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label253
< 	la	$a1 bool_const0
< 	jal	equality_test
< label253:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const58
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label256
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label256:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 28
---
> 	la	$a0 int_const1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
4988,4992c1986,1990
< Blah.bigStrCompare:
< 	addiu	$sp $sp -36
< 	sw	$fp 36($sp)
< 	sw	$s0 32($sp)
< 	sw	$ra 28($sp)
---
> C.i:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
4995,5191d1992
< 	la	$s1 str_const13
< 	la	$s2 str_const14
< 	la	$s3 str_const15
< 	la	$s4 str_const44
< 	la	$s5 str_const44
< 	la	$a0 str_const16
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label257
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label257:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s1
< 	move	$t1 $s6
< 	move	$t2 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label259
< 	la	$a1 bool_const0
< 	jal	equality_test
< label259:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label258
< 	la	$a0 bool_const0
< label258:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const59
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label260
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label260:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s1
< 	la	$t2 str_const13
< 	move	$t1 $s6
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label261
< 	la	$a1 bool_const0
< 	jal	equality_test
< label261:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const60
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label262
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label262:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s2
< 	la	$t2 str_const14
< 	move	$t1 $s6
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label263
< 	la	$a1 bool_const0
< 	jal	equality_test
< label263:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const61
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label264
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label264:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s4
< 	move	$t1 $s6
< 	move	$t2 $s5
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label265
< 	la	$a1 bool_const0
< 	jal	equality_test
< label265:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const62
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label266
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label266:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s4
< 	move	$t1 $s6
< 	move	$t2 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label268
< 	la	$a1 bool_const0
< 	jal	equality_test
< label268:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label267
< 	la	$a0 bool_const0
< label267:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const63
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label269
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label269:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
5193,5469c1994,1997
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label270
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label270:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s4 $a0
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label271
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label271:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s5 $a0
< 	move	$s6 $s4
< 	move	$t1 $s6
< 	move	$t2 $s5
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label273
< 	la	$a1 bool_const0
< 	jal	equality_test
< label273:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label272
< 	la	$a0 bool_const0
< label272:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const64
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label274
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label274:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s4
< 	move	$t1 $s6
< 	move	$t2 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label275
< 	la	$a1 bool_const0
< 	jal	equality_test
< label275:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const65
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label276
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label276:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s5
< 	move	$t1 $s6
< 	move	$t2 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label277
< 	la	$a1 bool_const0
< 	jal	equality_test
< label277:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const66
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label278
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label278:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $s4
< 	move	$t1 $s6
< 	move	$t2 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label280
< 	la	$a1 bool_const0
< 	jal	equality_test
< label280:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label279
< 	la	$a0 bool_const0
< label279:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const67
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label281
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label281:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label283
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label283:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $a0
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label284
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label284:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	move	$t1 $s6
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label282
< 	la	$a1 bool_const0
< 	jal	equality_test
< label282:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const68
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	bne	$a0 $zero label285
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label285:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$fp 36($sp)
< 	lw	$s0 32($sp)
< 	lw	$ra 28($sp)
< 	addiu	$sp $sp 36
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
5471,5475c1999,2003
< Blah.bigCase:
< 	addiu	$sp $sp -48
< 	sw	$fp 48($sp)
< 	sw	$s0 44($sp)
< 	sw	$ra 40($sp)
---
> C.ell:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
5478,5531d2005
< 	la	$a0 A_protObj
< 	jal	Object.copy
< 	jal	A_init
< 	move	$s1 $a0
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	B_init
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 C_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	C_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	la	$a0 P_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	P_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $a0
< 	la	$a0 C1_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	jal	C1_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	move	$s5 $a0
< 	la	$a0 C2_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	jal	C2_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	move	$s6 $a0
5533,6312c2007,2010
< 	sw	$a0 24($fp)
< 	sw	$zero 28($fp)
< 	la	$a0 str_const17
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label286
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label286:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s5 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label288
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label288:
< 	lw	$t2 0($a0)
< 	blt	$t2 9 label289
< 	bgt	$t2 11 label289
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label287
< label289:
< 	blt	$t2 7 label290
< 	bgt	$t2 7 label290
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label287
< label290:
< 	blt	$t2 6 label291
< 	bgt	$t2 6 label291
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label287
< label291:
< 	blt	$t2 0 label292
< 	bgt	$t2 16 label292
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label287
< label292:
< 	jal	_case_abort
< label287:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const3
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label293
< 	la	$a1 bool_const0
< 	jal	equality_test
< label293:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const69
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label294
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label294:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s5 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label296
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label296:
< 	lw	$t2 0($a0)
< 	blt	$t2 9 label297
< 	bgt	$t2 11 label297
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label295
< label297:
< 	blt	$t2 7 label298
< 	bgt	$t2 7 label298
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label295
< label298:
< 	blt	$t2 5 label299
< 	bgt	$t2 7 label299
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label295
< label299:
< 	blt	$t2 0 label300
< 	bgt	$t2 16 label300
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label295
< label300:
< 	jal	_case_abort
< label295:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const3
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label301
< 	la	$a1 bool_const0
< 	jal	equality_test
< label301:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const70
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label302
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label302:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s6 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label304
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label304:
< 	lw	$t2 0($a0)
< 	blt	$t2 9 label305
< 	bgt	$t2 11 label305
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label303
< label305:
< 	blt	$t2 7 label306
< 	bgt	$t2 7 label306
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label303
< label306:
< 	blt	$t2 5 label307
< 	bgt	$t2 7 label307
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label303
< label307:
< 	blt	$t2 0 label308
< 	bgt	$t2 16 label308
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label303
< label308:
< 	jal	_case_abort
< label303:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const0
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label309
< 	la	$a1 bool_const0
< 	jal	equality_test
< label309:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const71
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label310
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label310:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s5 28($fp)
< 	bne	$s2 $zero label312
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label312:
< 	lw	$t2 0($s2)
< 	blt	$t2 9 label313
< 	bgt	$t2 11 label313
< 	sw	$s2 32($fp)
< 	la	$a0 int_const2
< 	b	label311
< label313:
< 	blt	$t2 7 label314
< 	bgt	$t2 7 label314
< 	sw	$s2 32($fp)
< 	la	$a0 int_const0
< 	b	label311
< label314:
< 	blt	$t2 6 label315
< 	bgt	$t2 6 label315
< 	sw	$s2 32($fp)
< 	la	$a0 int_const3
< 	b	label311
< label315:
< 	blt	$t2 0 label316
< 	bgt	$t2 16 label316
< 	sw	$s2 32($fp)
< 	la	$a0 int_const9
< 	b	label311
< label316:
< 	jal	_case_abort
< label311:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const2
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label317
< 	la	$a1 bool_const0
< 	jal	equality_test
< label317:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const72
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label318
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label318:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s2 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label320
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label320:
< 	lw	$t2 0($a0)
< 	blt	$t2 11 label321
< 	bgt	$t2 11 label321
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label319
< label321:
< 	blt	$t2 10 label322
< 	bgt	$t2 11 label322
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label319
< label322:
< 	blt	$t2 9 label323
< 	bgt	$t2 11 label323
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label319
< label323:
< 	jal	_case_abort
< label319:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const3
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label324
< 	la	$a1 bool_const0
< 	jal	equality_test
< label324:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const73
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label325
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label325:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s3 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label327
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label327:
< 	lw	$t2 0($a0)
< 	blt	$t2 11 label328
< 	bgt	$t2 11 label328
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label326
< label328:
< 	blt	$t2 10 label329
< 	bgt	$t2 11 label329
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label326
< label329:
< 	blt	$t2 9 label330
< 	bgt	$t2 11 label330
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label326
< label330:
< 	blt	$t2 0 label331
< 	bgt	$t2 16 label331
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label326
< label331:
< 	jal	_case_abort
< label326:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const0
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label332
< 	la	$a1 bool_const0
< 	jal	equality_test
< label332:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const74
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label333
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label333:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s5 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label335
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label335:
< 	lw	$t2 0($a0)
< 	blt	$t2 11 label336
< 	bgt	$t2 11 label336
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label334
< label336:
< 	blt	$t2 10 label337
< 	bgt	$t2 11 label337
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label334
< label337:
< 	blt	$t2 9 label338
< 	bgt	$t2 11 label338
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label334
< label338:
< 	blt	$t2 0 label339
< 	bgt	$t2 16 label339
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label334
< label339:
< 	jal	_case_abort
< label334:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const9
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label340
< 	la	$a1 bool_const0
< 	jal	equality_test
< label340:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const75
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label341
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label341:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s2 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label343
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label343:
< 	lw	$t2 0($a0)
< 	blt	$t2 0 label344
< 	bgt	$t2 16 label344
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label342
< label344:
< 	jal	_case_abort
< label342:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const9
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label345
< 	la	$a1 bool_const0
< 	jal	equality_test
< label345:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const76
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label346
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label346:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 bool_const1
< 	sw	$a0 28($fp)
< 	lw	$a0 28($fp)
< 	bne	$a0 $zero label348
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label348:
< 	lw	$t2 0($a0)
< 	blt	$t2 11 label349
< 	bgt	$t2 11 label349
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label347
< label349:
< 	blt	$t2 10 label350
< 	bgt	$t2 11 label350
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label347
< label350:
< 	blt	$t2 3 label351
< 	bgt	$t2 3 label351
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label347
< label351:
< 	jal	_case_abort
< label347:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const2
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label352
< 	la	$a1 bool_const0
< 	jal	equality_test
< label352:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const77
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label353
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label353:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 int_const3
< 	sw	$a0 28($fp)
< 	la	$a0 int_const0
< 	bne	$a0 $zero label355
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label355:
< 	lw	$t2 0($a0)
< 	blt	$t2 0 label356
< 	bgt	$t2 16 label356
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label354
< label356:
< 	jal	_case_abort
< label354:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const9
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label357
< 	la	$a1 bool_const0
< 	jal	equality_test
< label357:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const78
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label358
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label358:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 str_const15
< 	sw	$a0 28($fp)
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const15
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label360
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label360:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	bne	$a0 $zero label361
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label361:
< 	lw	$t2 0($a0)
< 	blt	$t2 11 label362
< 	bgt	$t2 11 label362
< 	sw	$a0 32($fp)
< 	la	$a0 int_const0
< 	b	label359
< label362:
< 	blt	$t2 4 label363
< 	bgt	$t2 4 label363
< 	sw	$a0 32($fp)
< 	la	$a0 int_const3
< 	b	label359
< label363:
< 	blt	$t2 3 label364
< 	bgt	$t2 3 label364
< 	sw	$a0 32($fp)
< 	la	$a0 int_const2
< 	b	label359
< label364:
< 	blt	$t2 0 label365
< 	bgt	$t2 16 label365
< 	sw	$a0 32($fp)
< 	la	$a0 int_const9
< 	b	label359
< label365:
< 	jal	_case_abort
< label359:
< 	sw	$a0 24($fp)
< 	lw	$a0 24($fp)
< 	sw	$a0 32($fp)
< 	la	$t2 int_const3
< 	lw	$t1 32($fp)
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label366
< 	la	$a1 bool_const0
< 	jal	equality_test
< label366:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const79
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label367
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label367:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	lw	$fp 48($sp)
< 	lw	$s0 44($sp)
< 	lw	$ra 40($sp)
< 	addiu	$sp $sp 48
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
6314,6318c2012,2016
< Blah.bigAttrAccess:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> Main.main:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
6321,6426c2019,2025
< 	la	$a0 C2_protObj
< 	jal	Object.copy
< 	jal	C2_init
< 	move	$s1 $a0
< 	la	$a0 str_const18
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 36($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label368
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label368:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label370
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label370:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$t2 int_const0
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label369
< 	la	$a1 bool_const0
< 	jal	equality_test
< label369:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const80
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label371
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label371:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label372
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label372:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label374
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label374:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$t2 int_const4
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label373
< 	la	$a1 bool_const0
< 	jal	equality_test
< label373:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const81
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label375
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label375:
< 	lw	$t1 8($a0)
< 	lw	$t1 96($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	sw	$a0 0($fp)
> 	sw	$zero 4($fp)
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 24
6435c2034
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
6449d2047
< 	sw	$a0 12($s0)
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ spim_outname=bigexample.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/bigexample.cl
+ spim_errname=bigexample.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.spim.out
6,25c6,47
< hello, world
< printed via dynamic dispatch
< tested static dispatch and 'new IO'
< an int: 3
< gonna make a Blah
< gonna call doThemAll
< basics:
< more advanced:
< bigIf
< bigMath
< bigAssign
< bigWhile
< bigSelf
< bigStrCompare
< bigCase
< bigAttrAccess
< looks ok!
< COOL program successfully executed
< Stats -- #instructions : 170880
<          #reads : 36998  #writes 23344  #branches 37691  #other 72847
---
> The following symbols are undefined:
> Parent_protObj
> heap_start
> C1_protObj
> A_init
> Grandparent_protObj
> Base_init
> Int_protObj
> C_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Grandparent_init
> Bool_init
> String_protObj
> B_protObj
> P_protObj
> IO_init
> Int_init
> Int_dispTab
> P_init
> String_init
> Object_init
> Parent_init
> A_protObj
> IO_protObj
> Child_init
> Main_protObj
> String_dispTab
> Child_protObj
> C2_init
> C2_protObj
> Main_init
> Bool_protObj
> C_init
> Blah_init
> C1_init
> Blah_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.spim.out.filtered
6,23c6,47
< hello, world
< printed via dynamic dispatch
< tested static dispatch and 'new IO'
< an int: 3
< gonna make a Blah
< gonna call doThemAll
< basics:
< more advanced:
< bigIf
< bigMath
< bigAssign
< bigWhile
< bigSelf
< bigStrCompare
< bigCase
< bigAttrAccess
< looks ok!
< COOL program successfully executed
---
> The following symbols are undefined:
> Parent_protObj
> heap_start
> C1_protObj
> A_init
> Grandparent_protObj
> Base_init
> Int_protObj
> C_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Grandparent_init
> Bool_init
> String_protObj
> B_protObj
> P_protObj
> IO_init
> Int_init
> Int_dispTab
> P_init
> String_init
> Object_init
> Parent_init
> A_protObj
> IO_protObj
> Child_init
> Main_protObj
> String_dispTab
> Child_protObj
> C2_init
> C2_protObj
> Main_init
> Bool_protObj
> C_init
> Blah_init
> C1_init
> Blah_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexample.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 1018 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexample.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/bigexample.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ outname=bigexpr.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ errname=bigexpr.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.out /home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.out /home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.out
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,37c36,37
< str_const7:
< 	.word	5
---
> str_const3:
> 	.word	2
40,41c40,41
< 	.word	int_const4
< 	.ascii	"String"
---
> 	.word	int_const3
> 	.ascii	"Bool"
45a46
> 	.word	2
47d47
< 	.word	6
49,50c49,50
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const7
> 	.ascii	"IO"
54,56c54,56
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	2
> 	.word	16
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/bigexpr.cl"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	2
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	6
76,77c76,77
< 	.word	int_const7
< 	.ascii	"IO"
---
> 	.word	int_const4
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const7:
> 	.word	2
85,86c85,86
< 	.word	int_const4
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	2
94c94
< 	.word	int_const8
---
> 	.word	int_const9
99c99,100
< str_const0:
---
> str_const5:
> 	.word	2
101d101
< 	.word	16
103,104c103,104
< 	.word	int_const9
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/bigexpr.cl"
---
> 	.word	int_const2
> 	.ascii	"Int"
108c108
< int_const9:
---
> int_const6:
112c112
< 	.word	47
---
> 	.word	0
114c114
< int_const8:
---
> int_const1:
118c118
< 	.word	13
---
> 	.word	1
120c120
< int_const7:
---
> int_const9:
124c124
< 	.word	2
---
> 	.word	13
126c126
< int_const6:
---
> int_const7:
130c130
< 	.word	0
---
> 	.word	2
132c132
< int_const5:
---
> int_const8:
136c136
< 	.word	7
---
> 	.word	47
138c138
< int_const4:
---
> int_const2:
142c142
< 	.word	6
---
> 	.word	3
150c150
< int_const2:
---
> int_const0:
154c154
< 	.word	3
---
> 	.word	5
156c156
< int_const1:
---
> int_const4:
160c160
< 	.word	1
---
> 	.word	6
162c162
< int_const0:
---
> int_const5:
166c166
< 	.word	5
---
> 	.word	7
169c169
< 	.word	4
---
> 	.word	1
175c175
< 	.word	4
---
> 	.word	1
189,194d188
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
199,235c193,199
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabBool_dispTabString_dispTabInt_dispTabIO_dispTabMain_dispTab	.word	-1
240a205,210
> Bool_protObj:
> 	.word	1
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
242c212
< 	.word	5
---
> 	.word	2
248,253d217
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
261c225
< 	.word	1
---
> 	.word	4
266c230
< 	.word	2
---
> 	.word	5
291c255
< String_init:
---
> Bool_init:
305c269
< Bool_init:
---
> String_init:
362,365c326,329
< 	addiu	$sp $sp -48
< 	sw	$fp 48($sp)
< 	sw	$s0 44($sp)
< 	sw	$ra 40($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
368,432c332,334
< 	la	$s1 int_const0
< 	la	$s1 int_const1
< 	move	$s2 $s1
< 	move	$s3 $s1
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$s3 $a0
< 	la	$s4 int_const2
< 	la	$s5 int_const3
< 	la	$s6 int_const0
< 	la	$a0 int_const4
< 	sw	$a0 24($fp)
< 	la	$a0 int_const5
< 	sw	$a0 28($fp)
< 	sw	$s1 32($fp)
< 	la	$a0 int_const4
< 	jal	Object.copy
< 	lw	$t1 32($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 28($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s6)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s5)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
---
> 	la	$a0 int_const0
> 	sw	$a0 0($fp)
> 	sw	null 0($sp)
435d336
< 	sw	$s1 0($fp)
443,448c344,348
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$fp 48($sp)
< 	lw	$s0 44($sp)
< 	lw	$ra 40($sp)
< 	addiu	$sp $sp 48
---
> 	jalr	$t1
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ spim_outname=bigexpr.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/bigexpr.cl
+ spim_errname=bigexpr.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.spim.out
6,8c6,25
< 36COOL program successfully executed
< Stats -- #instructions : 704
<          #reads : 140  #writes 98  #branches 154  #other 312
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.spim.out.filtered
6c6,25
< 36COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bigexpr.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 199 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bigexpr.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/bigexpr.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/book_list.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/book_list.cl
+ outname=book_list.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/book_list.cl
+ errname=book_list.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.out /home/raj/cool/distro/testsuite/cgen/book_list.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.out /home/raj/cool/distro/testsuite/cgen/book_list.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.out
13c13
< 	.word	7
---
> 	.word	1
15c15
< 	.word	8
---
> 	.word	10
17c17
< 	.word	9
---
> 	.word	8
29c29
< 	.word	9
---
> 	.word	8
36,38c36,38
< str_const23:
< 	.word	9
< 	.word	6
---
> str_const7:
> 	.word	8
> 	.word	16
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Compilers, Principles, Techniques, and Tools"
45,47c45,47
< str_const22:
< 	.word	9
< 	.word	6
---
> str_const0:
> 	.word	8
> 	.word	17
50c50
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/book_list.cl"
54,55c54,55
< str_const21:
< 	.word	9
---
> str_const17:
> 	.word	8
58,59c58,59
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"Article"
63,65c63,65
< str_const20:
< 	.word	9
< 	.word	5
---
> str_const11:
> 	.word	8
> 	.word	7
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"PC Magazine"
72,73c72,73
< str_const19:
< 	.word	9
---
> str_const2:
> 	.word	8
76,77c76,77
< 	.word	int_const3
< 	.ascii	"Nil"
---
> 	.word	int_const5
> 	.ascii	"\n"
81,82c81,82
< str_const18:
< 	.word	9
---
> str_const21:
> 	.word	8
85,95c85,86
< 	.word	int_const1
< 	.ascii	"Cons"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const17:
< 	.word	9
< 	.word	7
< 	.word	String_dispTab
< 	.word	int_const4
< 	.ascii	"BookList"
---
> 	.word	int_const6
> 	.ascii	"String"
99,101c90,92
< str_const16:
< 	.word	9
< 	.word	6
---
> str_const6:
> 	.word	8
> 	.word	12
103,104c94,95
< 	.word	int_const5
< 	.ascii	"Article"
---
> 	.word	int_const7
> 	.ascii	"- dynamic type was Article -\n"
108,109c99,100
< str_const15:
< 	.word	9
---
> str_const10:
> 	.word	8
112,113c103,104
< 	.word	int_const1
< 	.ascii	"Book"
---
> 	.word	int_const3
> 	.ascii	"Ulanoff"
118c109
< 	.word	9
---
> 	.word	8
121,122c112,113
< 	.word	int_const6
< 	.ascii	"IO"
---
> 	.word	int_const8
> 	.ascii	"Int"
126,128c117,119
< str_const13:
< 	.word	9
< 	.word	6
---
> str_const5:
> 	.word	8
> 	.word	11
130,131c121,122
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const9
> 	.ascii	"- dynamic type was Book -\n"
135,136c126
< str_const12:
< 	.word	9
---
> str_const18:
137a128
> 	.word	7
139,140c130,131
< 	.word	int_const7
< 	.ascii	"<basic class>"
---
> 	.word	int_const10
> 	.ascii	"BookList"
144,146c135,137
< str_const11:
< 	.word	9
< 	.word	7
---
> str_const23:
> 	.word	8
> 	.word	6
148,149c139,140
< 	.word	int_const8
< 	.ascii	"PC Magazine"
---
> 	.word	int_const11
> 	.ascii	"Bool"
153,154c144,145
< str_const10:
< 	.word	9
---
> str_const16:
> 	.word	8
157,158c148,149
< 	.word	int_const5
< 	.ascii	"Ulanoff"
---
> 	.word	int_const11
> 	.ascii	"Book"
162,164c153,155
< str_const9:
< 	.word	9
< 	.word	9
---
> str_const4:
> 	.word	8
> 	.word	8
166,167c157,158
< 	.word	int_const9
< 	.ascii	"The Top 100 CD_ROMs"
---
> 	.word	int_const12
> 	.ascii	"periodical:  "
171,173c162,164
< str_const8:
< 	.word	9
< 	.word	10
---
> str_const15:
> 	.word	8
> 	.word	5
175,176c166,167
< 	.word	int_const10
< 	.ascii	"Aho, Sethi, and Ullman"
---
> 	.word	int_const13
> 	.ascii	"IO"
180,182c171,173
< str_const7:
< 	.word	9
< 	.word	16
---
> str_const3:
> 	.word	8
> 	.word	8
184,185c175,176
< 	.word	int_const11
< 	.ascii	"Compilers, Principles, Techniques, and Tools"
---
> 	.word	int_const14
> 	.ascii	"author:     "
189,191c180,182
< str_const6:
< 	.word	9
< 	.word	12
---
> str_const12:
> 	.word	8
> 	.word	8
194c185
< 	.ascii	"- dynamic type was Article -\n"
---
> 	.ascii	"<basic class>"
198,200c189,191
< str_const5:
< 	.word	9
< 	.word	11
---
> str_const20:
> 	.word	8
> 	.word	5
202,203c193,194
< 	.word	int_const13
< 	.ascii	"- dynamic type was Book -\n"
---
> 	.word	int_const8
> 	.ascii	"Nil"
207,208c198
< str_const4:
< 	.word	9
---
> str_const19:
209a200
> 	.word	6
211,212c202,203
< 	.word	int_const7
< 	.ascii	"periodical:  "
---
> 	.word	int_const11
> 	.ascii	"Cons"
216c207,208
< str_const3:
---
> str_const9:
> 	.word	8
218d209
< 	.word	17
220,221c211,212
< 	.word	int_const14
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/book_list.cl"
---
> 	.word	int_const15
> 	.ascii	"The Top 100 CD_ROMs"
225,226c216
< str_const2:
< 	.word	9
---
> str_const13:
227a218
> 	.word	6
229,230c220,221
< 	.word	int_const15
< 	.ascii	"author:     "
---
> 	.word	int_const6
> 	.ascii	"Object"
234,236c225,236
< str_const1:
< 	.word	9
< 	.word	5
---
> str_const22:
> 	.word	8
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const11
> 	.ascii	"Main"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const8:
> 	.word	8
> 	.word	10
239c239
< 	.ascii	"\n"
---
> 	.ascii	"Aho, Sethi, and Ullman"
243,244c243,244
< str_const0:
< 	.word	9
---
> str_const1:
> 	.word	8
247c247
< 	.word	int_const15
---
> 	.word	int_const14
253c253
< 	.word	7
---
> 	.word	1
255a256,258
> 	.word	22
> 	.word	-1
> int_const4:
256a260,262
> 	.word	4
> 	.word	Int_dispTab
> 	.word	11
258,259c264,265
< int_const15:
< 	.word	7
---
> int_const1:
> 	.word	1
262c268
< 	.word	12
---
> 	.word	44
265c271
< 	.word	7
---
> 	.word	1
268c274
< 	.word	49
---
> 	.word	12
270,271c276,277
< int_const13:
< 	.word	7
---
> int_const12:
> 	.word	1
274c280
< 	.word	26
---
> 	.word	13
276,277c282,283
< int_const12:
< 	.word	7
---
> int_const9:
> 	.word	1
280c286
< 	.word	29
---
> 	.word	26
282,283c288,289
< int_const11:
< 	.word	7
---
> int_const2:
> 	.word	1
286c292
< 	.word	44
---
> 	.word	49
288,289c294,295
< int_const10:
< 	.word	7
---
> int_const7:
> 	.word	1
292c298
< 	.word	22
---
> 	.word	29
294,295c300,301
< int_const9:
< 	.word	7
---
> int_const15:
> 	.word	1
300,301c306,307
< int_const8:
< 	.word	7
---
> int_const0:
> 	.word	1
304c310
< 	.word	11
---
> 	.word	0
306,307c312,313
< int_const7:
< 	.word	7
---
> int_const5:
> 	.word	1
310c316
< 	.word	13
---
> 	.word	1
312,313c318,319
< int_const6:
< 	.word	7
---
> int_const13:
> 	.word	1
318,319c324,325
< int_const5:
< 	.word	7
---
> int_const8:
> 	.word	1
322c328
< 	.word	7
---
> 	.word	3
324,325c330,331
< int_const4:
< 	.word	7
---
> int_const11:
> 	.word	1
328,331d333
< 	.word	8
< 	.word	-1
< int_const3:
< 	.word	7
333,334d334
< 	.word	Int_dispTab
< 	.word	3
336,337c336,337
< int_const2:
< 	.word	7
---
> int_const6:
> 	.word	1
342,343c342,343
< int_const1:
< 	.word	7
---
> int_const3:
> 	.word	1
346,348d345
< 	.word	4
< 	.word	-1
< int_const0:
349a347,349
> 	.word	-1
> int_const10:
> 	.word	1
352c352
< 	.word	0
---
> 	.word	8
355c355
< 	.word	8
---
> 	.word	10
361c361
< 	.word	8
---
> 	.word	10
379a380,381
> 	.word	Int_protObj
> 	.word	Int_init
392,395d393
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
400,493c398,400
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< BookList_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	BookList.isNil
< 	.word	BookList.cons
< 	.word	BookList.car
< 	.word	BookList.cdr
< 	.word	BookList.print_list
< Nil_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Nil.isNil
< 	.word	BookList.cons
< 	.word	BookList.car
< 	.word	BookList.cdr
< 	.word	Nil.print_list
< Cons_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Cons.isNil
< 	.word	BookList.cons
< 	.word	Cons.car
< 	.word	Cons.cdr
< 	.word	Cons.print_list
< 	.word	Cons.init
< Book_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Book.initBook
< 	.word	Book.print
< Article_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Book.initBook
< 	.word	Article.print
< 	.word	Article.initArticle
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabInt_dispTabIO_dispTabBook_dispTabArticle_dispTabBookList_dispTabCons_dispTabNil_dispTabString_dispTabMain_dispTabBool_dispTab	.word	-1
499,517d405
< Main_protObj:
< 	.word	10
< 	.word	4
< 	.word	Main_dispTab
< 	.word	0
< 	.word	-1
< String_protObj:
< 	.word	9
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	8
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
519c407
< 	.word	7
---
> 	.word	1
525c413
< 	.word	1
---
> 	.word	2
529,530c417
< BookList_protObj:
< 	.word	4
---
> Book_protObj:
532c419,422
< 	.word	BookList_dispTab
---
> 	.word	5
> 	.word	Book_dispTab
> 	.word	str_const24
> 	.word	str_const24
534c424,425
< Nil_protObj:
---
> Article_protObj:
> 	.word	4
535a427,433
> 	.word	Article_dispTab
> 	.word	str_const24
> 	.word	str_const24
> 	.word	str_const24
> 	.word	-1
> BookList_protObj:
> 	.word	5
537c435
< 	.word	Nil_dispTab
---
> 	.word	BookList_dispTab
540c438
< 	.word	5
---
> 	.word	6
546,547c444,450
< Book_protObj:
< 	.word	2
---
> Nil_protObj:
> 	.word	7
> 	.word	3
> 	.word	Nil_dispTab
> 	.word	-1
> String_protObj:
> 	.word	8
549,551c452,454
< 	.word	Book_dispTab
< 	.word	str_const24
< 	.word	str_const24
---
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
553,559c456,466
< Article_protObj:
< 	.word	3
< 	.word	6
< 	.word	Article_dispTab
< 	.word	str_const24
< 	.word	str_const24
< 	.word	str_const24
---
> Main_protObj:
> 	.word	9
> 	.word	4
> 	.word	Main_dispTab
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	10
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
582c489
< Main_init:
---
> Int_init:
596c503
< String_init:
---
> IO_init:
610c517
< Bool_init:
---
> Book_init:
617c524
< 	jal	Object_init
---
> 	jal	IO_init
624c531
< Int_init:
---
> Article_init:
631c538
< 	jal	Object_init
---
> 	jal	Book_init
638c545
< IO_init:
---
> BookList_init:
645c552
< 	jal	Object_init
---
> 	jal	IO_init
652c559
< BookList_init:
---
> Cons_init:
659c566
< 	jal	IO_init
---
> 	jal	BookList_init
680c587
< Cons_init:
---
> String_init:
687c594
< 	jal	BookList_init
---
> 	jal	Object_init
694c601
< Book_init:
---
> Main_init:
701c608
< 	jal	IO_init
---
> 	jal	Object_init
708c615
< Article_init:
---
> Bool_init:
715c622
< 	jal	Book_init
---
> 	jal	Object_init
722,726c629,633
< Main.main:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> Book.initBook:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
729,823c636,639
< 	la	$a0 str_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Book_protObj
< 	jal	Object.copy
< 	jal	Book_init
< 	bne	$a0 $zero label0
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 str_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const10
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Article_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Article_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Nil_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	Nil_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
825a642,680
> Book.print:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Article.initArticle:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 24
> 	jr	$ra	
> Article.print:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
833,842c688
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 bool_const1
---
> 	move	$a0 null
855,858c701
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	jal	Cons_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
865,868c708,710
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const3
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
871c713
< label6:
---
> label0:
874,875c716
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
888,899c729
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 Book_protObj
< 	jal	Object.copy
< 	jal	Book_init
---
> 	move	$a0 null
912,923c742
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 BookList_protObj
< 	jal	Object.copy
< 	jal	BookList_init
---
> 	move	$a0 null
937,938c756,757
< 	bne	$a0 $zero label9
< 	la	$a0 str_const3
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
941c760
< label9:
---
> label1:
944,970c763
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Nil.isNil:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 bool_const1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Nil.print_list:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 bool_const1
---
> 	jalr	$t1
996,1000c789
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
1013c802
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
1026c815
< 	lw	$a0 16($s0)
---
> 	move	$a0 null
1033,1108d821
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label12
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_case_abort2
< label12:
< 	lw	$t2 0($a0)
< 	blt	$t2 3 label13
< 	bgt	$t2 3 label13
< 	move	$s1 $a0
< 	la	$a0 str_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label14
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label10
< label13:
< 	blt	$t2 2 label15
< 	bgt	$t2 3 label15
< 	move	$s1 $a0
< 	la	$a0 str_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label16
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label10
< label15:
< 	jal	_case_abort
< label10:
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label17
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label17:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Book.initBook:
1115,1119c828
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
1123c832
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 12
1125c834
< Book.print:
---
> Nil.isNil:
1132,1200c841
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label18
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label18:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label19
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label19:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label20
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label21
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label22
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label22:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label23
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label23:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	la	$a0 bool_const1
1206c847
< Article.initArticle:
---
> Nil.print_list:
1213,1230c854
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label24
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label24:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 20($s0)
< 	move	$a0 $s0
---
> 	la	$a0 bool_const1
1234c858
< 	addiu	$sp $sp 24
---
> 	addiu	$sp $sp 12
1236,1240c860,864
< Article.print:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> Main.main:
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
1243,1245c867,874
< 	move	$a0 $s0
< 	bne	$a0 $zero label25
< 	la	$a0 str_const3
---
> 	la	$a0 str_const7
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	la	$a0 str_const8
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
1248,1252c877,882
< label25:
< 	la	$t1 Book_dispTab
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
---
> label2:
> 	lw	$t1 8($a0)
> 	lw	$t1 28($t1)
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	la	$a0 str_const9
1255c885
< 	lw	$a0 20($s0)
---
> 	la	$a0 str_const10
1258c888
< 	la	$a0 str_const4
---
> 	la	$a0 str_const11
1261,1279c891,892
< 	move	$a0 $s0
< 	bne	$a0 $zero label26
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label26:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label27
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label27:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label28
< 	la	$a0 str_const3
---
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
1282c895
< label28:
---
> label3:
1284,1290c897,904
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	move	$a0 null
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 20
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/book_list.cl
+ spim_outname=book_list.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/book_list.cl
+ spim_errname=book_list.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.spim.out
6,15c6,35
< title:      The Top 100 CD_ROMs
< author:     Ulanoff
< periodical:  PC Magazine
< - dynamic type was Article -
< title:      Compilers, Principles, Techniques, and Tools
< author:     Aho, Sethi, and Ullman
< - dynamic type was Book -
< COOL program successfully executed
< Stats -- #instructions : 1292
<          #reads : 303  #writes 224  #branches 235  #other 530
---
> The following symbols are undefined:
> heap_start
> BookList_init
> Book_protObj
> Article_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> Article_protObj
> Book_init
> IO_init
> Int_init
> Int_dispTab
> String_init
> Nil_init
> Object_init
> BookList_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Nil_protObj
> Cons_protObj
> Cons_init
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.spim.out.filtered
6,13c6,35
< title:      The Top 100 CD_ROMs
< author:     Ulanoff
< periodical:  PC Magazine
< - dynamic type was Article -
< title:      Compilers, Principles, Techniques, and Tools
< author:     Aho, Sethi, and Ullman
< - dynamic type was Book -
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> BookList_init
> Book_protObj
> Article_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> Article_protObj
> Book_init
> IO_init
> Int_init
> Int_dispTab
> String_init
> Nil_init
> Object_init
> BookList_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Nil_protObj
> Cons_protObj
> Cons_init
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/book_list.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 400 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/book_list.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/book_list.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/bool.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/bool.cl
+ outname=bool.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/bool.cl
+ errname=bool.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.out /home/raj/cool/distro/testsuite/cgen/bool.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.out /home/raj/cool/distro/testsuite/cgen/bool.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.out
13c13
< 	.word	2
---
> 	.word	5
15,16d14
< 	.word	3
< _string_tag:
17a16,17
> _string_tag:
> 	.word	2
29c29
< 	.word	4
---
> 	.word	2
36,38c36,38
< str_const11:
< 	.word	4
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	16
41c41
< 	.ascii	"Main"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/bool.cl"
45,47c45,47
< str_const10:
< 	.word	4
< 	.word	6
---
> str_const7:
> 	.word	2
> 	.word	5
50,59c50
< 	.ascii	"String"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	4
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
63,64c54,55
< str_const8:
< 	.word	4
---
> str_const2:
> 	.word	2
68,77c59
< 	.ascii	"Int"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const7:
< 	.word	4
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.ascii	"\n"
81,82c63,64
< str_const6:
< 	.word	4
---
> str_const8:
> 	.word	2
85,86c67,68
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const4
> 	.ascii	"String"
91c73
< 	.word	4
---
> 	.word	2
99,101c81,83
< str_const4:
< 	.word	4
< 	.word	16
---
> str_const11:
> 	.word	2
> 	.word	5
104c86
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/bool.cl"
---
> 	.ascii	"Int"
108,109c90,91
< str_const3:
< 	.word	4
---
> str_const10:
> 	.word	2
112,113c94,95
< 	.word	int_const1
< 	.ascii	"b2: "
---
> 	.word	int_const7
> 	.ascii	"Bool"
117,118c99,100
< str_const2:
< 	.word	4
---
> str_const3:
> 	.word	2
121c103
< 	.word	int_const1
---
> 	.word	int_const7
126,128c108,119
< str_const1:
< 	.word	4
< 	.word	5
---
> str_const6:
> 	.word	2
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const4
> 	.ascii	"Object"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const4:
> 	.word	2
> 	.word	6
131c122
< 	.ascii	"\n"
---
> 	.ascii	"b2: "
135,136c126,127
< str_const0:
< 	.word	4
---
> str_const1:
> 	.word	2
139c130
< 	.word	int_const3
---
> 	.word	int_const6
144c135
< int_const7:
---
> str_const9:
146,148c137,142
< 	.word	4
< 	.word	Int_dispTab
< 	.word	1
---
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const7
> 	.ascii	"Main"
> 	.byte	0	
> 	.align	2
150,151c144,145
< int_const6:
< 	.word	2
---
> int_const1:
> 	.word	5
156,157c150,151
< int_const5:
< 	.word	2
---
> int_const0:
> 	.word	5
160c154
< 	.word	13
---
> 	.word	0
162,163c156,157
< int_const4:
< 	.word	2
---
> int_const3:
> 	.word	5
166c160
< 	.word	2
---
> 	.word	1
168,169c162,163
< int_const3:
< 	.word	2
---
> int_const5:
> 	.word	5
172c166
< 	.word	3
---
> 	.word	13
174a169,171
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
175a173,175
> 	.word	-1
> int_const6:
> 	.word	5
178c178
< 	.word	6
---
> 	.word	3
180,181c180,181
< int_const1:
< 	.word	2
---
> int_const7:
> 	.word	5
186,187c186,187
< int_const0:
< 	.word	2
---
> int_const4:
> 	.word	5
190c190
< 	.word	0
---
> 	.word	6
193c193
< 	.word	3
---
> 	.word	4
199c199
< 	.word	3
---
> 	.word	4
215,218d214
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
223,255c219,223
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabString_dispTabMain_dispTabBool_dispTabInt_dispTab	.word	-1
261,262c229,230
< Main_protObj:
< 	.word	5
---
> IO_protObj:
> 	.word	1
264c232
< 	.word	Main_dispTab
---
> 	.word	IO_dispTab
267c235
< 	.word	4
---
> 	.word	2
273c241
< Bool_protObj:
---
> Main_protObj:
274a243,247
> 	.word	3
> 	.word	Main_dispTab
> 	.word	-1
> Bool_protObj:
> 	.word	4
280c253
< 	.word	2
---
> 	.word	5
284,288d256
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
311c279
< Main_init:
---
> IO_init:
339c307
< Bool_init:
---
> Main_init:
353c321
< Int_init:
---
> Bool_init:
367c335
< IO_init:
---
> Int_init:
388,393c356,367
< 	la	$s1 bool_const1
< 	la	$s2 bool_const0
< 	move	$s3 $s1
< 	la	$s4 bool_const1
< 	move	$s5 $s2
< 	la	$s6 bool_const0
---
> 	la	$a0 bool_const1
> 	sw	$a0 0($fp)
> 	la	$a0 bool_const0
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 8($fp)
> 	la	$a0 bool_const1
> 	sw	$a0 12($fp)
> 	lw	$a0 4($fp)
> 	sw	$a0 16($fp)
> 	la	$a0 bool_const0
> 	sw	$a0 20($fp)
397,411d370
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	jal	IO_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
413,918c372
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s1 24($fp)
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	lw	$a0 24($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$s3 28($fp)
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label8
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	lw	$a0 28($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label9
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label10
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 8($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 24($fp)
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label13
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label13:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	lw	$a0 24($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label14
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label16
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	move	$a0 $s6
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label17
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label17:
< 	lw	$t1 8($a0)
< 	lw	$t1 8($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 28($fp)
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label18
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label18:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	lw	$a0 28($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label19
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label19:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label20
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 32($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	sw	$s5 16($fp)
< 	sw	$s6 20($fp)
< 	bne	$a0 $zero label21
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	lw	$s5 16($fp)
< 	lw	$s6 20($fp)
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/bool.cl
+ spim_outname=bool.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/bool.cl
+ spim_errname=bool.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.spim.out
6,13c6,25
< t: Bool
< b1: Bool
< b2: Bool
< b1: Bool
< b2: Bool
< COOL program successfully executed
< Stats -- #instructions : 931
<          #reads : 296  #writes 218  #branches 130  #other 287
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.spim.out.filtered
6,11c6,25
< t: Bool
< b1: Bool
< b2: Bool
< b1: Bool
< b2: Bool
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/bool.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 223 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/bool.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/bool.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/calls.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/calls.cl
+ outname=calls.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/calls.cl
+ errname=calls.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.out /home/raj/cool/distro/testsuite/cgen/calls.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.out /home/raj/cool/distro/testsuite/cgen/calls.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.out
13c13
< 	.word	2
---
> 	.word	5
36c36
< str_const8:
---
> str_const6:
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
45c45
< str_const7:
---
> str_const5:
47c47
< 	.word	6
---
> 	.word	5
49,50c49,50
< 	.word	int_const6
< 	.ascii	"String"
---
> 	.word	int_const1
> 	.ascii	"IO"
54c54
< str_const6:
---
> str_const3:
58,59c58,59
< 	.word	int_const5
< 	.ascii	"Bool"
---
> 	.word	int_const6
> 	.ascii	"Object"
63c63
< str_const5:
---
> str_const1:
67,68c67,68
< 	.word	int_const7
< 	.ascii	"Int"
---
> 	.word	int_const0
> 	.ascii	"\n"
72c72
< str_const4:
---
> str_const7:
74c74
< 	.word	5
---
> 	.word	6
76,77c76,77
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const6
> 	.ascii	"String"
81c81,90
< str_const3:
---
> str_const0:
> 	.word	4
> 	.word	16
> 	.word	String_dispTab
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/calls.cl"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const4:
85,86c94,95
< 	.word	int_const6
< 	.ascii	"Object"
---
> 	.word	int_const5
> 	.ascii	"Main"
99c108
< str_const1:
---
> str_const8:
101c110
< 	.word	16
---
> 	.word	5
104c113
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/calls.cl"
---
> 	.ascii	"Int"
108,109c117
< str_const0:
< 	.word	4
---
> int_const4:
111,118d118
< 	.word	String_dispTab
< 	.word	int_const0
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const9:
< 	.word	2
121c121
< 	.word	45
---
> 	.word	0
123,124c123,124
< int_const8:
< 	.word	2
---
> int_const7:
> 	.word	5
127c127
< 	.word	13
---
> 	.word	45
129,130c129,130
< int_const7:
< 	.word	2
---
> int_const0:
> 	.word	5
133c133
< 	.word	3
---
> 	.word	1
135,136c135,136
< int_const6:
< 	.word	2
---
> int_const8:
> 	.word	5
139c139
< 	.word	6
---
> 	.word	13
141,142c141,142
< int_const5:
< 	.word	2
---
> int_const1:
> 	.word	5
145,147d144
< 	.word	4
< 	.word	-1
< int_const4:
148a146,148
> 	.word	-1
> int_const9:
> 	.word	5
151c151
< 	.word	0
---
> 	.word	3
153,154c153,154
< int_const3:
< 	.word	2
---
> int_const5:
> 	.word	5
157c157
< 	.word	7
---
> 	.word	4
160c160
< 	.word	2
---
> 	.word	5
165,166c165,166
< int_const1:
< 	.word	2
---
> int_const6:
> 	.word	5
169c169
< 	.word	2
---
> 	.word	6
171,172c171,172
< int_const0:
< 	.word	2
---
> int_const3:
> 	.word	5
175c175
< 	.word	1
---
> 	.word	7
197a198,199
> 	.word	Main_protObj
> 	.word	Main_init
200,201d201
< 	.word	Int_protObj
< 	.word	Int_init
206,243c206,208
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< 	.word	Main.f
< 	.word	Main.g
< 	.word	Main.h
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabMain_dispTabIO_dispTabBool_dispTabString_dispTabInt_dispTab	.word	-1
250c215
< 	.word	5
---
> 	.word	1
255,260c220,223
< String_protObj:
< 	.word	4
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const4
< 	.word	0
---
> IO_protObj:
> 	.word	2
> 	.word	3
> 	.word	IO_dispTab
267a231,237
> String_protObj:
> 	.word	4
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const4
> 	.word	0
> 	.word	-1
269c239
< 	.word	2
---
> 	.word	5
273,277d242
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
308,311d272
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	sw	$a0 12($s0)
318c279
< String_init:
---
> IO_init:
346c307
< Int_init:
---
> String_init:
360c321
< IO_init:
---
> Int_init:
381,440c342
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 24($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
447,450c349,352
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
453,463c355,359
< 	lw	$s1 20($fp)
< 	lw	$a0 16($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 24
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 20
466,469c362,365
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
472,482c368,372
< 	lw	$s1 16($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
485,488c375,378
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
491,501c381,385
< 	lw	$s1 16($fp)
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/calls.cl
+ spim_outname=calls.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/calls.cl
+ spim_errname=calls.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.spim.out
6,9c6,25
< 15
< COOL program successfully executed
< Stats -- #instructions : 482
<          #reads : 102  #writes 72  #branches 98  #other 210
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.spim.out.filtered
6,7c6,25
< 15
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/calls.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 208 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/calls.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/calls.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/case-none.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/case-none.cl
+ outname=case-none.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/case-none.cl
+ errname=case-none.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.out /home/raj/cool/distro/testsuite/cgen/case-none.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.out /home/raj/cool/distro/testsuite/cgen/case-none.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	3
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,37c36,37
< str_const9:
< 	.word	5
---
> str_const7:
> 	.word	2
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45a46
> 	.word	2
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const7:
< 	.word	5
< 	.word	5
---
> str_const2:
> 	.word	2
> 	.word	6
59c59
< 	.ascii	"Int"
---
> 	.ascii	"bool\n"
63,64c63,64
< str_const6:
< 	.word	5
---
> str_const4:
> 	.word	2
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,74c72,83
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const1:
> 	.word	2
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const1
> 	.ascii	"int\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const6:
> 	.word	2
> 	.word	6
77c86
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c90,91
< str_const4:
< 	.word	5
---
> str_const9:
> 	.word	2
86c95
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c100
< 	.word	5
---
> 	.word	2
99c108,109
< str_const2:
---
> str_const5:
> 	.word	2
101d110
< 	.word	17
104,113c113
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/case-none.cl"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const1:
< 	.word	5
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const7
< 	.ascii	"bool\n"
---
> 	.ascii	"Int"
118,119c118,119
< 	.word	5
< 	.word	6
---
> 	.word	2
> 	.word	17
121,122c121,122
< 	.word	int_const2
< 	.ascii	"int\n"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/case-none.cl"
126,133c126,127
< int_const7:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	5
< 	.word	-1
< int_const6:
< 	.word	3
---
> int_const0:
> 	.word	1
136c130
< 	.word	49
---
> 	.word	0
139c133
< 	.word	3
---
> 	.word	1
144,145c138,139
< int_const4:
< 	.word	3
---
> int_const2:
> 	.word	1
150,151c144,145
< int_const3:
< 	.word	3
---
> int_const6:
> 	.word	1
156,157c150,151
< int_const2:
< 	.word	3
---
> int_const1:
> 	.word	1
162,163c156,157
< int_const1:
< 	.word	3
---
> int_const7:
> 	.word	1
166c160
< 	.word	6
---
> 	.word	49
168,169c162,163
< int_const0:
< 	.word	3
---
> int_const3:
> 	.word	1
172c166
< 	.word	0
---
> 	.word	5
174c168,169
< bool_const0:
---
> int_const4:
> 	.word	1
175a171,175
> 	.word	Int_dispTab
> 	.word	6
> 	.word	-1
> bool_const0:
> 	.word	3
181c181
< 	.word	4
---
> 	.word	3
195,198d194
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
201,202d196
< 	.word	Bool_protObj
< 	.word	Bool_init
205,241c199,205
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabString_dispTabBool_dispTabIO_dispTabMain_dispTab	.word	-1
246a211,216
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
248c218
< 	.word	5
---
> 	.word	2
255,260d224
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
263c227
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
267c231
< 	.word	1
---
> 	.word	4
272c236
< 	.word	2
---
> 	.word	5
297c261
< String_init:
---
> Int_init:
311c275
< Bool_init:
---
> String_init:
325c289
< Int_init:
---
> Bool_init:
368,371c332,335
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
374,376c338,342
< 	move	$s1 $s0
< 	bne	$s1 $zero label1
< 	la	$a0 str_const2
---
> 	move	$a0 $s0
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
380,384c346,350
< 	lw	$t2 0($s1)
< 	blt	$t2 4 label2
< 	bgt	$t2 4 label2
< 	move	$s2 $s1
< 	la	$a0 str_const1
---
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label2
> 	bgt	$t2 3 label2
> 	sw	$a0 4($fp)
> 	la	$a0 str_const2
388,389d353
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
391c355
< 	la	$a0 str_const2
---
> 	la	$a0 str_const0
397,399c361
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
402,405c364,367
< 	blt	$t2 3 label4
< 	bgt	$t2 3 label4
< 	move	$s2 $s1
< 	la	$a0 str_const0
---
> 	blt	$t2 1 label4
> 	bgt	$t2 1 label4
> 	sw	$a0 4($fp)
> 	la	$a0 str_const1
409,410d370
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
412c372
< 	la	$a0 str_const2
---
> 	la	$a0 str_const0
418,420c378
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
425,428c383,386
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/case-none.cl
+ spim_outname=case-none.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/case-none.cl
+ spim_errname=case-none.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.spim.out
6,8c6,25
< No match in case statement for Class Main
< Stats -- #instructions : 152
<          #reads : 23  #writes 20  #branches 28  #other 81
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.spim.out.filtered
6c6,25
< No match in case statement for Class Main
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-none.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 205 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-none.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/case-none.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/case-order.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/case-order.cl
+ outname=case-order.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/case-order.cl
+ errname=case-order.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.out /home/raj/cool/distro/testsuite/cgen/case-order.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.out /home/raj/cool/distro/testsuite/cgen/case-order.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	3
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,37c36,37
< str_const9:
< 	.word	5
---
> str_const7:
> 	.word	2
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45a46
> 	.word	2
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const7:
< 	.word	5
< 	.word	5
---
> str_const1:
> 	.word	2
> 	.word	6
59c59
< 	.ascii	"Int"
---
> 	.ascii	"object\n"
63,64c63,64
< str_const6:
< 	.word	5
---
> str_const4:
> 	.word	2
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,74c72,74
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const6:
> 	.word	2
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	2
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const5
> 	.ascii	"main\n"
90,92c90,92
< str_const3:
< 	.word	5
< 	.word	8
---
> str_const9:
> 	.word	2
> 	.word	6
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const1
> 	.ascii	"Main"
99,101c99,101
< str_const2:
< 	.word	5
< 	.word	17
---
> str_const3:
> 	.word	2
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/case-order.cl"
---
> 	.ascii	"<basic class>"
108c108,109
< str_const1:
---
> str_const5:
> 	.word	2
110d110
< 	.word	6
113c113
< 	.ascii	"main\n"
---
> 	.ascii	"Int"
118,119c118,119
< 	.word	5
< 	.word	6
---
> 	.word	2
> 	.word	17
122c122
< 	.ascii	"object\n"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/case-order.cl"
126,133c126,127
< int_const8:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	7
< 	.word	-1
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	1
136c130
< 	.word	5
---
> 	.word	0
139,145c133
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	50
< 	.word	-1
< int_const5:
< 	.word	3
---
> 	.word	1
150,151c138,139
< int_const4:
< 	.word	3
---
> int_const2:
> 	.word	1
156,157c144,145
< int_const3:
< 	.word	3
---
> int_const7:
> 	.word	1
162,163c150,151
< int_const2:
< 	.word	3
---
> int_const1:
> 	.word	1
168,169c156,163
< int_const1:
< 	.word	3
---
> int_const5:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	5
> 	.word	-1
> int_const4:
> 	.word	1
174,175c168,169
< int_const0:
< 	.word	3
---
> int_const3:
> 	.word	1
178c172
< 	.word	0
---
> 	.word	7
180c174,175
< bool_const0:
---
> int_const8:
> 	.word	1
181a177,181
> 	.word	Int_dispTab
> 	.word	50
> 	.word	-1
> bool_const0:
> 	.word	3
187c187
< 	.word	4
---
> 	.word	3
201,204d200
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
207,208d202
< 	.word	Bool_protObj
< 	.word	Bool_init
211,247c205,211
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabString_dispTabBool_dispTabIO_dispTabMain_dispTab	.word	-1
252a217,222
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
254c224
< 	.word	5
---
> 	.word	2
261,266d230
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
269c233
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
273c237
< 	.word	1
---
> 	.word	4
278c242
< 	.word	2
---
> 	.word	5
303c267
< String_init:
---
> Int_init:
317c281
< Bool_init:
---
> String_init:
331c295
< Int_init:
---
> Bool_init:
374,377c338,341
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
380,382c344,348
< 	move	$s1 $s0
< 	bne	$s1 $zero label1
< 	la	$a0 str_const2
---
> 	move	$a0 $s0
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
386,390c352,356
< 	lw	$t2 0($s1)
< 	blt	$t2 2 label2
< 	bgt	$t2 2 label2
< 	move	$s2 $s1
< 	la	$a0 str_const1
---
> 	lw	$t2 0($a0)
> 	blt	$t2 5 label2
> 	bgt	$t2 5 label2
> 	sw	$a0 4($fp)
> 	la	$a0 str_const2
394,395d359
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
397c361
< 	la	$a0 str_const2
---
> 	la	$a0 str_const0
403,405c367
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
410,411c372,373
< 	move	$s2 $s1
< 	la	$a0 str_const0
---
> 	sw	$a0 4($fp)
> 	la	$a0 str_const1
415,416d376
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
418c378
< 	la	$a0 str_const2
---
> 	la	$a0 str_const0
424,426c384
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
431,434c389,392
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/case-order.cl
+ spim_outname=case-order.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/case-order.cl
+ spim_errname=case-order.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.spim.out
6,9c6,25
< main
< COOL program successfully executed
< Stats -- #instructions : 167
<          #reads : 30  #writes 24  #branches 32  #other 81
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.spim.out.filtered
6,7c6,25
< main
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/case-order.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 211 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/case-order.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/case-order.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ outname=casevoid.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ errname=casevoid.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.out /home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.out /home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.out
13,14d12
< 	.word	2
< _bool_tag:
15a14,15
> _bool_tag:
> 	.word	1
17c17
< 	.word	4
---
> 	.word	2
29c29
< 	.word	4
---
> 	.word	2
36,37c36,37
< str_const7:
< 	.word	4
---
> str_const3:
> 	.word	2
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
45,47c45,47
< str_const6:
< 	.word	4
< 	.word	6
---
> str_const7:
> 	.word	2
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54,55c54,55
< str_const5:
< 	.word	4
---
> str_const2:
> 	.word	2
58,59c58,59
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"Object"
63,65c63,65
< str_const4:
< 	.word	4
< 	.word	5
---
> str_const0:
> 	.word	2
> 	.word	17
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/casevoid.cl"
72,74c72,74
< str_const3:
< 	.word	4
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	6
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const3
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	4
---
> str_const6:
> 	.word	2
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const1
> 	.ascii	"Main"
91c91
< 	.word	4
---
> 	.word	2
99,101c99,101
< str_const0:
< 	.word	4
< 	.word	17
---
> str_const5:
> 	.word	2
> 	.word	5
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/casevoid.cl"
---
> 	.ascii	"Int"
108,109c108,109
< int_const6:
< 	.word	2
---
> int_const0:
> 	.word	3
112c112
< 	.word	48
---
> 	.word	0
115c115
< 	.word	2
---
> 	.word	3
120,121c120,121
< int_const4:
< 	.word	2
---
> int_const2:
> 	.word	3
126,127c126,127
< int_const3:
< 	.word	2
---
> int_const6:
> 	.word	3
132,133c132,133
< int_const2:
< 	.word	2
---
> int_const4:
> 	.word	3
136c136
< 	.word	6
---
> 	.word	48
139c139
< 	.word	2
---
> 	.word	3
144,145c144,145
< int_const0:
< 	.word	2
---
> int_const3:
> 	.word	3
148c148
< 	.word	0
---
> 	.word	6
151c151
< 	.word	3
---
> 	.word	1
157c157
< 	.word	3
---
> 	.word	1
171,174d170
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Int_protObj
< 	.word	Int_init
178a175,176
> 	.word	Int_protObj
> 	.word	Int_init
181,213c179,181
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> Object_dispTabBool_dispTabString_dispTabInt_dispTabMain_dispTabIO_dispTab	.word	-1
219,220c187,188
< Main_protObj:
< 	.word	5
---
> Bool_protObj:
> 	.word	1
222c190
< 	.word	Main_dispTab
---
> 	.word	Bool_dispTab
226c194
< 	.word	4
---
> 	.word	2
232c200
< Bool_protObj:
---
> Int_protObj:
235c203
< 	.word	Bool_dispTab
---
> 	.word	Int_dispTab
238,239c206
< Int_protObj:
< 	.word	2
---
> Main_protObj:
241c208,209
< 	.word	Int_dispTab
---
> 	.word	4
> 	.word	Main_dispTab
245c213
< 	.word	1
---
> 	.word	5
270c238
< Main_init:
---
> Bool_init:
298c266
< Bool_init:
---
> Int_init:
312c280
< Int_init:
---
> Main_init:
341,344c309,312
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
347,365c315,319
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label1:
< 	lw	$t2 0($a0)
< 	blt	$t2 5 label2
< 	bgt	$t2 5 label2
< 	move	$s1 $a0
< 	la	$a0 int_const0
< 	b	label0
< label2:
< 	jal	_case_abort
< label0:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ spim_outname=casevoid.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/casevoid.cl
+ spim_errname=casevoid.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.spim.out
6,8c6,25
< /home/raj/cool/distro/testsuite/cgen/casevoid.cl:1Match on void in case statement.
< Stats -- #instructions : 140
<          #reads : 20  #writes 19  #branches 25  #other 76
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.spim.out.filtered
6c6,25
< /home/raj/cool/distro/testsuite/cgen/casevoid.cl:1Match on void in case statement.
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/casevoid.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 181 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/casevoid.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/casevoid.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/c.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/c.cl
+ outname=c.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/c.cl
+ errname=c.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.out /home/raj/cool/distro/testsuite/cgen/c.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.out /home/raj/cool/distro/testsuite/cgen/c.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.out
13c13
< 	.word	22
---
> 	.word	25
17c17
< 	.word	24
---
> 	.word	22
29c29
< 	.word	24
---
> 	.word	22
36,38c36,38
< str_const45:
< 	.word	24
< 	.word	6
---
> str_const18:
> 	.word	22
> 	.word	9
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Applying closure 0\n"
45,46c45,55
< str_const44:
< 	.word	24
---
> str_const13:
> 	.word	22
> 	.word	9
> 	.word	String_dispTab
> 	.word	int_const1
> 	.ascii	"Applying closure 2\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const23:
> 	.word	22
50c59
< 	.ascii	"String"
---
> 	.ascii	"Closure"
54,56c63,65
< str_const43:
< 	.word	24
< 	.word	6
---
> str_const1:
> 	.word	22
> 	.word	9
59c68
< 	.ascii	"Bool"
---
> 	.ascii	"Applying closure 8\n"
64,65c73,74
< 	.word	24
< 	.word	5
---
> 	.word	22
> 	.word	6
68c77
< 	.ascii	"Int"
---
> 	.ascii	"String"
72,74c81,83
< str_const41:
< 	.word	24
< 	.word	7
---
> str_const8:
> 	.word	22
> 	.word	9
76,77c85,86
< 	.word	int_const4
< 	.ascii	"Closure0"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 4\n"
81,83c90,92
< str_const40:
< 	.word	24
< 	.word	7
---
> str_const45:
> 	.word	22
> 	.word	5
85,86c94,95
< 	.word	int_const5
< 	.ascii	"Closure17"
---
> 	.word	int_const4
> 	.ascii	"Int"
90,92c99,101
< str_const39:
< 	.word	24
< 	.word	7
---
> str_const4:
> 	.word	22
> 	.word	9
94,95c103,104
< 	.word	int_const4
< 	.ascii	"Closure1"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 6\n"
99,101c108,110
< str_const38:
< 	.word	24
< 	.word	7
---
> str_const7:
> 	.word	22
> 	.word	10
104c113
< 	.ascii	"Closure16"
---
> 	.ascii	"Applying closure 11\n"
108,110c117,119
< str_const37:
< 	.word	24
< 	.word	7
---
> str_const43:
> 	.word	22
> 	.word	6
112,113c121,122
< 	.word	int_const5
< 	.ascii	"Closure15"
---
> 	.word	int_const6
> 	.ascii	"Bool"
117,119c126,128
< str_const36:
< 	.word	24
< 	.word	7
---
> str_const17:
> 	.word	22
> 	.word	10
121,122c130,131
< 	.word	int_const4
< 	.ascii	"Closure2"
---
> 	.word	int_const5
> 	.ascii	"Applying closure 17\n"
126,128c135,137
< str_const35:
< 	.word	24
< 	.word	7
---
> str_const14:
> 	.word	22
> 	.word	10
131c140
< 	.ascii	"Closure14"
---
> 	.ascii	"Applying closure 15\n"
135,136c144,145
< str_const34:
< 	.word	24
---
> str_const30:
> 	.word	22
139,140c148,149
< 	.word	int_const5
< 	.ascii	"Closure13"
---
> 	.word	int_const7
> 	.ascii	"Closure17"
144,145c153,154
< str_const33:
< 	.word	24
---
> str_const28:
> 	.word	22
148,149c157,158
< 	.word	int_const4
< 	.ascii	"Closure3"
---
> 	.word	int_const7
> 	.ascii	"Closure16"
153,155c162,164
< str_const32:
< 	.word	24
< 	.word	7
---
> str_const11:
> 	.word	22
> 	.word	10
158c167
< 	.ascii	"Closure12"
---
> 	.ascii	"Applying closure 13\n"
163c172
< 	.word	24
---
> 	.word	22
166,167c175,176
< 	.word	int_const4
< 	.ascii	"Closure4"
---
> 	.word	int_const7
> 	.ascii	"Closure15"
171,173c180,182
< str_const30:
< 	.word	24
< 	.word	7
---
> str_const16:
> 	.word	22
> 	.word	9
175,176c184,185
< 	.word	int_const5
< 	.ascii	"Closure11"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 1\n"
180,182c189,191
< str_const29:
< 	.word	24
< 	.word	7
---
> str_const0:
> 	.word	22
> 	.word	15
184,185c193,194
< 	.word	int_const5
< 	.ascii	"Closure10"
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/c.cl"
189,190c198,199
< str_const28:
< 	.word	24
---
> str_const37:
> 	.word	22
193,194c202,203
< 	.word	int_const4
< 	.ascii	"Closure5"
---
> 	.word	int_const7
> 	.ascii	"Closure14"
198,199c207,208
< str_const27:
< 	.word	24
---
> str_const40:
> 	.word	22
202,203c211,212
< 	.word	int_const4
< 	.ascii	"Closure6"
---
> 	.word	int_const7
> 	.ascii	"Closure13"
207,209c216,218
< str_const26:
< 	.word	24
< 	.word	7
---
> str_const10:
> 	.word	22
> 	.word	9
211,212c220,221
< 	.word	int_const4
< 	.ascii	"Closure9"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 3\n"
216,217c225,226
< str_const25:
< 	.word	24
---
> str_const39:
> 	.word	22
220,221c229,230
< 	.word	int_const4
< 	.ascii	"Closure7"
---
> 	.word	int_const7
> 	.ascii	"Closure12"
225,226c234,235
< str_const24:
< 	.word	24
---
> str_const33:
> 	.word	22
229,239c238,239
< 	.word	int_const4
< 	.ascii	"Closure8"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const23:
< 	.word	24
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const6
< 	.ascii	"Closure"
---
> 	.word	int_const7
> 	.ascii	"Closure11"
243,244c243,244
< str_const22:
< 	.word	24
---
> str_const34:
> 	.word	22
248c248
< 	.ascii	"EvalObject"
---
> 	.ascii	"Closure10"
253c253
< 	.word	24
---
> 	.word	22
256c256
< 	.word	int_const8
---
> 	.word	int_const9
261,263c261,263
< str_const20:
< 	.word	24
< 	.word	6
---
> str_const3:
> 	.word	22
> 	.word	9
265,266c265,266
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 9\n"
270,272c270,272
< str_const19:
< 	.word	24
< 	.word	8
---
> str_const5:
> 	.word	22
> 	.word	9
274,275c274,275
< 	.word	int_const9
< 	.ascii	"<basic class>"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 5\n"
279,281c279,281
< str_const18:
< 	.word	24
< 	.word	9
---
> str_const19:
> 	.word	22
> 	.word	8
284c284
< 	.ascii	"Applying closure 0\n"
---
> 	.ascii	"<basic class>"
288,290c288,290
< str_const17:
< 	.word	24
< 	.word	10
---
> str_const2:
> 	.word	22
> 	.word	9
292,293c292,293
< 	.word	int_const11
< 	.ascii	"Applying closure 17\n"
---
> 	.word	int_const1
> 	.ascii	"Applying closure 7\n"
297,299c297,299
< str_const16:
< 	.word	24
< 	.word	9
---
> str_const24:
> 	.word	22
> 	.word	7
301,302c301,302
< 	.word	int_const10
< 	.ascii	"Applying closure 1\n"
---
> 	.word	int_const11
> 	.ascii	"Closure0"
306,307c306,307
< str_const15:
< 	.word	24
---
> str_const9:
> 	.word	22
310,311c310,311
< 	.word	int_const11
< 	.ascii	"Applying closure 16\n"
---
> 	.word	int_const5
> 	.ascii	"Applying closure 12\n"
315,317c315,317
< str_const14:
< 	.word	24
< 	.word	10
---
> str_const25:
> 	.word	22
> 	.word	7
320c320
< 	.ascii	"Applying closure 15\n"
---
> 	.ascii	"Closure2"
324,326c324,326
< str_const13:
< 	.word	24
< 	.word	9
---
> str_const6:
> 	.word	22
> 	.word	10
328,329c328,329
< 	.word	int_const10
< 	.ascii	"Applying closure 2\n"
---
> 	.word	int_const5
> 	.ascii	"Applying closure 10\n"
333,335c333,335
< str_const12:
< 	.word	24
< 	.word	10
---
> str_const41:
> 	.word	22
> 	.word	7
338c338
< 	.ascii	"Applying closure 14\n"
---
> 	.ascii	"Closure1"
342,344c342,344
< str_const11:
< 	.word	24
< 	.word	10
---
> str_const22:
> 	.word	22
> 	.word	7
346,347c346,347
< 	.word	int_const11
< 	.ascii	"Applying closure 13\n"
---
> 	.word	int_const12
> 	.ascii	"EvalObject"
351,353c351,353
< str_const10:
< 	.word	24
< 	.word	9
---
> str_const36:
> 	.word	22
> 	.word	7
355,356c355,356
< 	.word	int_const10
< 	.ascii	"Applying closure 3\n"
---
> 	.word	int_const11
> 	.ascii	"Closure8"
360,362c360,362
< str_const9:
< 	.word	24
< 	.word	10
---
> str_const27:
> 	.word	22
> 	.word	7
365c365
< 	.ascii	"Applying closure 12\n"
---
> 	.ascii	"Closure7"
369,371c369,371
< str_const8:
< 	.word	24
< 	.word	9
---
> str_const20:
> 	.word	22
> 	.word	6
373,374c373,374
< 	.word	int_const10
< 	.ascii	"Applying closure 4\n"
---
> 	.word	int_const3
> 	.ascii	"Object"
378,380c378,380
< str_const7:
< 	.word	24
< 	.word	10
---
> str_const35:
> 	.word	22
> 	.word	7
383c383
< 	.ascii	"Applying closure 11\n"
---
> 	.ascii	"Closure9"
387,389c387,389
< str_const6:
< 	.word	24
< 	.word	10
---
> str_const32:
> 	.word	22
> 	.word	7
392c392
< 	.ascii	"Applying closure 10\n"
---
> 	.ascii	"Closure4"
396,398c396,398
< str_const5:
< 	.word	24
< 	.word	9
---
> str_const15:
> 	.word	22
> 	.word	10
400,401c400,401
< 	.word	int_const10
< 	.ascii	"Applying closure 5\n"
---
> 	.word	int_const5
> 	.ascii	"Applying closure 16\n"
405,407c405,407
< str_const4:
< 	.word	24
< 	.word	9
---
> str_const44:
> 	.word	22
> 	.word	6
409,410c409,410
< 	.word	int_const10
< 	.ascii	"Applying closure 6\n"
---
> 	.word	int_const6
> 	.ascii	"Main"
414,416c414,416
< str_const3:
< 	.word	24
< 	.word	9
---
> str_const38:
> 	.word	22
> 	.word	7
418,419c418,419
< 	.word	int_const10
< 	.ascii	"Applying closure 9\n"
---
> 	.word	int_const11
> 	.ascii	"Closure3"
423,425c423,425
< str_const2:
< 	.word	24
< 	.word	9
---
> str_const29:
> 	.word	22
> 	.word	7
427,428c427,428
< 	.word	int_const10
< 	.ascii	"Applying closure 7\n"
---
> 	.word	int_const11
> 	.ascii	"Closure6"
432,434c432,434
< str_const1:
< 	.word	24
< 	.word	9
---
> str_const12:
> 	.word	22
> 	.word	10
436,437c436,437
< 	.word	int_const10
< 	.ascii	"Applying closure 8\n"
---
> 	.word	int_const5
> 	.ascii	"Applying closure 14\n"
441,443c441,443
< str_const0:
< 	.word	24
< 	.word	15
---
> str_const26:
> 	.word	22
> 	.word	7
445,446c445,446
< 	.word	int_const12
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/c.cl"
---
> 	.word	int_const11
> 	.ascii	"Closure5"
450,451c450,451
< int_const12:
< 	.word	22
---
> int_const10:
> 	.word	25
454c454
< 	.word	41
---
> 	.word	13
456,457c456,457
< int_const11:
< 	.word	22
---
> int_const1:
> 	.word	25
460c460
< 	.word	20
---
> 	.word	19
462,463c462,463
< int_const10:
< 	.word	22
---
> int_const0:
> 	.word	25
466c466
< 	.word	19
---
> 	.word	0
469c469
< 	.word	22
---
> 	.word	25
472c472
< 	.word	13
---
> 	.word	2
474,475c474,475
< int_const8:
< 	.word	22
---
> int_const4:
> 	.word	25
478c478
< 	.word	2
---
> 	.word	3
480,481c480,481
< int_const7:
< 	.word	22
---
> int_const6:
> 	.word	25
484c484
< 	.word	10
---
> 	.word	4
486,487c486,487
< int_const6:
< 	.word	22
---
> int_const3:
> 	.word	25
490c490
< 	.word	7
---
> 	.word	6
492,493c492,493
< int_const5:
< 	.word	22
---
> int_const2:
> 	.word	25
496c496
< 	.word	9
---
> 	.word	7
498,499c498,499
< int_const4:
< 	.word	22
---
> int_const11:
> 	.word	25
504,505c504,505
< int_const3:
< 	.word	22
---
> int_const7:
> 	.word	25
508c508
< 	.word	3
---
> 	.word	9
510,511c510,511
< int_const2:
< 	.word	22
---
> int_const8:
> 	.word	25
514c514
< 	.word	6
---
> 	.word	41
516,517c516,517
< int_const1:
< 	.word	22
---
> int_const5:
> 	.word	25
520c520
< 	.word	4
---
> 	.word	20
522,523c522,523
< int_const0:
< 	.word	22
---
> int_const12:
> 	.word	25
526c526
< 	.word	0
---
> 	.word	10
575,576c575,580
< 	.word	Closure8_protObj
< 	.word	Closure8_init
---
> 	.word	Closure0_protObj
> 	.word	Closure0_init
> 	.word	Closure2_protObj
> 	.word	Closure2_init
> 	.word	Closure5_protObj
> 	.word	Closure5_init
579,580c583,584
< 	.word	Closure9_protObj
< 	.word	Closure9_init
---
> 	.word	Closure16_protObj
> 	.word	Closure16_init
583,588c587,590
< 	.word	Closure5_protObj
< 	.word	Closure5_init
< 	.word	Closure10_protObj
< 	.word	Closure10_init
< 	.word	Closure11_protObj
< 	.word	Closure11_init
---
> 	.word	Closure17_protObj
> 	.word	Closure17_init
> 	.word	Closure15_protObj
> 	.word	Closure15_init
591,592c593,602
< 	.word	Closure12_protObj
< 	.word	Closure12_init
---
> 	.word	Closure11_protObj
> 	.word	Closure11_init
> 	.word	Closure10_protObj
> 	.word	Closure10_init
> 	.word	Closure9_protObj
> 	.word	Closure9_init
> 	.word	Closure8_protObj
> 	.word	Closure8_init
> 	.word	Closure14_protObj
> 	.word	Closure14_init
594a605,606
> 	.word	Closure12_protObj
> 	.word	Closure12_init
597,604d608
< 	.word	Closure14_protObj
< 	.word	Closure14_init
< 	.word	Closure2_protObj
< 	.word	Closure2_init
< 	.word	Closure15_protObj
< 	.word	Closure15_init
< 	.word	Closure16_protObj
< 	.word	Closure16_init
607,614d610
< 	.word	Closure17_protObj
< 	.word	Closure17_init
< 	.word	Closure0_protObj
< 	.word	Closure0_init
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
616a613,614
> 	.word	Bool_protObj
> 	.word	Bool_init
619,907c617,619
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< EvalObject_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< Closure_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure.apply
< Closure0_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure0.apply
< Closure17_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure17.apply
< Closure1_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure1.apply
< Closure16_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure16.apply
< Closure15_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure15.apply
< Closure2_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure2.apply
< Closure14_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure14.apply
< Closure13_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure13.apply
< Closure3_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure3.apply
< Closure12_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure12.apply
< Closure4_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure4.apply
< Closure11_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure11.apply
< Closure10_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure10.apply
< Closure5_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure5.apply
< Closure6_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure6.apply
< Closure9_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure9.apply
< Closure7_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure7.apply
< Closure8_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	EvalObject.eval
< 	.word	Closure.get_parent
< 	.word	Closure.get_x
< 	.word	Closure.init
< 	.word	Closure8.apply
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabEvalObject_dispTabClosure_dispTabClosure0_dispTabClosure2_dispTabClosure5_dispTabClosure7_dispTabClosure16_dispTabClosure6_dispTabClosure17_dispTabClosure15_dispTabClosure4_dispTabClosure11_dispTabClosure10_dispTabClosure9_dispTabClosure8_dispTabClosure14_dispTabClosure3_dispTabClosure12_dispTabClosure13_dispTabClosure1_dispTabString_dispTabBool_dispTabMain_dispTabInt_dispTab	.word	-1
913,936d624
< Main_protObj:
< 	.word	25
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
< String_protObj:
< 	.word	24
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	23
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	22
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
955c643
< 	.word	21
---
> 	.word	4
961,962c649
< Closure17_protObj:
< 	.word	20
---
> Closure2_protObj:
964c651,652
< 	.word	Closure17_dispTab
---
> 	.word	5
> 	.word	Closure2_dispTab
968,969c656,657
< Closure1_protObj:
< 	.word	19
---
> Closure5_protObj:
> 	.word	6
971c659,666
< 	.word	Closure1_dispTab
---
> 	.word	Closure5_dispTab
> 	.word	0
> 	.word	0
> 	.word	-1
> Closure7_protObj:
> 	.word	7
> 	.word	5
> 	.word	Closure7_dispTab
976c671
< 	.word	18
---
> 	.word	8
982,983c677,678
< Closure15_protObj:
< 	.word	17
---
> Closure6_protObj:
> 	.word	9
985c680
< 	.word	Closure15_dispTab
---
> 	.word	Closure6_dispTab
989,990c684,685
< Closure2_protObj:
< 	.word	16
---
> Closure17_protObj:
> 	.word	10
992c687
< 	.word	Closure2_dispTab
---
> 	.word	Closure17_dispTab
996,997c691,692
< Closure14_protObj:
< 	.word	15
---
> Closure15_protObj:
> 	.word	11
999c694
< 	.word	Closure14_dispTab
---
> 	.word	Closure15_dispTab
1003,1004c698,699
< Closure13_protObj:
< 	.word	14
---
> Closure4_protObj:
> 	.word	12
1006c701
< 	.word	Closure13_dispTab
---
> 	.word	Closure4_dispTab
1010c705
< Closure3_protObj:
---
> Closure11_protObj:
1013c708
< 	.word	Closure3_dispTab
---
> 	.word	Closure11_dispTab
1017,1018c712,713
< Closure12_protObj:
< 	.word	12
---
> Closure10_protObj:
> 	.word	14
1020c715
< 	.word	Closure12_dispTab
---
> 	.word	Closure10_dispTab
1024,1025c719,720
< Closure4_protObj:
< 	.word	11
---
> Closure9_protObj:
> 	.word	15
1027c722
< 	.word	Closure4_dispTab
---
> 	.word	Closure9_dispTab
1031,1032c726,727
< Closure11_protObj:
< 	.word	10
---
> Closure8_protObj:
> 	.word	16
1034c729
< 	.word	Closure11_dispTab
---
> 	.word	Closure8_dispTab
1038,1039c733,734
< Closure10_protObj:
< 	.word	9
---
> Closure14_protObj:
> 	.word	17
1041c736
< 	.word	Closure10_dispTab
---
> 	.word	Closure14_dispTab
1045,1046c740,741
< Closure5_protObj:
< 	.word	8
---
> Closure3_protObj:
> 	.word	18
1048c743
< 	.word	Closure5_dispTab
---
> 	.word	Closure3_dispTab
1052,1053c747,748
< Closure6_protObj:
< 	.word	7
---
> Closure12_protObj:
> 	.word	19
1055c750
< 	.word	Closure6_dispTab
---
> 	.word	Closure12_dispTab
1059,1060c754,755
< Closure9_protObj:
< 	.word	6
---
> Closure13_protObj:
> 	.word	20
1062c757
< 	.word	Closure9_dispTab
---
> 	.word	Closure13_dispTab
1066,1067c761,762
< Closure7_protObj:
< 	.word	5
---
> Closure1_protObj:
> 	.word	21
1069c764
< 	.word	Closure7_dispTab
---
> 	.word	Closure1_dispTab
1073,1074c768,769
< Closure8_protObj:
< 	.word	4
---
> String_protObj:
> 	.word	22
1076c771,772
< 	.word	Closure8_dispTab
---
> 	.word	String_dispTab
> 	.word	int_const0
1077a774,789
> 	.word	-1
> Bool_protObj:
> 	.word	23
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> Main_protObj:
> 	.word	24
> 	.word	3
> 	.word	Main_dispTab
> 	.word	-1
> Int_protObj:
> 	.word	25
> 	.word	4
> 	.word	Int_dispTab
1101c813
< Main_init:
---
> IO_init:
1115c827
< String_init:
---
> EvalObject_init:
1122c834
< 	jal	Object_init
---
> 	jal	IO_init
1129c841
< Bool_init:
---
> Closure_init:
1136c848
< 	jal	Object_init
---
> 	jal	EvalObject_init
1143c855
< Int_init:
---
> Closure0_init:
1150c862
< 	jal	Object_init
---
> 	jal	Closure_init
1157c869
< IO_init:
---
> Closure2_init:
1164c876
< 	jal	Object_init
---
> 	jal	Closure_init
1171c883
< EvalObject_init:
---
> Closure5_init:
1178c890
< 	jal	IO_init
---
> 	jal	Closure_init
1185c897
< Closure_init:
---
> Closure7_init:
1192c904
< 	jal	EvalObject_init
---
> 	jal	Closure_init
1199c911
< Closure0_init:
---
> Closure16_init:
1213c925
< Closure17_init:
---
> Closure6_init:
1227c939
< Closure1_init:
---
> Closure17_init:
1241c953
< Closure16_init:
---
> Closure15_init:
1255c967
< Closure15_init:
---
> Closure4_init:
1269c981
< Closure2_init:
---
> Closure11_init:
1283c995
< Closure14_init:
---
> Closure10_init:
1297c1009
< Closure13_init:
---
> Closure9_init:
1311c1023
< Closure3_init:
---
> Closure8_init:
1325c1037
< Closure12_init:
---
> Closure14_init:
1339c1051
< Closure4_init:
---
> Closure3_init:
1353c1065
< Closure11_init:
---
> Closure12_init:
1367c1079
< Closure10_init:
---
> Closure13_init:
1381c1093
< Closure5_init:
---
> Closure1_init:
1395c1107
< Closure6_init:
---
> String_init:
1402c1114
< 	jal	Closure_init
---
> 	jal	Object_init
1409c1121
< Closure9_init:
---
> Bool_init:
1416c1128
< 	jal	Closure_init
---
> 	jal	Object_init
1423c1135
< Closure7_init:
---
> Main_init:
1430c1142
< 	jal	Closure_init
---
> 	jal	Object_init
1437c1149
< Closure8_init:
---
> Int_init:
1444c1156
< 	jal	Closure_init
---
> 	jal	Object_init
1451,2142d1162
< Main.main:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	jal	Closure_init
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure0_protObj
< 	jal	Object.copy
< 	jal	Closure0_init
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure1_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure1_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label3:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label4
< 	bgt	$t2 21 label4
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label2
< label4:
< 	blt	$t2 0 label6
< 	bgt	$t2 25 label6
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label2
< label6:
< 	jal	_case_abort
< label2:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure2_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure2_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label8
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label10
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label10:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label11
< 	bgt	$t2 21 label11
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label9
< label11:
< 	blt	$t2 0 label13
< 	bgt	$t2 25 label13
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label14
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label9
< label13:
< 	jal	_case_abort
< label9:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure3_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure3_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label17
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label17:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label18
< 	bgt	$t2 21 label18
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label19
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label19:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label16
< label18:
< 	blt	$t2 0 label20
< 	bgt	$t2 25 label20
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label21
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label16
< label20:
< 	jal	_case_abort
< label16:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure4_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure4_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label22
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label22:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label24
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label24:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label25
< 	bgt	$t2 21 label25
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label26
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label26:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label23
< label25:
< 	blt	$t2 0 label27
< 	bgt	$t2 25 label27
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label28
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label28:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label23
< label27:
< 	jal	_case_abort
< label23:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure5_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure5_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label29
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label29:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label31
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label31:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label32
< 	bgt	$t2 21 label32
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label33
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label33:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label30
< label32:
< 	blt	$t2 0 label34
< 	bgt	$t2 25 label34
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label35
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label35:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label30
< label34:
< 	jal	_case_abort
< label30:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure6_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure6_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label36
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label36:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label38
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label38:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label39
< 	bgt	$t2 21 label39
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label40
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label40:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label37
< label39:
< 	blt	$t2 0 label41
< 	bgt	$t2 25 label41
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label42
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label42:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label37
< label41:
< 	jal	_case_abort
< label37:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure7_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure7_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label43
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label43:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label45
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label45:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label46
< 	bgt	$t2 21 label46
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label47
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label47:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label44
< label46:
< 	blt	$t2 0 label48
< 	bgt	$t2 25 label48
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label49
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label49:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label44
< label48:
< 	jal	_case_abort
< label44:
< 	move	$s1 $a0
< 	la	$a0 Closure_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure8_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Closure8_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label50
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label50:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label52
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label52:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label53
< 	bgt	$t2 21 label53
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label54
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label54:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label51
< label53:
< 	blt	$t2 0 label55
< 	bgt	$t2 25 label55
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label56
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label56:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label51
< label55:
< 	jal	_case_abort
< label51:
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
2150,2159c1170
< 	move	$a0 $s0
< 	bne	$a0 $zero label57
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label57:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
2172c1183
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
2185c1196
< 	lw	$a0 16($s0)
---
> 	move	$a0 null
2198,2200c1209
< 	lw	$a0 12($fp)
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
2213,2222c1222
< 	move	$a0 $s0
< 	bne	$a0 $zero label58
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label58:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
2235,2257c1235
< 	la	$a0 str_const18
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label59
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label59:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label60
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label60:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2263c1241
< Closure17.apply:
---
> Closure2.apply:
2270,2300c1248
< 	la	$a0 str_const17
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label61
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label61:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label62
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label62:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label63
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label63:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2306c1254
< Closure1.apply:
---
> Closure5.apply:
2313,2340c1261,1274
< 	la	$a0 str_const16
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label64
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label64:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure17_protObj
< 	jal	Object.copy
< 	jal	Closure17_init
< 	bne	$a0 $zero label65
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label65:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Closure7.apply:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
2347,2350c1281,1284
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
2353,2629c1287,1317
< 	la	$a0 str_const15
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label66
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label66:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 28($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label67
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label67:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label68
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label68:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label69
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label69:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label70
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label70:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label72
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label72:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label73
< 	bgt	$t2 21 label73
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label74
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label74:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label71
< label73:
< 	blt	$t2 0 label75
< 	bgt	$t2 25 label75
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label76
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label76:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label71
< label75:
< 	jal	_case_abort
< label71:
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label77
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label77:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label78
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label78:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label79
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label79:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	bne	$s2 $zero label81
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label81:
< 	lw	$t2 0($s2)
< 	blt	$t2 3 label82
< 	bgt	$t2 21 label82
< 	move	$s4 $s2
< 	sw	$s3 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s4
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label83
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label83:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label80
< label82:
< 	blt	$t2 0 label84
< 	bgt	$t2 25 label84
< 	move	$s4 $s2
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label85
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label85:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label80
< label84:
< 	jal	_case_abort
< label80:
< 	move	$s2 $a0
< 	bne	$s1 $zero label87
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label87:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label88
< 	bgt	$t2 21 label88
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label89
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label89:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label86
< label88:
< 	blt	$t2 0 label90
< 	bgt	$t2 25 label90
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label91
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label91:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label86
< label90:
< 	jal	_case_abort
< label86:
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 32
---
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 28
> 	jr	$ra	
> Closure6.apply:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Closure17.apply:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
2638,2665c1326
< 	la	$a0 str_const14
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label92
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label92:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure16_protObj
< 	jal	Object.copy
< 	jal	Closure16_init
< 	bne	$a0 $zero label93
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label93:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2671c1332
< Closure2.apply:
---
> Closure4.apply:
2678,2705c1339
< 	la	$a0 str_const13
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label94
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label94:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure15_protObj
< 	jal	Object.copy
< 	jal	Closure15_init
< 	bne	$a0 $zero label95
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label95:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2711,2715c1345,1349
< Closure14.apply:
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> Closure11.apply:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
2718,2994c1352,1356
< 	la	$a0 str_const12
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label96
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label96:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 28($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label97
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label97:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label98
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label98:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label99
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label99:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label100
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label100:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label102
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label102:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label103
< 	bgt	$t2 21 label103
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label104
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label104:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label101
< label103:
< 	blt	$t2 0 label105
< 	bgt	$t2 25 label105
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label106
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label106:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label101
< label105:
< 	jal	_case_abort
< label101:
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label107
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label107:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label108
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label108:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label109
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label109:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	bne	$s2 $zero label111
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label111:
< 	lw	$t2 0($s2)
< 	blt	$t2 3 label112
< 	bgt	$t2 21 label112
< 	move	$s4 $s2
< 	sw	$s3 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s4
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label113
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label113:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label110
< label112:
< 	blt	$t2 0 label114
< 	bgt	$t2 25 label114
< 	move	$s4 $s2
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label115
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label115:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label110
< label114:
< 	jal	_case_abort
< label110:
< 	move	$s2 $a0
< 	bne	$s1 $zero label117
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label117:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label118
< 	bgt	$t2 21 label118
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label119
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label119:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label116
< label118:
< 	blt	$t2 0 label120
< 	bgt	$t2 25 label120
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label121
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label121:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label116
< label120:
< 	jal	_case_abort
< label116:
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 32
---
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 28
2996c1358
< Closure13.apply:
---
> Closure10.apply:
3003,3030c1365,1378
< 	la	$a0 str_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label122
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label122:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure14_protObj
< 	jal	Object.copy
< 	jal	Closure14_init
< 	bne	$a0 $zero label123
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label123:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Closure9.apply:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
3035a1384,1409
> Closure8.apply:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Closure14.apply:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 28
> 	jr	$ra	
3043,3070c1417
< 	la	$a0 str_const10
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label124
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label124:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure13_protObj
< 	jal	Object.copy
< 	jal	Closure13_init
< 	bne	$a0 $zero label125
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label125:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
---
> 	move	$a0 null
3083,3113c1430
< 	la	$a0 str_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label126
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label126:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label127
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label127:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label128
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label128:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	move	$a0 null
3119c1436
< Closure4.apply:
---
> Closure13.apply:
3126,3153c1443
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label129
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label129:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Closure12_protObj
< 	jal	Object.copy
< 	jal	Closure12_init
< 	bne	$a0 $zero label130
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label130:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
---
> 	move	$a0 null
3159,3163c1449,1466
< Closure11.apply:
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> Closure1.apply:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
3166d1468
< 	la	$a0 str_const7
3169,3170c1471
< 	move	$a0 $s0
< 	bne	$a0 $zero label131
---
> 	bne	$a0 $zero label0
3174c1475
< label131:
---
> label0:
3176,3181c1477,1482
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 28($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label132
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	bne	$a0 $zero label1
3185c1486
< label132:
---
> label1:
3187,3189c1488,1492
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label133
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label3
3192,3197c1495,1505
< 	jal	_dispatch_abort
< label133:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label134
---
> 	jal	_case_abort2
> label3:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label4
> 	bgt	$t2 21 label4
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label5
3201c1509
< label134:
---
> label5:
3203,3208c1511,1526
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label135
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label2
> label4:
> 	blt	$t2 0 label6
> 	bgt	$t2 25 label6
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label2
> label6:
> 	jal	_case_abort
> label2:
> 	sw	$a0 0($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	bne	$a0 $zero label7
3212c1530
< label135:
---
> label7:
3214,3218c1532,1536
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	bne	$s1 $zero label137
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label9
3222,3227c1540,1546
< label137:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label138
< 	bgt	$t2 21 label138
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
---
> label9:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label10
> 	bgt	$t2 21 label10
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
3229,3233c1548,1549
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label139
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label11
3237c1553
< label139:
---
> label11:
3240,3274c1556,1564
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label136
< label138:
< 	blt	$t2 0 label140
< 	bgt	$t2 25 label140
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label141
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label141:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label136
< label140:
---
> 	jalr	$t1
> 	b	label8
> label10:
> 	blt	$t2 0 label12
> 	bgt	$t2 25 label12
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label8
> label12:
3276,3303c1566,1570
< label136:
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label142
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label142:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label143
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label143:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label144
---
> label8:
> 	sw	$a0 0($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	bne	$a0 $zero label13
3307c1574
< label144:
---
> label13:
3309,3314c1576,1580
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	bne	$s2 $zero label146
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label15
3318,3323c1584,1590
< label146:
< 	lw	$t2 0($s2)
< 	blt	$t2 3 label147
< 	bgt	$t2 21 label147
< 	move	$s4 $s2
< 	sw	$s3 0($sp)
---
> label15:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label16
> 	bgt	$t2 21 label16
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
3325,3330c1592,1593
< 	move	$a0 $s4
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label148
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label17
3334c1597
< label148:
---
> label17:
3337,3376c1600,1608
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label145
< label147:
< 	blt	$t2 0 label149
< 	bgt	$t2 25 label149
< 	move	$s4 $s2
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label150
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label150:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label145
< label149:
---
> 	jalr	$t1
> 	b	label14
> label16:
> 	blt	$t2 0 label18
> 	bgt	$t2 25 label18
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label14
> label18:
3378,3389c1610,1612
< label145:
< 	move	$s2 $a0
< 	bne	$s1 $zero label152
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_case_abort2
< label152:
< 	lw	$t2 0($s1)
< 	blt	$t2 3 label153
< 	bgt	$t2 21 label153
< 	move	$s3 $s1
< 	sw	$s2 0($sp)
---
> label14:
> 	sw	$a0 0($fp)
> 	sw	$a0 0($sp)
3391,3395c1614
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label154
---
> 	bne	$a0 $zero label19
3399c1618
< label154:
---
> label19:
3401,3415c1620,1624
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label151
< label153:
< 	blt	$t2 0 label155
< 	bgt	$t2 25 label155
< 	move	$s3 $s1
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label156
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label21
3418,3451c1627,1633
< 	jal	_dispatch_abort
< label156:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 EvalObject_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	jal	EvalObject_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label151
< label155:
< 	jal	_case_abort
< label151:
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 32
< 	jr	$ra	
< Closure10.apply:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const6
---
> 	jal	_case_abort2
> label21:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label22
> 	bgt	$t2 21 label22
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
3454,3455c1636,1637
< 	move	$a0 $s0
< 	bne	$a0 $zero label157
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label23
3459c1641
< label157:
---
> label23:
3461,3465c1643,1655
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label20
> label22:
> 	blt	$t2 0 label24
> 	bgt	$t2 25 label24
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label20
> label24:
> 	jal	_case_abort
> label20:
> 	sw	$a0 0($fp)
3468,3471c1658
< 	la	$a0 Closure11_protObj
< 	jal	Object.copy
< 	jal	Closure11_init
< 	bne	$a0 $zero label158
---
> 	bne	$a0 $zero label25
3475c1662
< label158:
---
> label25:
3478,3495c1665,1668
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Closure5.apply:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label159
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label27
3498,3505c1671,1677
< 	jal	_dispatch_abort
< label159:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	jal	_case_abort2
> label27:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label28
> 	bgt	$t2 21 label28
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
3508,3511c1680,1681
< 	la	$a0 Closure10_protObj
< 	jal	Object.copy
< 	jal	Closure10_init
< 	bne	$a0 $zero label160
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label29
3515c1685
< label160:
---
> label29:
3517,3531c1687,1699
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Closure6.apply:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const4
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label26
> label28:
> 	blt	$t2 0 label30
> 	bgt	$t2 25 label30
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label26
> label30:
> 	jal	_case_abort
> label26:
> 	sw	$a0 0($fp)
3534,3535c1702
< 	move	$a0 $s0
< 	bne	$a0 $zero label161
---
> 	bne	$a0 $zero label31
3539c1706
< label161:
---
> label31:
3541,3546c1708,1712
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label162
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label33
3549,3566c1715,1721
< 	jal	_dispatch_abort
< label162:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Closure9.apply:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const3
---
> 	jal	_case_abort2
> label33:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label34
> 	bgt	$t2 21 label34
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
3569,3570c1724,1725
< 	move	$a0 $s0
< 	bne	$a0 $zero label163
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label35
3574c1729
< label163:
---
> label35:
3576,3581c1731,1746
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label164
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label32
> label34:
> 	blt	$t2 0 label36
> 	bgt	$t2 25 label36
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label32
> label36:
> 	jal	_case_abort
> label32:
> 	sw	$a0 0($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	bne	$a0 $zero label37
3585c1750
< label164:
---
> label37:
3587,3589c1752,1756
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label165
---
> 	lw	$t1 40($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label39
3592,3609c1759,1765
< 	jal	_dispatch_abort
< label165:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Closure7.apply:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const2
---
> 	jal	_case_abort2
> label39:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label40
> 	bgt	$t2 21 label40
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
3612,3613c1768,1769
< 	move	$a0 $s0
< 	bne	$a0 $zero label166
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label41
3617c1773
< label166:
---
> label41:
3619,3623c1775,1787
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label38
> label40:
> 	blt	$t2 0 label42
> 	bgt	$t2 25 label42
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label38
> label42:
> 	jal	_case_abort
> label38:
> 	sw	$a0 0($fp)
3626,3629c1790
< 	la	$a0 Closure9_protObj
< 	jal	Object.copy
< 	jal	Closure9_init
< 	bne	$a0 $zero label167
---
> 	bne	$a0 $zero label43
3633c1794
< label167:
---
> label43:
3636,3653c1797,1800
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Closure8.apply:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label168
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label45
3656,3664c1803,1813
< 	jal	_dispatch_abort
< label168:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label169
---
> 	jal	_case_abort2
> label45:
> 	lw	$t2 0($a0)
> 	blt	$t2 3 label46
> 	bgt	$t2 21 label46
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label47
3668c1817
< label169:
---
> label47:
3670,3675c1819,1834
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label44
> label46:
> 	blt	$t2 0 label48
> 	bgt	$t2 25 label48
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	b	label44
> label48:
> 	jal	_case_abort
> label44:
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 20
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/c.cl
+ spim_outname=c.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/c.cl
+ spim_errname=c.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.spim.out
6,19c6,65
< Applying closure 0
< Applying closure 1
< Applying closure 17
< Applying closure 2
< Applying closure 15
< Applying closure 16
< Applying closure 4
< Applying closure 5
< Applying closure 12
< Applying closure 6
< Applying closure 7
< COOL program successfully executed
< Stats -- #instructions : 4206
<          #reads : 969  #writes 796  #branches 799  #other 1642
---
> The following symbols are undefined:
> Closure10_protObj
> Closure_protObj
> heap_start
> Closure14_init
> Closure8_init
> Closure9_protObj
> EvalObject_init
> Closure13_init
> Closure7_init
> Int_protObj
> Closure4_protObj
> Closure14_protObj
> Closure12_init
> Closure6_init
> Bool_dispTab
> Closure8_protObj
> Closure11_init
> Main.main
> Closure5_init
> Bool_init
> Closure_init
> Closure3_protObj
> String_protObj
> Closure13_protObj
> Closure10_init
> Closure4_init
> Closure7_protObj
> Closure17_protObj
> Closure3_init
> IO_init
> Int_init
> Int_dispTab
> Closure2_protObj
> String_init
> Closure12_protObj
> Object_init
> EvalObject_protObj
> Closure2_init
> IO_protObj
> Closure17_init
> Closure6_protObj
> Main_protObj
> Closure16_protObj
> Closure1_init
> Closure1_protObj
> String_dispTab
> Closure11_protObj
> Closure16_init
> Closure0_init
> Main_init
> Bool_protObj
> Closure15_init
> Closure5_protObj
> Closure9_init
> Object_protObj
> Closure15_protObj
> Closure0_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.spim.out.filtered
6,17c6,65
< Applying closure 0
< Applying closure 1
< Applying closure 17
< Applying closure 2
< Applying closure 15
< Applying closure 16
< Applying closure 4
< Applying closure 5
< Applying closure 12
< Applying closure 6
< Applying closure 7
< COOL program successfully executed
---
> The following symbols are undefined:
> Closure10_protObj
> Closure_protObj
> heap_start
> Closure14_init
> Closure8_init
> Closure9_protObj
> EvalObject_init
> Closure13_init
> Closure7_init
> Int_protObj
> Closure4_protObj
> Closure14_protObj
> Closure12_init
> Closure6_init
> Bool_dispTab
> Closure8_protObj
> Closure11_init
> Main.main
> Closure5_init
> Bool_init
> Closure_init
> Closure3_protObj
> String_protObj
> Closure13_protObj
> Closure10_init
> Closure4_init
> Closure7_protObj
> Closure17_protObj
> Closure3_init
> IO_init
> Int_init
> Int_dispTab
> Closure2_protObj
> String_init
> Closure12_protObj
> Object_init
> EvalObject_protObj
> Closure2_init
> IO_protObj
> Closure17_init
> Closure6_protObj
> Main_protObj
> Closure16_protObj
> Closure1_init
> Closure1_protObj
> String_dispTab
> Closure11_protObj
> Closure16_init
> Closure0_init
> Main_init
> Bool_protObj
> Closure15_init
> Closure5_protObj
> Closure9_init
> Object_protObj
> Closure15_protObj
> Closure0_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/c.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 619 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/c.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/c.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/cells.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/cells.cl
+ outname=cells.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/cells.cl
+ errname=cells.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.out /home/raj/cool/distro/testsuite/cgen/cells.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.out /home/raj/cool/distro/testsuite/cgen/cells.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	3
17c17
< 	.word	5
---
> 	.word	6
29c29
< 	.word	5
---
> 	.word	6
36,37c36
< str_const12:
< 	.word	5
---
> str_const8:
38a38
> 	.word	9
41c41
< 	.ascii	"Main"
---
> 	.ascii	"CellularAutomaton"
45,46c45
< str_const11:
< 	.word	5
---
> str_const0:
47a47
> 	.word	16
50c50
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/cells.cl"
54,55c54
< str_const10:
< 	.word	5
---
> str_const7:
56a56
> 	.word	5
58,59c58,59
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const5
> 	.ascii	"IO"
63,64c63,64
< str_const9:
< 	.word	5
---
> str_const1:
> 	.word	6
67,68c67,68
< 	.word	int_const5
< 	.ascii	"Int"
---
> 	.word	int_const0
> 	.ascii	"\n"
72,74c72,74
< str_const8:
< 	.word	5
< 	.word	9
---
> str_const12:
> 	.word	6
> 	.word	6
77c77
< 	.ascii	"CellularAutomaton"
---
> 	.ascii	"String"
81,83c81,83
< str_const7:
< 	.word	5
< 	.word	5
---
> str_const5:
> 	.word	6
> 	.word	8
86c86
< 	.ascii	"IO"
---
> 	.ascii	"<basic class>"
90,91c90
< str_const6:
< 	.word	5
---
> str_const11:
92a92
> 	.word	5
94,95c94,95
< 	.word	int_const4
< 	.ascii	"Object"
---
> 	.word	int_const8
> 	.ascii	"Int"
99c99,100
< str_const5:
---
> str_const3:
> 	.word	6
101d101
< 	.word	8
103,104c103,104
< 	.word	int_const8
< 	.ascii	"<basic class>"
---
> 	.word	int_const0
> 	.ascii	"."
109c109
< 	.word	5
---
> 	.word	6
117,119c117,119
< str_const3:
< 	.word	5
< 	.word	16
---
> str_const9:
> 	.word	6
> 	.word	6
122c122
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/cells.cl"
---
> 	.ascii	"Bool"
127c127
< 	.word	5
---
> 	.word	6
131c131
< 	.ascii	"."
---
> 	.ascii	"X"
135,137c135,137
< str_const1:
< 	.word	5
< 	.word	5
---
> str_const6:
> 	.word	6
> 	.word	6
139,140c139,140
< 	.word	int_const0
< 	.ascii	"X"
---
> 	.word	int_const6
> 	.ascii	"Object"
144,146c144,146
< str_const0:
< 	.word	5
< 	.word	5
---
> str_const10:
> 	.word	6
> 	.word	6
148,149c148,149
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const10
> 	.ascii	"Main"
153,154c153,154
< int_const10:
< 	.word	3
---
> int_const1:
> 	.word	5
157c157
< 	.word	45
---
> 	.word	0
159,160c159,160
< int_const9:
< 	.word	3
---
> int_const4:
> 	.word	5
163c163
< 	.word	19
---
> 	.word	45
165,166c165,166
< int_const8:
< 	.word	3
---
> int_const0:
> 	.word	5
169c169
< 	.word	13
---
> 	.word	1
172c172
< 	.word	3
---
> 	.word	5
175c175
< 	.word	2
---
> 	.word	13
177,178c177,178
< int_const6:
< 	.word	3
---
> int_const5:
> 	.word	5
181c181
< 	.word	17
---
> 	.word	2
183,184c183,184
< int_const5:
< 	.word	3
---
> int_const8:
> 	.word	5
189,190c189,190
< int_const4:
< 	.word	3
---
> int_const10:
> 	.word	5
193c193
< 	.word	6
---
> 	.word	4
195,196c195,196
< int_const3:
< 	.word	3
---
> int_const6:
> 	.word	5
199c199
< 	.word	4
---
> 	.word	6
201,202c201,202
< int_const2:
< 	.word	3
---
> int_const3:
> 	.word	5
205c205
< 	.word	20
---
> 	.word	17
207,208c207,208
< int_const1:
< 	.word	3
---
> int_const9:
> 	.word	5
211c211
< 	.word	0
---
> 	.word	19
213,214c213,214
< int_const0:
< 	.word	3
---
> int_const2:
> 	.word	5
217c217
< 	.word	1
---
> 	.word	20
220c220
< 	.word	4
---
> 	.word	3
226c226
< 	.word	4
---
> 	.word	3
245,246d244
< 	.word	Int_protObj
< 	.word	Int_init
249,250d246
< 	.word	String_protObj
< 	.word	String_init
253,301c249,253
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< CellularAutomaton_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	CellularAutomaton.init
< 	.word	CellularAutomaton.print
< 	.word	CellularAutomaton.num_cells
< 	.word	CellularAutomaton.cell
< 	.word	CellularAutomaton.cell_left_neighbor
< 	.word	CellularAutomaton.cell_right_neighbor
< 	.word	CellularAutomaton.cell_at_next_evolution
< 	.word	CellularAutomaton.evolve
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	String_protObj
> 	.word	String_init
> Object_dispTabIO_dispTabCellularAutomaton_dispTabBool_dispTabMain_dispTabInt_dispTabString_dispTab	.word	-1
307,308c259,265
< Main_protObj:
< 	.word	6
---
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> CellularAutomaton_protObj:
> 	.word	2
310,311c267,268
< 	.word	Main_dispTab
< 	.word	0
---
> 	.word	CellularAutomaton_dispTab
> 	.word	str_const13
313,317c270,273
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const1
---
> Bool_protObj:
> 	.word	3
> 	.word	4
> 	.word	Bool_dispTab
320c276
< Bool_protObj:
---
> Main_protObj:
323c279
< 	.word	Bool_dispTab
---
> 	.word	Main_dispTab
327c283
< 	.word	3
---
> 	.word	5
332,341c288,293
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< CellularAutomaton_protObj:
< 	.word	2
< 	.word	4
< 	.word	CellularAutomaton_dispTab
< 	.word	str_const13
---
> String_protObj:
> 	.word	6
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const1
> 	.word	0
364c316
< Main_init:
---
> IO_init:
378c330
< String_init:
---
> CellularAutomaton_init:
385c337
< 	jal	Object_init
---
> 	jal	IO_init
406c358
< Int_init:
---
> Main_init:
420c372
< IO_init:
---
> Int_init:
434c386
< CellularAutomaton_init:
---
> String_init:
441c393
< 	jal	IO_init
---
> 	jal	Object_init
448,528d399
< Main.main:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 str_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 CellularAutomaton_protObj
< 	jal	Object.copy
< 	jal	CellularAutomaton_init
< 	bne	$a0 $zero label0
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	la	$s1 int_const2
< label2:
< 	la	$s2 int_const1
< 	lw	$t1 12($s2)
< 	lw	$t2 12($s1)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label4
< 	la	$a0 bool_const0
< label4:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label3
< 	lw	$a0 12($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 56($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$a0 12($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $s1
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	b	label2
< label3:
< 	move	$a0 $zero
< 	move	$a0 $s0
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
< 	jr	$ra	
536,538c407
< 	lw	$a0 12($fp)
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
551,574c420
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
587,589c433,435
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label9
< 	la	$a0 str_const3
---
> 	move	$a0 null
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
592c438
< label9:
---
> label0:
595c441
< 	jalr		$t1
---
> 	jalr	$t1
614,616c460,462
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label10
< 	la	$a0 str_const3
---
> 	move	$a0 null
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
619c465
< label10:
---
> label1:
622c468
< 	jalr		$t1
---
> 	jalr	$t1
629,632c475,478
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
635,696c481,484
< 	lw	$s1 16($fp)
< 	la	$t2 int_const1
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label13
< 	la	$a1 bool_const0
< 	jal	equality_test
< label13:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label11
< 	move	$a0 $s0
< 	bne	$a0 $zero label14
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label15
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	b	label12
< label11:
< 	lw	$s1 16($fp)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label16
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< label12:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
699,702c487,490
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
705,769c493,496
< 	lw	$s1 20($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label20
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$t1 $s1
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label19
< 	la	$a1 bool_const0
< 	jal	equality_test
< label19:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label17
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label21
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	b	label18
< label17:
< 	lw	$s1 20($fp)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label22
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label22:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< label18:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 24
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
772,775c499,502
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
778,893c505,508
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label29
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label29:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$t2 str_const1
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label28
< 	la	$a1 bool_const0
< 	jal	equality_test
< label28:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label26
< 	la	$a0 int_const0
< 	b	label27
< label26:
< 	la	$a0 int_const1
< label27:
< 	move	$s1 $a0
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label33
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label33:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$t2 str_const1
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label32
< 	la	$a1 bool_const0
< 	jal	equality_test
< label32:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label30
< 	la	$a0 int_const0
< 	b	label31
< label30:
< 	la	$a0 int_const1
< label31:
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label37
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label37:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$t2 str_const1
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label36
< 	la	$a1 bool_const0
< 	jal	equality_test
< label36:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label34
< 	la	$a0 int_const0
< 	b	label35
< label34:
< 	la	$a0 int_const1
< label35:
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label25
< 	la	$a1 bool_const0
< 	jal	equality_test
< label25:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label23
< 	la	$a0 str_const1
< 	b	label24
< label23:
< 	la	$a0 str_const2
< label24:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 24
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
896,899c511,514
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
902c517,518
< 	la	$s1 int_const1
---
> 	la	$a0 int_const1
> 	sw	$a0 0($fp)
904,906c520,521
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label38
< 	la	$a0 str_const3
---
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
909c524
< label38:
---
> label2:
912,977c527,548
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$s3 str_const13
< label39:
< 	move	$s4 $s1
< 	lw	$t1 12($s4)
< 	lw	$t2 12($s2)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label41
< 	la	$a0 bool_const0
< label41:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label40
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label42
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label42:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label43
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label43:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s3 $a0
< 	move	$s4 $s1
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	b	label39
< label40:
< 	move	$a0 $zero
< 	sw	$s3 12($s0)
< 	move	$a0 $s0
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 28
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	la	$a0 str_const13
> 	sw	$a0 8($fp)
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 24
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/cells.cl
+ spim_outname=cells.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/cells.cl
+ spim_errname=cells.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.spim.out
6,30c6,27
<          X         
< ........XXX........
< .......X...X.......
< ......XXX.XXX......
< .....X.......X.....
< ....XXX.....XXX....
< ...X...X...X...X...
< ..XXX.XXX.XXX.XXX..
< .X...............X.
< XXX.............XXX
< ...X...........X...
< Increasing heap...
< ..XXX.........XXX..
< .X...X.......X...X.
< XXX.XXX.....XXX.XXX
< .......X...X.......
< ......XXX.XXX......
< .....X.......X.....
< ....XXX.....XXX....
< ...X...X...X...X...
< ..XXX.XXX.XXX.XXX..
< .X...............X.
< COOL program successfully executed
< Stats -- #instructions : 584934
<          #reads : 132639  #writes 78031  #branches 126373  #other 247891
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> CellularAutomaton_protObj
> CellularAutomaton_init
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.spim.out.filtered
6,28c6,27
<          X         
< ........XXX........
< .......X...X.......
< ......XXX.XXX......
< .....X.......X.....
< ....XXX.....XXX....
< ...X...X...X...X...
< ..XXX.XXX.XXX.XXX..
< .X...............X.
< XXX.............XXX
< ...X...........X...
< Increasing heap...
< ..XXX.........XXX..
< .X...X.......X...X.
< XXX.XXX.....XXX.XXX
< .......X...X.......
< ......XXX.XXX......
< .....X.......X.....
< ....XXX.....XXX....
< ...X...X...X...X...
< ..XXX.XXX.XXX.XXX..
< .X...............X.
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> CellularAutomaton_protObj
> CellularAutomaton_init
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/cells.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 253 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/cells.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/cells.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ outname=copy-self-dispatch.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ errname=copy-self-dispatch.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.out
13c13
< 	.word	4
---
> 	.word	1
15c15
< 	.word	5
---
> 	.word	2
17c17
< 	.word	6
---
> 	.word	3
29c29
< 	.word	6
---
> 	.word	3
36,37c36,37
< str_const11:
< 	.word	6
---
> str_const10:
> 	.word	3
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Derived"
45,47c45,47
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const8:
> 	.word	3
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54,55c54,55
< str_const9:
< 	.word	6
---
> str_const7:
> 	.word	3
58,59c58,59
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"String"
63c63,64
< str_const8:
---
> str_const1:
> 	.word	3
65d65
< 	.word	5
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"base\n"
72,74c72,74
< str_const7:
< 	.word	6
< 	.word	6
---
> str_const3:
> 	.word	3
> 	.word	8
76,77c76,77
< 	.word	int_const4
< 	.ascii	"Derived"
---
> 	.word	int_const5
> 	.ascii	"<basic class>"
81,82c81,82
< str_const6:
< 	.word	6
---
> str_const9:
> 	.word	3
85c85
< 	.word	int_const1
---
> 	.word	int_const6
91c91
< 	.word	6
---
> 	.word	3
94,95c94,95
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const7
> 	.ascii	"Int"
99,101c99,101
< str_const4:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	19
103,104c103,104
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl"
108c108,109
< str_const3:
---
> str_const6:
> 	.word	3
110d110
< 	.word	8
113c113
< 	.ascii	"<basic class>"
---
> 	.ascii	"Bool"
117c117,118
< str_const2:
---
> str_const4:
> 	.word	3
119d119
< 	.word	7
121,122c121,122
< 	.word	int_const7
< 	.ascii	"derived\n"
---
> 	.word	int_const3
> 	.ascii	"Object"
126c126,127
< str_const1:
---
> str_const11:
> 	.word	3
128d128
< 	.word	19
130,131c130,131
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl"
---
> 	.word	int_const6
> 	.ascii	"Main"
135,137c135,137
< str_const0:
< 	.word	6
< 	.word	6
---
> str_const2:
> 	.word	3
> 	.word	7
140c140
< 	.ascii	"base\n"
---
> 	.ascii	"derived\n"
144c144,145
< int_const9:
---
> int_const0:
> 	.word	1
145a147,151
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
> int_const5:
> 	.word	1
148c154
< 	.word	5
---
> 	.word	13
150c156,157
< int_const8:
---
> int_const2:
> 	.word	1
151a159,163
> 	.word	Int_dispTab
> 	.word	2
> 	.word	-1
> int_const8:
> 	.word	1
157c169
< 	.word	4
---
> 	.word	1
160c172
< 	.word	8
---
> 	.word	3
163c175
< 	.word	4
---
> 	.word	1
166,169d177
< 	.word	13
< 	.word	-1
< int_const5:
< 	.word	4
171,172d178
< 	.word	Int_dispTab
< 	.word	2
175c181
< 	.word	4
---
> 	.word	1
178c184
< 	.word	7
---
> 	.word	5
181,187c187
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	3
< 	.word	-1
< int_const2:
< 	.word	4
---
> 	.word	1
193c193
< 	.word	4
---
> 	.word	1
196c196
< 	.word	4
---
> 	.word	7
198,199c198,199
< int_const0:
< 	.word	4
---
> int_const9:
> 	.word	1
202c202
< 	.word	0
---
> 	.word	8
205c205
< 	.word	5
---
> 	.word	2
211c211
< 	.word	5
---
> 	.word	2
227,232d226
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Base_protObj
< 	.word	Base_init
< 	.word	Derived_protObj
< 	.word	Derived_init
238a233,238
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Base_protObj
> 	.word	Base_init
> 	.word	Derived_protObj
> 	.word	Derived_init
241,293c241
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< 	.word	Base.duplicate
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Derived.identify
< 	.word	Base.duplicate
< 	.word	-1
---
> Object_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTabBase_dispTabDerived_dispTabMain_dispTab	.word	-1
299,308c247,250
< Main_protObj:
< 	.word	7
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
< String_protObj:
< 	.word	6
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
312c254
< 	.word	5
---
> 	.word	2
317,320c259,263
< Int_protObj:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	3
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
324c267
< 	.word	1
---
> 	.word	4
329c272
< 	.word	2
---
> 	.word	5
334c277
< 	.word	3
---
> 	.word	6
336a280,284
> 	.word	-1
> Main_protObj:
> 	.word	7
> 	.word	3
> 	.word	Main_dispTab
359,373c307
< Main_init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	jal	Object_init
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< String_init:
---
> Int_init:
401c335
< Int_init:
---
> String_init:
457c391
< Main.main:
---
> Main_init:
464,482c398,399
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
---
> 	jal	Object_init
> 	move	$a0 $s0
495c412
< 	la	$a0 str_const0
---
> 	la	$a0 str_const1
499,500c416,417
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
503c420
< label2:
---
> label0:
506c423
< 	jalr		$t1
---
> 	jalr	$t1
520,521c437,438
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
524c441
< label3:
---
> label1:
527c444
< 	jalr		$t1
---
> 	jalr	$t1
543a461,488
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label2:
> 	lw	$t1 8($a0)
> 	lw	$t1 12($t1)
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label3:
> 	lw	$t1 8($a0)
> 	lw	$t1 32($t1)
> 	jalr	$t1
545c490
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
550,551c495,496
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	lw	$t1 28($t1)
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ spim_outname=copy-self-dispatch.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-dispatch.cl
+ spim_errname=copy-self-dispatch.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.spim.out
6,9c6,29
< derived
< COOL program successfully executed
< Stats -- #instructions : 327
<          #reads : 66  #writes 49  #branches 67  #other 145
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.spim.out.filtered
6,7c6,29
< derived
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-dispatch.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 241 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-dispatch.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/copy-self-dispatch.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ outname=copy-self-init.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ errname=copy-self-init.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.out /home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.out /home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.out
13c13
< 	.word	4
---
> 	.word	1
15c15
< 	.word	5
---
> 	.word	4
17c17
< 	.word	6
---
> 	.word	3
29c29
< 	.word	6
---
> 	.word	3
36,37c36,37
< str_const12:
< 	.word	6
---
> str_const2:
> 	.word	3
40,41c40,41
< 	.word	int_const5
< 	.ascii	"Main"
---
> 	.word	int_const2
> 	.ascii	"old: "
45,46c45,46
< str_const11:
< 	.word	6
---
> str_const12:
> 	.word	3
49,50c49,50
< 	.word	int_const6
< 	.ascii	"String"
---
> 	.word	int_const5
> 	.ascii	"Derived"
54,56c54,56
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	18
58,59c58,59
< 	.word	int_const5
< 	.ascii	"Bool"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/copy-self-init.cl"
63,64c63,64
< str_const9:
< 	.word	6
---
> str_const10:
> 	.word	3
67,68c67,68
< 	.word	int_const7
< 	.ascii	"Int"
---
> 	.word	int_const1
> 	.ascii	"IO"
72,74c72,74
< str_const8:
< 	.word	6
< 	.word	6
---
> str_const1:
> 	.word	3
> 	.word	5
76,77c76,77
< 	.word	int_const8
< 	.ascii	"Derived"
---
> 	.word	int_const0
> 	.ascii	"\n"
81,82c81,82
< str_const7:
< 	.word	6
---
> str_const8:
> 	.word	3
85,86c85,86
< 	.word	int_const5
< 	.ascii	"Base"
---
> 	.word	int_const7
> 	.ascii	"String"
90,92c90,92
< str_const6:
< 	.word	6
< 	.word	5
---
> str_const4:
> 	.word	3
> 	.word	8
94,95c94,95
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const8
> 	.ascii	"<basic class>"
99,100c99,100
< str_const5:
< 	.word	6
---
> str_const11:
> 	.word	3
103,104c103,104
< 	.word	int_const6
< 	.ascii	"Object"
---
> 	.word	int_const9
> 	.ascii	"Base"
108,110c108,110
< str_const4:
< 	.word	6
< 	.word	8
---
> str_const6:
> 	.word	3
> 	.word	5
112,113c112,113
< 	.word	int_const9
< 	.ascii	"<basic class>"
---
> 	.word	int_const10
> 	.ascii	"Int"
118c118
< 	.word	6
---
> 	.word	3
121c121
< 	.word	int_const10
---
> 	.word	int_const11
126,127c126,127
< str_const2:
< 	.word	6
---
> str_const9:
> 	.word	3
130,131c130,131
< 	.word	int_const2
< 	.ascii	"old: "
---
> 	.word	int_const9
> 	.ascii	"Bool"
135c135,136
< str_const1:
---
> str_const5:
> 	.word	3
137d137
< 	.word	18
139,140c139,140
< 	.word	int_const11
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/copy-self-init.cl"
---
> 	.word	int_const7
> 	.ascii	"Object"
144c144,145
< str_const0:
---
> str_const7:
> 	.word	3
146d146
< 	.word	5
148,149c148,149
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const9
> 	.ascii	"Main"
153,154c153,154
< int_const11:
< 	.word	4
---
> int_const4:
> 	.word	1
157c157
< 	.word	54
---
> 	.word	0
159,160c159,160
< int_const10:
< 	.word	4
---
> int_const0:
> 	.word	1
163c163
< 	.word	8
---
> 	.word	1
165,166c165,166
< int_const9:
< 	.word	4
---
> int_const8:
> 	.word	1
171,172c171,172
< int_const8:
< 	.word	4
---
> int_const1:
> 	.word	1
175c175
< 	.word	7
---
> 	.word	2
177,178c177,178
< int_const7:
< 	.word	4
---
> int_const10:
> 	.word	1
183,184c183,184
< int_const6:
< 	.word	4
---
> int_const9:
> 	.word	1
187,189d186
< 	.word	6
< 	.word	-1
< int_const5:
190a188,190
> 	.word	-1
> int_const2:
> 	.word	1
193c193
< 	.word	4
---
> 	.word	5
195,196c195,196
< int_const4:
< 	.word	4
---
> int_const7:
> 	.word	1
199c199
< 	.word	0
---
> 	.word	6
201,202c201,202
< int_const3:
< 	.word	4
---
> int_const5:
> 	.word	1
205c205
< 	.word	29
---
> 	.word	7
207,208c207,208
< int_const2:
< 	.word	4
---
> int_const3:
> 	.word	1
211c211
< 	.word	5
---
> 	.word	29
213,214c213,214
< int_const1:
< 	.word	4
---
> int_const11:
> 	.word	1
217c217
< 	.word	2
---
> 	.word	8
219,220c219,220
< int_const0:
< 	.word	4
---
> int_const6:
> 	.word	1
223c223
< 	.word	1
---
> 	.word	54
226c226
< 	.word	5
---
> 	.word	4
232c232
< 	.word	5
---
> 	.word	4
247a248,255
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Bool_protObj
> 	.word	Bool_init
254,314c262
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.report
< 	.word	Base.duplicate
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Derived.report
< 	.word	Base.duplicate
< 	.word	-1
---
> Object_dispTabInt_dispTabMain_dispTabString_dispTabBool_dispTabIO_dispTabBase_dispTabDerived_dispTab	.word	-1
319a268,273
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
321c275
< 	.word	7
---
> 	.word	2
326c280
< 	.word	6
---
> 	.word	3
333,338d286
< 	.word	5
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
341c289
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
345c293
< 	.word	1
---
> 	.word	5
350c298
< 	.word	2
---
> 	.word	6
356c304
< 	.word	3
---
> 	.word	7
383c331
< Main_init:
---
> Int_init:
397c345
< String_init:
---
> Main_init:
411c359
< Bool_init:
---
> String_init:
425c373
< Int_init:
---
> Bool_init:
461,474d408
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
489,502d422
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 int_const1
< 	sw	$a0 16($s0)
522,526c442,443
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
529c446
< label2:
---
> label0:
532,534c449,451
< 	jalr		$t1
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
537c454
< label3:
---
> label1:
540,542c457,459
< 	jalr		$t1
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
545c462
< label4:
---
> label2:
548c465
< 	jalr		$t1
---
> 	jalr	$t1
561,585c478
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
599,600c492,493
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
603c496
< label7:
---
> label3:
606c499
< 	jalr		$t1
---
> 	jalr	$t1
619,668c512
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ spim_outname=copy-self-init.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/copy-self-init.cl
+ spim_errname=copy-self-init.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.spim.out
6,12c6,29
< old: 0.  new: 1
< old: 1.  new: 2
< old: 2.  new: 5
< old: 5.  new: 29
< COOL program successfully executed
< Stats -- #instructions : 842
<          #reads : 201  #writes 126  #branches 149  #other 366
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.spim.out.filtered
6,10c6,29
< old: 0.  new: 1
< old: 1.  new: 2
< old: 2.  new: 5
< old: 5.  new: 29
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/copy-self-init.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 262 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/copy-self-init.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/copy-self-init.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ outname=dispatch-override-dynamic.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ errname=dispatch-override-dynamic.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.out
13,14d12
< 	.word	4
< _bool_tag:
16c14
< _string_tag:
---
> _bool_tag:
17a16,17
> _string_tag:
> 	.word	4
29c29
< 	.word	6
---
> 	.word	4
36,37c36,37
< str_const11:
< 	.word	6
---
> str_const7:
> 	.word	4
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Derived"
45,47c45,47
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const5:
> 	.word	4
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54,55c54,55
< str_const9:
< 	.word	6
---
> str_const8:
> 	.word	4
58,59c58,59
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"String"
63c63,64
< str_const8:
---
> str_const1:
> 	.word	4
65d65
< 	.word	5
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"base\n"
72,74c72,74
< str_const7:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	4
> 	.word	21
76,77c76,77
< 	.word	int_const4
< 	.ascii	"Derived"
---
> 	.word	int_const5
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl"
81,83c81,83
< str_const6:
< 	.word	6
< 	.word	6
---
> str_const3:
> 	.word	4
> 	.word	8
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Base"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
90,91c90,91
< str_const5:
< 	.word	6
---
> str_const9:
> 	.word	4
94,95c94,95
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const7
> 	.ascii	"Int"
99,100c99,100
< str_const4:
< 	.word	6
---
> str_const6:
> 	.word	4
103,104c103,104
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const8
> 	.ascii	"Base"
108c108,109
< str_const3:
---
> str_const10:
> 	.word	4
110d110
< 	.word	8
112,113c112,113
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const8
> 	.ascii	"Bool"
117c117,118
< str_const2:
---
> str_const4:
> 	.word	4
119d119
< 	.word	7
121,122c121,122
< 	.word	int_const7
< 	.ascii	"derived\n"
---
> 	.word	int_const3
> 	.ascii	"Object"
126c126,127
< str_const1:
---
> str_const11:
> 	.word	4
128d128
< 	.word	21
131c131
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl"
---
> 	.ascii	"Main"
135,137c135,137
< str_const0:
< 	.word	6
< 	.word	6
---
> str_const2:
> 	.word	4
> 	.word	7
140c140
< 	.ascii	"base\n"
---
> 	.ascii	"derived\n"
144,147c144
< int_const9:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
---
> int_const0:
149,157d145
< 	.word	-1
< int_const8:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	65
< 	.word	-1
< int_const7:
< 	.word	4
160c148
< 	.word	8
---
> 	.word	0
163c151
< 	.word	4
---
> 	.word	5
168,169c156,157
< int_const5:
< 	.word	4
---
> int_const2:
> 	.word	5
174,175c162,163
< int_const4:
< 	.word	4
---
> int_const7:
> 	.word	5
178c166
< 	.word	7
---
> 	.word	3
180,181c168,169
< int_const3:
< 	.word	4
---
> int_const8:
> 	.word	5
184c172
< 	.word	3
---
> 	.word	4
186c174,175
< int_const2:
---
> int_const4:
> 	.word	5
187a177,181
> 	.word	Int_dispTab
> 	.word	5
> 	.word	-1
> int_const3:
> 	.word	5
193c187
< 	.word	4
---
> 	.word	5
196c190
< 	.word	4
---
> 	.word	7
198c192,193
< int_const0:
---
> int_const9:
> 	.word	5
199a195,199
> 	.word	Int_dispTab
> 	.word	8
> 	.word	-1
> int_const5:
> 	.word	5
202c202
< 	.word	0
---
> 	.word	65
205c205
< 	.word	5
---
> 	.word	6
211c211
< 	.word	5
---
> 	.word	6
232a233,234
> 	.word	String_protObj
> 	.word	String_init
237,238d238
< 	.word	String_protObj
< 	.word	String_init
241,291c241
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Derived.identify
< 	.word	-1
---
> Object_dispTabIO_dispTabBase_dispTabDerived_dispTabString_dispTabInt_dispTabBool_dispTabMain_dispTab	.word	-1
297,298c247,248
< Main_protObj:
< 	.word	7
---
> IO_protObj:
> 	.word	1
300c250,260
< 	.word	Main_dispTab
---
> 	.word	IO_dispTab
> 	.word	-1
> Base_protObj:
> 	.word	2
> 	.word	3
> 	.word	Base_dispTab
> 	.word	-1
> Derived_protObj:
> 	.word	3
> 	.word	3
> 	.word	Derived_dispTab
303c263
< 	.word	6
---
> 	.word	4
309c269
< Bool_protObj:
---
> Int_protObj:
312c272
< 	.word	Bool_dispTab
---
> 	.word	Int_dispTab
315,316c275,276
< Int_protObj:
< 	.word	4
---
> Bool_protObj:
> 	.word	6
318c278
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
321,332c281,282
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Base_protObj:
< 	.word	2
< 	.word	3
< 	.word	Base_dispTab
< 	.word	-1
< Derived_protObj:
< 	.word	3
---
> Main_protObj:
> 	.word	7
334c284
< 	.word	Derived_dispTab
---
> 	.word	Main_dispTab
357c307
< Main_init:
---
> IO_init:
371c321
< String_init:
---
> Base_init:
378c328
< 	jal	Object_init
---
> 	jal	IO_init
385c335
< Bool_init:
---
> Derived_init:
392c342
< 	jal	Object_init
---
> 	jal	Base_init
399c349
< Int_init:
---
> String_init:
413c363
< IO_init:
---
> Int_init:
427c377
< Base_init:
---
> Bool_init:
434c384
< 	jal	IO_init
---
> 	jal	Object_init
441c391
< Derived_init:
---
> Main_init:
448c398
< 	jal	Base_init
---
> 	jal	Object_init
455,511d404
< Main.main:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 Base_protObj
< 	jal	Object.copy
< 	jal	Base_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
519c412
< 	la	$a0 str_const0
---
> 	la	$a0 str_const1
523,524c416,417
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
527c420
< label3:
---
> label0:
530c423
< 	jalr		$t1
---
> 	jalr	$t1
547,548c440,441
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
551c444
< label4:
---
> label1:
554c447
< 	jalr		$t1
---
> 	jalr	$t1
558a452,464
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ spim_outname=dispatch-override-dynamic.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-dynamic.cl
+ spim_errname=dispatch-override-dynamic.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.spim.out
6,11c6,29
< base
< derived
< derived
< COOL program successfully executed
< Stats -- #instructions : 530
<          #reads : 110  #writes 86  #branches 102  #other 232
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.spim.out.filtered
6,9c6,29
< base
< derived
< derived
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-dynamic.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 241 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-dynamic.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/dispatch-override-dynamic.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ outname=dispatch-override-static.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ errname=dispatch-override-static.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.out
13c13
< 	.word	4
---
> 	.word	1
15c15
< 	.word	5
---
> 	.word	4
17c17
< 	.word	6
---
> 	.word	3
29c29
< 	.word	6
---
> 	.word	3
37c37
< 	.word	6
---
> 	.word	3
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Derived"
45,47c45,47
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const9:
> 	.word	3
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54,55c54,55
< str_const9:
< 	.word	6
---
> str_const7:
> 	.word	3
58,59c58,59
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"String"
63c63,64
< str_const8:
---
> str_const1:
> 	.word	3
65d65
< 	.word	5
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"base\n"
72,74c72,74
< str_const7:
< 	.word	6
< 	.word	6
---
> str_const3:
> 	.word	3
> 	.word	8
76,77c76,77
< 	.word	int_const4
< 	.ascii	"Derived"
---
> 	.word	int_const5
> 	.ascii	"<basic class>"
81,82c81,82
< str_const6:
< 	.word	6
---
> str_const10:
> 	.word	3
85c85
< 	.word	int_const1
---
> 	.word	int_const6
91c91
< 	.word	6
---
> 	.word	3
94,104c94,95
< 	.word	int_const5
< 	.ascii	"IO"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const4:
< 	.word	6
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const7
> 	.ascii	"Int"
108c99,100
< str_const3:
---
> str_const8:
> 	.word	3
110d101
< 	.word	8
113c104
< 	.ascii	"<basic class>"
---
> 	.ascii	"Bool"
117c108,109
< str_const2:
---
> str_const4:
> 	.word	3
119d110
< 	.word	7
121,122c112,113
< 	.word	int_const7
< 	.ascii	"derived\n"
---
> 	.word	int_const3
> 	.ascii	"Object"
126,127c117,118
< str_const1:
< 	.word	6
---
> str_const0:
> 	.word	3
135,136c126,127
< str_const0:
< 	.word	6
---
> str_const6:
> 	.word	3
138a130,138
> 	.word	int_const6
> 	.ascii	"Main"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const2:
> 	.word	3
> 	.word	7
> 	.word	String_dispTab
140c140
< 	.ascii	"base\n"
---
> 	.ascii	"derived\n"
144,145c144,145
< int_const9:
< 	.word	4
---
> int_const0:
> 	.word	1
148c148
< 	.word	5
---
> 	.word	0
150c150,151
< int_const8:
---
> int_const5:
> 	.word	1
151a153,157
> 	.word	Int_dispTab
> 	.word	13
> 	.word	-1
> int_const2:
> 	.word	1
154c160
< 	.word	64
---
> 	.word	2
157c163
< 	.word	4
---
> 	.word	1
160c166
< 	.word	8
---
> 	.word	3
163c169
< 	.word	4
---
> 	.word	1
166,168d171
< 	.word	13
< 	.word	-1
< int_const5:
170,172d172
< 	.word	4
< 	.word	Int_dispTab
< 	.word	2
175c175
< 	.word	4
---
> 	.word	1
178c178
< 	.word	7
---
> 	.word	5
181,187c181
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	3
< 	.word	-1
< int_const2:
< 	.word	4
---
> 	.word	1
193c187
< 	.word	4
---
> 	.word	1
196c190
< 	.word	4
---
> 	.word	7
198c192,193
< int_const0:
---
> int_const9:
> 	.word	1
199a195,199
> 	.word	Int_dispTab
> 	.word	8
> 	.word	-1
> int_const8:
> 	.word	1
202c202
< 	.word	0
---
> 	.word	64
205c205
< 	.word	5
---
> 	.word	4
211c211
< 	.word	5
---
> 	.word	4
226a227,234
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Bool_protObj
> 	.word	Bool_init
233,291c241
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Derived.identify
< 	.word	-1
---
> Object_dispTabInt_dispTabMain_dispTabString_dispTabBool_dispTabIO_dispTabBase_dispTabDerived_dispTab	.word	-1
296a247,252
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
298c254
< 	.word	7
---
> 	.word	2
303c259
< 	.word	6
---
> 	.word	3
310,315d265
< 	.word	5
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
318c268
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
322c272
< 	.word	1
---
> 	.word	5
327c277
< 	.word	2
---
> 	.word	6
332c282
< 	.word	3
---
> 	.word	7
357c307
< Main_init:
---
> Int_init:
371c321
< String_init:
---
> Main_init:
385c335
< Bool_init:
---
> String_init:
399c349
< Int_init:
---
> Bool_init:
462,517c412
< 	la	$a0 Base_protObj
< 	jal	Object.copy
< 	jal	Base_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	la	$t1 Derived_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	move	$a0 null
530c425
< 	la	$a0 str_const0
---
> 	la	$a0 str_const1
534,535c429,430
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
538c433
< label4:
---
> label0:
541c436
< 	jalr		$t1
---
> 	jalr	$t1
558,559c453,454
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
562c457
< label5:
---
> label1:
565c460
< 	jalr		$t1
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ spim_outname=dispatch-override-static.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-override-static.cl
+ spim_errname=dispatch-override-static.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.spim.out
6,12c6,29
< base
< base
< base
< derived
< COOL program successfully executed
< Stats -- #instructions : 570
<          #reads : 116  #writes 92  #branches 108  #other 254
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.spim.out.filtered
6,10c6,29
< base
< base
< base
< derived
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-override-static.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 241 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-override-static.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/dispatch-override-static.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ outname=dispatch-void-dynamic.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ errname=dispatch-void-dynamic.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	2
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,38c36,38
< str_const7:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	20
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl"
45,46c45,46
< str_const6:
< 	.word	5
---
> str_const4:
> 	.word	3
54,55c54,55
< str_const5:
< 	.word	5
---
> str_const6:
> 	.word	3
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	3
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const5:
> 	.word	3
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const7:
> 	.word	3
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	3
99c99,100
< str_const0:
---
> str_const3:
> 	.word	3
101d101
< 	.word	20
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl"
---
> 	.ascii	"Int"
108,109c108,109
< int_const7:
< 	.word	3
---
> int_const1:
> 	.word	1
112c112,118
< 	.word	61
---
> 	.word	0
> 	.word	-1
> int_const0:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
115c121
< 	.word	3
---
> 	.word	1
120,121c126,127
< int_const5:
< 	.word	3
---
> int_const4:
> 	.word	1
126,127c132,133
< int_const4:
< 	.word	3
---
> int_const7:
> 	.word	1
133c139
< 	.word	3
---
> 	.word	1
138,139c144,145
< int_const2:
< 	.word	3
---
> int_const5:
> 	.word	1
144,151c150,151
< int_const1:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
< int_const0:
< 	.word	3
---
> int_const2:
> 	.word	1
154c154
< 	.word	1
---
> 	.word	61
157c157
< 	.word	4
---
> 	.word	2
163c163
< 	.word	4
---
> 	.word	2
177,180d176
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
187,223c183,187
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTabMain_dispTab	.word	-1
229,233c193,196
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const1
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
237c200
< 	.word	4
---
> 	.word	2
242c205
< Int_protObj:
---
> String_protObj:
244,245c207,209
< 	.word	4
< 	.word	Int_dispTab
---
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const1
249c213
< 	.word	1
---
> 	.word	4
254c218
< 	.word	2
---
> 	.word	5
279c243
< String_init:
---
> Int_init:
307c271
< Int_init:
---
> String_init:
356,367c320,322
< label0:
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label1
< 	la	$a0 int_const0
< 	b	label0
< label1:
< 	move	$a0 $zero
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label2
---
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label1
371c326
< label2:
---
> label1:
374,375c329
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
379,380c333
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
---
> 	bne	$a0 $zero label2
384c337
< label3:
---
> label2:
387,388c340
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ spim_outname=dispatch-void-dynamic.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl
+ spim_errname=dispatch-void-dynamic.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.spim.out
6,8c6,25
< /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl:1: Dispatch to void.
< Stats -- #instructions : 155
<          #reads : 22  #writes 22  #branches 27  #other 84
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.spim.out.filtered
6c6,25
< /home/raj/cool/distro/testsuite/cgen/dispatch-void-dynamic.cl:1: Dispatch to void.
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-dynamic.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 187 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-dynamic.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/dispatch-void-dynamic.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ outname=dispatchvoidlet.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ errname=dispatchvoidlet.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.out /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.out /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.out
36c36
< str_const7:
---
> str_const5:
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
45c45
< str_const6:
---
> str_const7:
47c47
< 	.word	6
---
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54c54
< str_const5:
---
> str_const0:
56c56
< 	.word	6
---
> 	.word	18
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Bool"
---
> 	.word	int_const4
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl"
63c63
< str_const4:
---
> str_const2:
65c65
< 	.word	5
---
> 	.word	6
67,68c67,68
< 	.word	int_const4
< 	.ascii	"Int"
---
> 	.word	int_const5
> 	.ascii	"Object"
72c72
< str_const3:
---
> str_const6:
74c74
< 	.word	5
---
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81c81
< str_const2:
---
> str_const3:
85,86c85,86
< 	.word	int_const3
< 	.ascii	"Object"
---
> 	.word	int_const2
> 	.ascii	"Main"
99c99
< str_const0:
---
> str_const4:
101c101
< 	.word	18
---
> 	.word	5
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl"
---
> 	.ascii	"Int"
108c108
< int_const7:
---
> int_const4:
114c114
< int_const6:
---
> int_const1:
118c118
< 	.word	13
---
> 	.word	0
120c120
< int_const5:
---
> int_const6:
124c124
< 	.word	2
---
> 	.word	13
126c126
< int_const4:
---
> int_const3:
130c130
< 	.word	3
---
> 	.word	2
132c132
< int_const3:
---
> int_const7:
136c136
< 	.word	6
---
> 	.word	3
144c144
< int_const1:
---
> int_const0:
148c148
< 	.word	0
---
> 	.word	5
150c150
< int_const0:
---
> int_const5:
154c154
< 	.word	5
---
> 	.word	6
177,178c177,178
< 	.word	IO_protObj
< 	.word	IO_init
---
> 	.word	Main_protObj
> 	.word	Main_init
185,220c185,187
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.foo
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> Object_dispTabMain_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTab	.word	-1
227c194
< 	.word	5
---
> 	.word	1
231c198,199
< String_protObj:
---
> Int_protObj:
> 	.word	2
233,235c201
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const1
---
> 	.word	Int_dispTab
244,245c210
< Int_protObj:
< 	.word	2
---
> String_protObj:
247c212,214
< 	.word	Int_dispTab
---
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const1
251c218
< 	.word	1
---
> 	.word	5
290c257
< String_init:
---
> Int_init:
318c285
< Int_init:
---
> String_init:
366,368c333,334
< 	move	$s1 $zero
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
---
> 	sw	$zero 0($fp)
> 	lw	$a0 0($fp)
376,377c342
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ spim_outname=dispatchvoidlet.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl
+ spim_errname=dispatchvoidlet.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.spim.out
6,8c6,25
< /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl:1: Dispatch to void.
< Stats -- #instructions : 137
<          #reads : 18  #writes 19  #branches 24  #other 76
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.spim.out.filtered
6c6,25
< /home/raj/cool/distro/testsuite/cgen/dispatchvoidlet.cl:1: Dispatch to void.
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatchvoidlet.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 187 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatchvoidlet.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/dispatchvoidlet.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ outname=dispatch-void-static.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ errname=dispatch-void-static.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.out /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.out
13c13
< 	.word	3
---
> 	.word	5
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,38c36,38
< str_const8:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	20
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl"
46c46
< 	.word	5
---
> 	.word	3
54,55c54,55
< str_const6:
< 	.word	5
---
> str_const4:
> 	.word	3
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const5:
< 	.word	5
---
> str_const3:
> 	.word	3
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,74c72,74
< str_const4:
< 	.word	5
< 	.word	5
---
> str_const6:
> 	.word	3
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const1:
> 	.word	3
85,86c85,95
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const2
> 	.ascii	"bad\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const5:
> 	.word	3
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const2
> 	.ascii	"Main"
91c100
< 	.word	5
---
> 	.word	3
99c108,109
< str_const1:
---
> str_const8:
> 	.word	3
101d110
< 	.word	20
104c113
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl"
---
> 	.ascii	"Int"
108c117
< str_const0:
---
> int_const0:
110,118d118
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const2
< 	.ascii	"bad\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const6:
< 	.word	3
121c121
< 	.word	60
---
> 	.word	0
124c124
< 	.word	3
---
> 	.word	5
129,130c129,130
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	5
135,136c135,136
< int_const3:
< 	.word	3
---
> int_const6:
> 	.word	5
142c142
< 	.word	3
---
> 	.word	5
147,148c147,148
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	5
153,154c153,154
< int_const0:
< 	.word	3
---
> int_const1:
> 	.word	5
157c157
< 	.word	0
---
> 	.word	60
184,187d183
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
190,227c186,190
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.complain
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTabInt_dispTab	.word	-1
232a196,205
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> Main_protObj:
> 	.word	2
> 	.word	3
> 	.word	Main_dispTab
> 	.word	-1
234c207
< 	.word	5
---
> 	.word	3
247c220
< 	.word	3
---
> 	.word	5
251,260d223
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Main_protObj:
< 	.word	2
< 	.word	3
< 	.word	Main_dispTab
283c246
< String_init:
---
> IO_init:
297c260
< Bool_init:
---
> Main_init:
304c267
< 	jal	Object_init
---
> 	jal	IO_init
311c274
< Int_init:
---
> String_init:
325c288
< IO_init:
---
> Bool_init:
339c302
< Main_init:
---
> Int_init:
346c309
< 	jal	IO_init
---
> 	jal	Object_init
360c323
< 	la	$a0 str_const0
---
> 	la	$a0 str_const1
365c328
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
371c334
< 	jalr		$t1
---
> 	jalr	$t1
384,395c347
< 	move	$s1 $zero
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	la	$t1 Main_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	sw	$zero 0($fp)
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ spim_outname=dispatch-void-static.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl
+ spim_errname=dispatch-void-static.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.spim.out
6,8c6,25
< /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl:1: Dispatch to void.
< Stats -- #instructions : 150
<          #reads : 21  #writes 22  #branches 26  #other 81
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.spim.out.filtered
6c6,25
< /home/raj/cool/distro/testsuite/cgen/dispatch-void-static.cl:1: Dispatch to void.
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/dispatch-void-static.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 190 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/dispatch-void-static.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/dispatch-void-static.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ outname=eval-order-args.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ errname=eval-order-args.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.out /home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.out /home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.out
13c13
< 	.word	3
---
> 	.word	1
15,16d14
< 	.word	4
< _string_tag:
17a16,17
> _string_tag:
> 	.word	4
29c29
< 	.word	5
---
> 	.word	4
37c37
< 	.word	5
---
> 	.word	4
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45c45,46
< str_const7:
---
> str_const5:
> 	.word	4
47d47
< 	.word	6
49,50c49,50
< 	.word	int_const5
< 	.ascii	"Bool"
---
> 	.word	int_const1
> 	.ascii	"IO"
54,56c54,56
< str_const6:
< 	.word	5
< 	.word	5
---
> str_const3:
> 	.word	4
> 	.word	6
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const5
> 	.ascii	"Object"
63c63,64
< str_const5:
---
> str_const1:
> 	.word	4
65d65
< 	.word	6
67,68c67,68
< 	.word	int_const5
< 	.ascii	"Main"
---
> 	.word	int_const0
> 	.ascii	"\n"
72,74c72,74
< str_const4:
< 	.word	5
< 	.word	5
---
> str_const7:
> 	.word	4
> 	.word	6
76,77c76,77
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"String"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const6:
> 	.word	4
86c86
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	4
99c99,100
< str_const1:
---
> str_const4:
> 	.word	4
101d101
< 	.word	18
103,104c103,104
< 	.word	int_const7
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/eval-order-args.cl"
---
> 	.word	int_const2
> 	.ascii	"Int"
109,110c109,110
< 	.word	5
< 	.word	5
---
> 	.word	4
> 	.word	18
112,113c112,113
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/eval-order-args.cl"
118c118
< 	.word	3
---
> 	.word	1
123,124c123,124
< int_const6:
< 	.word	3
---
> int_const3:
> 	.word	1
127c127
< 	.word	13
---
> 	.word	0
129,130c129,130
< int_const5:
< 	.word	3
---
> int_const0:
> 	.word	1
133c133
< 	.word	4
---
> 	.word	1
135,136c135,136
< int_const4:
< 	.word	3
---
> int_const6:
> 	.word	1
139c139
< 	.word	6
---
> 	.word	13
141,142c141,142
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	1
145c145
< 	.word	0
---
> 	.word	2
148c148
< 	.word	3
---
> 	.word	1
153,154c153,154
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	1
157c157
< 	.word	2
---
> 	.word	4
159,160c159,160
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	1
163c163
< 	.word	1
---
> 	.word	6
166c166
< 	.word	4
---
> 	.word	5
172c172
< 	.word	4
---
> 	.word	5
185a186,187
> 	.word	Int_protObj
> 	.word	Int_init
190,193d191
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
196,234c194,196
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.recite
< 	.word	Main.disregard
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabInt_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTab	.word	-1
240,252d201
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const3
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
254c203
< 	.word	3
---
> 	.word	1
260c209
< 	.word	1
---
> 	.word	2
265c214
< 	.word	2
---
> 	.word	3
267a217,229
> 	.word	-1
> String_protObj:
> 	.word	4
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const3
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
290c252
< String_init:
---
> Int_init:
304c266
< Bool_init:
---
> IO_init:
318c280
< Int_init:
---
> Main_init:
325c287
< 	jal	Object_init
---
> 	jal	IO_init
332c294
< IO_init:
---
> String_init:
346c308
< Main_init:
---
> Bool_init:
353c315
< 	jal	IO_init
---
> 	jal	Object_init
367,390c329
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
420,421c359,360
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
424c363
< label2:
---
> label0:
427c366
< 	jalr		$t1
---
> 	jalr	$t1
434,435c373,374
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
438c377
< label3:
---
> label1:
441c380
< 	jalr		$t1
---
> 	jalr	$t1
448,449c387,388
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
452c391
< label4:
---
> label2:
455c394
< 	jalr		$t1
---
> 	jalr	$t1
459,460c398,399
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
463c402
< label5:
---
> label3:
466c405
< 	jalr		$t1
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ spim_outname=eval-order-args.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-args.cl
+ spim_errname=eval-order-args.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.spim.out
6,11c6,25
< 1
< 2
< 3
< COOL program successfully executed
< Stats -- #instructions : 324
<          #reads : 73  #writes 50  #branches 55  #other 146
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.spim.out.filtered
6,9c6,25
< 1
< 2
< 3
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-args.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 196 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-args.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/eval-order-args.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ outname=eval-order-arith.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ errname=eval-order-arith.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.out /home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.out /home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,38c36,38
< str_const8:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	19
40,41c40,41
< 	.word	int_const5
< 	.ascii	"String"
---
> 	.word	int_const15
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl"
45,46c45,46
< str_const7:
< 	.word	5
---
> str_const4:
> 	.word	2
55c55
< 	.word	5
---
> 	.word	2
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const1
> 	.ascii	"IO"
63,64c63,64
< str_const5:
< 	.word	5
---
> str_const3:
> 	.word	2
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,73c72,73
< str_const4:
< 	.word	5
---
> str_const1:
> 	.word	2
76,77c76,77
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const0
> 	.ascii	"\n"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const5:
> 	.word	2
86c86,95
< 	.ascii	"Object"
---
> 	.ascii	"String"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const7:
> 	.word	2
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const3
> 	.ascii	"Main"
91c100
< 	.word	5
---
> 	.word	2
99c108,109
< str_const1:
---
> str_const8:
> 	.word	2
101d110
< 	.word	19
103,104c112,113
< 	.word	int_const15
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl"
---
> 	.word	int_const2
> 	.ascii	"Int"
108,109c117
< str_const0:
< 	.word	5
---
> int_const10:
111,118d118
< 	.word	String_dispTab
< 	.word	int_const0
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const15:
< 	.word	3
121c121
< 	.word	56
---
> 	.word	11
123,124c123,124
< int_const14:
< 	.word	3
---
> int_const15:
> 	.word	5
127c127
< 	.word	0
---
> 	.word	56
129,130c129,130
< int_const13:
< 	.word	3
---
> int_const11:
> 	.word	5
133c133
< 	.word	14
---
> 	.word	12
136c136
< 	.word	3
---
> 	.word	5
141,142c141,142
< int_const11:
< 	.word	3
---
> int_const13:
> 	.word	5
145c145
< 	.word	12
---
> 	.word	14
147,148c147,148
< int_const10:
< 	.word	3
---
> int_const14:
> 	.word	5
151c151
< 	.word	11
---
> 	.word	0
153,154c153,154
< int_const9:
< 	.word	3
---
> int_const0:
> 	.word	5
157c157
< 	.word	10
---
> 	.word	1
159,160c159,160
< int_const8:
< 	.word	3
---
> int_const1:
> 	.word	5
163c163
< 	.word	9
---
> 	.word	2
165,166c165,166
< int_const7:
< 	.word	3
---
> int_const2:
> 	.word	5
169,171d168
< 	.word	8
< 	.word	-1
< int_const6:
173,175d169
< 	.word	4
< 	.word	Int_dispTab
< 	.word	7
177,178c171,172
< int_const5:
< 	.word	3
---
> int_const3:
> 	.word	5
181c175
< 	.word	6
---
> 	.word	4
184c178
< 	.word	3
---
> 	.word	5
189,190c183,184
< int_const3:
< 	.word	3
---
> int_const5:
> 	.word	5
192a187,190
> 	.word	6
> 	.word	-1
> int_const6:
> 	.word	5
193a192,193
> 	.word	Int_dispTab
> 	.word	7
195,196c195,196
< int_const2:
< 	.word	3
---
> int_const7:
> 	.word	5
199c199
< 	.word	3
---
> 	.word	8
201,202c201,202
< int_const1:
< 	.word	3
---
> int_const8:
> 	.word	5
205c205
< 	.word	2
---
> 	.word	9
207,208c207,208
< int_const0:
< 	.word	3
---
> int_const9:
> 	.word	5
211c211
< 	.word	1
---
> 	.word	10
214c214
< 	.word	4
---
> 	.word	1
220c220
< 	.word	4
---
> 	.word	1
233a234,237
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	String_protObj
> 	.word	String_init
240,281c244
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.recite
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabBool_dispTabString_dispTabIO_dispTabMain_dispTabInt_dispTab	.word	-1
287,293d249
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const14
< 	.word	0
< 	.word	-1
295c251
< 	.word	4
---
> 	.word	1
300,303c256,260
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	2
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const14
307c264
< 	.word	1
---
> 	.word	3
312c269
< 	.word	2
---
> 	.word	4
314a272,277
> 	.word	-1
> Int_protObj:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
337c300
< String_init:
---
> Bool_init:
351c314
< Bool_init:
---
> String_init:
365c328
< Int_init:
---
> IO_init:
379c342
< IO_init:
---
> Main_init:
386c349
< 	jal	Object_init
---
> 	jal	IO_init
393c356
< Main_init:
---
> Int_init:
400c363
< 	jal	IO_init
---
> 	jal	Object_init
414,438c377
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
---
> 	move	$a0 null
445,448c384,387
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
451,682c390,394
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	la	$a0 int_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	la	$a0 int_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label10
< 	la	$a0 bool_const0
< label10:
< 	la	$a0 int_const10
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label14
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$t1 $s1
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label13
< 	la	$a1 bool_const0
< 	jal	equality_test
< label13:
< 	la	$a0 int_const12
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label17
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label17:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 int_const13
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label18
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label18:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	ble	$t1 $t2 label16
< 	la	$a0 bool_const0
< label16:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ spim_outname=eval-order-arith.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-arith.cl
+ spim_errname=eval-order-arith.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.spim.out
6,22c6,25
< 1
< 2
< 3
< 4
< 5
< 6
< 7
< 8
< 9
< 10
< 11
< 12
< 13
< 14
< COOL program successfully executed
< Stats -- #instructions : 1209
<          #reads : 311  #writes 171  #branches 218  #other 509
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.spim.out.filtered
6,20c6,25
< 1
< 2
< 3
< 4
< 5
< 6
< 7
< 8
< 9
< 10
< 11
< 12
< 13
< 14
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-arith.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 244 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-arith.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/eval-order-arith.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ outname=eval-order-self.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ errname=eval-order-self.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.out /home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.out /home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.out
13c13
< 	.word	3
---
> 	.word	1
36c36
< str_const8:
---
> str_const0:
38c38
< 	.word	6
---
> 	.word	18
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/eval-order-self.cl"
54c54
< str_const6:
---
> str_const5:
58,59c58,59
< 	.word	int_const5
< 	.ascii	"Int"
---
> 	.word	int_const0
> 	.ascii	"IO"
63c63
< str_const5:
---
> str_const3:
67,68c67,68
< 	.word	int_const4
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72c72
< str_const4:
---
> str_const1:
76,77c76,77
< 	.word	int_const0
< 	.ascii	"IO"
---
> 	.word	int_const1
> 	.ascii	"\n"
81c81
< str_const3:
---
> str_const8:
85,86c85,86
< 	.word	int_const3
< 	.ascii	"Object"
---
> 	.word	int_const5
> 	.ascii	"String"
90c90
< str_const2:
---
> str_const6:
92c92
< 	.word	8
---
> 	.word	6
94,95c94,95
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const4
> 	.ascii	"Main"
99c99
< str_const1:
---
> str_const2:
101c101
< 	.word	18
---
> 	.word	8
103,104c103,104
< 	.word	int_const7
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/eval-order-self.cl"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
108c108
< str_const0:
---
> str_const4:
112,113c112,113
< 	.word	int_const1
< 	.ascii	"\n"
---
> 	.word	int_const7
> 	.ascii	"Int"
117,118c117,118
< int_const7:
< 	.word	3
---
> int_const3:
> 	.word	1
123,124c123,124
< int_const6:
< 	.word	3
---
> int_const2:
> 	.word	1
127c127
< 	.word	13
---
> 	.word	0
129,130c129,130
< int_const5:
< 	.word	3
---
> int_const1:
> 	.word	1
133c133
< 	.word	3
---
> 	.word	1
135,136c135,136
< int_const4:
< 	.word	3
---
> int_const6:
> 	.word	1
139c139
< 	.word	4
---
> 	.word	13
141,142c141,142
< int_const3:
< 	.word	3
---
> int_const0:
> 	.word	1
145c145
< 	.word	6
---
> 	.word	2
147,148c147,148
< int_const2:
< 	.word	3
---
> int_const7:
> 	.word	1
151,153d150
< 	.word	0
< 	.word	-1
< int_const1:
154a152,154
> 	.word	-1
> int_const4:
> 	.word	1
157c157
< 	.word	1
---
> 	.word	4
159,160c159,160
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	1
163c163
< 	.word	2
---
> 	.word	6
185a186,187
> 	.word	Int_protObj
> 	.word	Int_init
190,191d191
< 	.word	Int_protObj
< 	.word	Int_init
196,234c196
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.recite
< 	.word	Main.disregard
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabInt_dispTabIO_dispTabMain_dispTabBool_dispTabString_dispTab	.word	-1
240,252d201
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const2
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
254c203
< 	.word	3
---
> 	.word	1
260c209
< 	.word	1
---
> 	.word	2
265c214
< 	.word	2
---
> 	.word	3
267a217,229
> 	.word	-1
> Bool_protObj:
> 	.word	4
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> String_protObj:
> 	.word	5
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const2
> 	.word	0
290c252
< String_init:
---
> Int_init:
304c266
< Bool_init:
---
> IO_init:
318c280
< Int_init:
---
> Main_init:
325c287
< 	jal	Object_init
---
> 	jal	IO_init
332c294
< IO_init:
---
> Bool_init:
346c308
< Main_init:
---
> String_init:
353c315
< 	jal	IO_init
---
> 	jal	Object_init
367,391c329
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
421,422c359,360
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
425c363
< label2:
---
> label0:
428c366
< 	jalr		$t1
---
> 	jalr	$t1
435,436c373,374
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
439c377
< label3:
---
> label1:
442,444c380,382
< 	jalr		$t1
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
447c385
< label4:
---
> label2:
450c388
< 	jalr		$t1
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ spim_outname=eval-order-self.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/eval-order-self.cl
+ spim_errname=eval-order-self.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.spim.out
6,10c6,25
< 1
< 2
< COOL program successfully executed
< Stats -- #instructions : 266
<          #reads : 58  #writes 40  #branches 46  #other 122
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.spim.out.filtered
6,8c6,25
< 1
< 2
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/eval-order-self.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 196 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/eval-order-self.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/eval-order-self.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/exp.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/exp.cl
+ outname=exp.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/exp.cl
+ errname=exp.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.out /home/raj/cool/distro/testsuite/cgen/exp.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.out /home/raj/cool/distro/testsuite/cgen/exp.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	2
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,38c36,38
< str_const8:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	15
40,41c40,41
< 	.word	int_const5
< 	.ascii	"String"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/exp.cl"
45,46c45,46
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	3
49c49
< 	.word	int_const7
---
> 	.word	int_const8
54,55c54,55
< str_const6:
< 	.word	5
---
> str_const7:
> 	.word	3
58,59c58,59
< 	.word	int_const4
< 	.ascii	"Int"
---
> 	.word	int_const2
> 	.ascii	"IO"
63,64c63,64
< str_const5:
< 	.word	5
---
> str_const3:
> 	.word	3
67,68c67,68
< 	.word	int_const7
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,73c72,73
< str_const4:
< 	.word	5
---
> str_const1:
> 	.word	3
76,77c76,77
< 	.word	int_const2
< 	.ascii	"IO"
---
> 	.word	int_const1
> 	.ascii	"\n"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const6:
> 	.word	3
86c86
< 	.ascii	"Object"
---
> 	.ascii	"String"
90,92c90,92
< str_const2:
< 	.word	5
< 	.word	8
---
> str_const8:
> 	.word	3
> 	.word	6
95c95
< 	.ascii	"<basic class>"
---
> 	.ascii	"Main"
99,101c99,101
< str_const1:
< 	.word	5
< 	.word	15
---
> str_const2:
> 	.word	3
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/exp.cl"
---
> 	.ascii	"<basic class>"
108,109c108,109
< str_const0:
< 	.word	5
---
> str_const4:
> 	.word	3
112,113c112,113
< 	.word	int_const1
< 	.ascii	"\n"
---
> 	.word	int_const4
> 	.ascii	"Int"
117,118c117,118
< int_const9:
< 	.word	3
---
> int_const0:
> 	.word	1
121c121
< 	.word	43
---
> 	.word	0
123,124c123,124
< int_const8:
< 	.word	3
---
> int_const1:
> 	.word	1
127c127
< 	.word	13
---
> 	.word	1
129,130c129,130
< int_const7:
< 	.word	3
---
> int_const9:
> 	.word	1
133c133
< 	.word	4
---
> 	.word	13
135,136c135,136
< int_const6:
< 	.word	3
---
> int_const2:
> 	.word	1
139c139
< 	.word	8
---
> 	.word	2
141c141,144
< int_const5:
---
> int_const4:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
142a146,148
> 	.word	-1
> int_const8:
> 	.word	1
145c151
< 	.word	6
---
> 	.word	4
147,148c153,154
< int_const4:
< 	.word	3
---
> int_const5:
> 	.word	1
151c157
< 	.word	3
---
> 	.word	6
154c160
< 	.word	3
---
> 	.word	1
159,160c165,166
< int_const2:
< 	.word	3
---
> int_const6:
> 	.word	1
163c169
< 	.word	2
---
> 	.word	8
165,168c171
< int_const1:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
---
> int_const7:
170,172d172
< 	.word	-1
< int_const0:
< 	.word	3
175c175
< 	.word	0
---
> 	.word	43
178c178
< 	.word	4
---
> 	.word	2
184c184
< 	.word	4
---
> 	.word	2
198,201d197
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
208,245c204,208
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.exp
< 	.word	Main.main
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTabMain_dispTab	.word	-1
251,255c214,217
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
259c221
< 	.word	4
---
> 	.word	2
264c226
< Int_protObj:
---
> String_protObj:
266,267c228,230
< 	.word	4
< 	.word	Int_dispTab
---
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
271c234
< 	.word	1
---
> 	.word	4
276c239
< 	.word	2
---
> 	.word	5
301c264
< String_init:
---
> Int_init:
329c292
< Int_init:
---
> String_init:
372,375c335,338
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
378,479c341,344
< 	lw	$s1 24($fp)
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label2
< 	la	$a1 bool_const0
< 	jal	equality_test
< label2:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	la	$a0 int_const1
< 	b	label1
< label0:
< 	lw	$s1 24($fp)
< 	la	$s2 int_const2
< 	lw	$s3 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$t1 $s1
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label5
< 	la	$a1 bool_const0
< 	jal	equality_test
< label5:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label3
< 	lw	$a0 28($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$s1 24($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	move	$s2 $s1
< 	move	$a0 $s1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	b	label4
< label3:
< 	lw	$s1 28($fp)
< 	lw	$a0 28($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$s2 24($fp)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< label4:
< label1:
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 32
---
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 24
488,601c353
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label12
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label13
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label13:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 int_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label14
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label15
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label16
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/exp.cl
+ spim_outname=exp.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/exp.cl
+ spim_errname=exp.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.spim.out
6,11c6,25
< 128
< 729
< 512
< COOL program successfully executed
< Stats -- #instructions : 4205
<          #reads : 940  #writes 498  #branches 1028  #other 1739
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.spim.out.filtered
6,9c6,25
< 128
< 729
< 512
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/exp.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 208 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/exp.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/exp.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/fact.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/fact.cl
+ outname=fact.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/fact.cl
+ errname=fact.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.out /home/raj/cool/distro/testsuite/cgen/fact.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.out /home/raj/cool/distro/testsuite/cgen/fact.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.out
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,37c36,37
< str_const8:
< 	.word	5
---
> str_const4:
> 	.word	2
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45a46
> 	.word	2
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const6:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	2
> 	.word	16
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/fact.cl"
63,64c63,64
< str_const5:
< 	.word	5
---
> str_const3:
> 	.word	2
67,68c67,68
< 	.word	int_const6
< 	.ascii	"Main"
---
> 	.word	int_const8
> 	.ascii	"Object"
72,73c72,73
< str_const4:
< 	.word	5
---
> str_const1:
> 	.word	2
76,77c76,77
< 	.word	int_const7
< 	.ascii	"IO"
---
> 	.word	int_const1
> 	.ascii	"\n"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const5:
> 	.word	2
85,86c85,86
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const8
> 	.ascii	"String"
90,92c90,92
< str_const2:
< 	.word	5
< 	.word	8
---
> str_const8:
> 	.word	2
> 	.word	6
94,95c94,95
< 	.word	int_const8
< 	.ascii	"<basic class>"
---
> 	.word	int_const5
> 	.ascii	"Main"
99,101c99,101
< str_const1:
< 	.word	5
< 	.word	16
---
> str_const2:
> 	.word	2
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/fact.cl"
---
> 	.ascii	"<basic class>"
108,109c108,109
< str_const0:
< 	.word	5
---
> str_const6:
> 	.word	2
112,113c112,113
< 	.word	int_const1
< 	.ascii	"\n"
---
> 	.word	int_const2
> 	.ascii	"Int"
117c117
< int_const9:
---
> int_const7:
123c123
< int_const8:
---
> int_const0:
127c127
< 	.word	13
---
> 	.word	0
129c129
< int_const7:
---
> int_const1:
133c133
< 	.word	2
---
> 	.word	1
135c135
< int_const6:
---
> int_const9:
139c139
< 	.word	4
---
> 	.word	13
141c141
< int_const5:
---
> int_const6:
145c145
< 	.word	6
---
> 	.word	2
147c147
< int_const4:
---
> int_const2:
151c151
< 	.word	10
---
> 	.word	3
153c153
< int_const3:
---
> int_const5:
157c157
< 	.word	7
---
> 	.word	4
159c159
< int_const2:
---
> int_const8:
163c163
< 	.word	3
---
> 	.word	6
165c165
< int_const1:
---
> int_const3:
169c169
< 	.word	1
---
> 	.word	7
171c171
< int_const0:
---
> int_const4:
175c175
< 	.word	0
---
> 	.word	10
178c178
< 	.word	4
---
> 	.word	1
184c184
< 	.word	4
---
> 	.word	1
198,203d197
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
208,245c202,208
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.fact
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabBool_dispTabString_dispTabInt_dispTabIO_dispTabMain_dispTab	.word	-1
250a214,219
> Bool_protObj:
> 	.word	1
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
252c221
< 	.word	5
---
> 	.word	2
258,263d226
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
271c234
< 	.word	1
---
> 	.word	4
276c239
< 	.word	2
---
> 	.word	5
301c264
< String_init:
---
> Bool_init:
315c278
< Bool_init:
---
> String_init:
372,375c335,338
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
378,421c341,344
< 	lw	$s1 20($fp)
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label2
< 	la	$a1 bool_const0
< 	jal	equality_test
< label2:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	la	$a0 int_const1
< 	b	label1
< label0:
< 	lw	$s1 20($fp)
< 	lw	$s2 20($fp)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< label1:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 24
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
430,534c353
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label12
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/fact.cl
+ spim_outname=fact.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/fact.cl
+ spim_errname=fact.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.spim.out
6,11c6,25
< 6
< 5040
< 3628800
< COOL program successfully executed
< Stats -- #instructions : 3699
<          #reads : 866  #writes 464  #branches 882  #other 1487
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.spim.out.filtered
6,9c6,25
< 6
< 5040
< 3628800
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fact.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 208 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fact.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/fact.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/fibo.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/fibo.cl
+ outname=fibo.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/fibo.cl
+ errname=fibo.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.out /home/raj/cool/distro/testsuite/cgen/fibo.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.out /home/raj/cool/distro/testsuite/cgen/fibo.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.out
15c15
< 	.word	4
---
> 	.word	2
17c17
< 	.word	5
---
> 	.word	1
29c29
< 	.word	5
---
> 	.word	1
36,37c36,37
< str_const7:
< 	.word	5
---
> str_const4:
> 	.word	1
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45a46
> 	.word	1
47d47
< 	.word	6
49,50c49,50
< 	.word	int_const5
< 	.ascii	"Bool"
---
> 	.word	int_const2
> 	.ascii	"IO"
54,56c54,56
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	1
> 	.word	16
58,59c58,59
< 	.word	int_const6
< 	.ascii	"Int"
---
> 	.word	int_const5
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/fibo.cl"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	1
67,68c67,68
< 	.word	int_const5
< 	.ascii	"Main"
---
> 	.word	int_const6
> 	.ascii	"Object"
73,74c73,74
< 	.word	5
< 	.word	5
---
> 	.word	1
> 	.word	6
76,77c76,77
< 	.word	int_const2
< 	.ascii	"IO"
---
> 	.word	int_const6
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const7:
> 	.word	1
86c86
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	1
99c99,100
< str_const0:
---
> str_const5:
> 	.word	1
101d101
< 	.word	16
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/fibo.cl"
---
> 	.ascii	"Int"
108c108
< int_const8:
---
> int_const5:
114c114
< int_const7:
---
> int_const0:
118c118
< 	.word	13
---
> 	.word	0
120c120
< int_const6:
---
> int_const1:
124c124
< 	.word	3
---
> 	.word	1
126c126
< int_const5:
---
> int_const7:
130c130
< 	.word	4
---
> 	.word	13
132c132
< int_const4:
---
> int_const2:
136c136
< 	.word	6
---
> 	.word	2
138c138
< int_const3:
---
> int_const8:
142c142
< 	.word	15
---
> 	.word	3
144c144
< int_const2:
---
> int_const4:
148c148
< 	.word	2
---
> 	.word	4
150c150
< int_const1:
---
> int_const3:
154c154
< 	.word	1
---
> 	.word	15
156c156
< int_const0:
---
> int_const6:
160c160
< 	.word	0
---
> 	.word	6
163c163
< 	.word	4
---
> 	.word	2
169c169
< 	.word	4
---
> 	.word	2
182a183,188
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
187,230c193
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.fibo
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabString_dispTabBool_dispTabInt_dispTabIO_dispTabMain_dispTab	.word	-1
237c200
< 	.word	5
---
> 	.word	1
244c207
< 	.word	4
---
> 	.word	2
256c219
< 	.word	1
---
> 	.word	4
261c224
< 	.word	2
---
> 	.word	5
357,360c320,323
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
363,438c326,329
< 	lw	$s1 20($fp)
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label2
< 	la	$a1 bool_const0
< 	jal	equality_test
< label2:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	la	$a0 int_const0
< 	b	label1
< label0:
< 	lw	$s1 20($fp)
< 	la	$t2 int_const1
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label5
< 	la	$a1 bool_const0
< 	jal	equality_test
< label5:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label3
< 	la	$a0 int_const1
< 	b	label4
< label3:
< 	lw	$s1 20($fp)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	lw	$s2 20($fp)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< label4:
< label1:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 24
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
451c342
< 	bne	$a0 $zero label8
---
> 	bne	$a0 $zero label0
455c346
< label8:
---
> label0:
458c349
< 	jalr		$t1
---
> 	jalr	$t1
462c353
< 	bne	$a0 $zero label9
---
> 	bne	$a0 $zero label1
466c357
< label9:
---
> label1:
469c360
< 	jalr		$t1
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/fibo.cl
+ spim_outname=fibo.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/fibo.cl
+ spim_errname=fibo.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.spim.out
6,8c6,25
< 610COOL program successfully executed
< Stats -- #instructions : 307305
<          #reads : 73330  #writes 32564  #branches 80467  #other 120944
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.spim.out.filtered
6c6,25
< 610COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/fibo.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 193 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/fibo.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/fibo.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ outname=hairyscary.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ errname=hairyscary.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.out /home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.out /home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.out
13c13
< 	.word	6
---
> 	.word	1
15c15
< 	.word	7
---
> 	.word	9
36c36
< str_const12:
---
> str_const6:
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bazz"
45c45
< str_const11:
---
> str_const5:
47c47
< 	.word	6
---
> 	.word	5
49,50c49,50
< 	.word	int_const4
< 	.ascii	"String"
---
> 	.word	int_const0
> 	.ascii	"IO"
54c54
< str_const10:
---
> str_const7:
56c56
< 	.word	6
---
> 	.word	5
58,59c58,59
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const4
> 	.ascii	"Foo"
63c63
< str_const9:
---
> str_const8:
65c65
< 	.word	5
---
> 	.word	6
67,68c67,68
< 	.word	int_const5
< 	.ascii	"Int"
---
> 	.word	int_const3
> 	.ascii	"Razz"
72c72
< str_const8:
---
> str_const11:
74c74
< 	.word	5
---
> 	.word	6
77c77
< 	.ascii	"Bar"
---
> 	.ascii	"String"
81c81,82
< str_const7:
---
> str_const2:
> 	.word	8
83d83
< 	.word	6
85,86c85,86
< 	.word	int_const3
< 	.ascii	"Razz"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
90c90
< str_const6:
---
> str_const4:
94,95c94,95
< 	.word	int_const5
< 	.ascii	"Foo"
---
> 	.word	int_const4
> 	.ascii	"Int"
99c99
< str_const5:
---
> str_const9:
101c101
< 	.word	6
---
> 	.word	5
103,104c103,104
< 	.word	int_const3
< 	.ascii	"Bazz"
---
> 	.word	int_const4
> 	.ascii	"Bar"
108c108
< str_const4:
---
> str_const1:
110c110
< 	.word	5
---
> 	.word	7
112,113c112,113
< 	.word	int_const0
< 	.ascii	"IO"
---
> 	.word	int_const7
> 	.ascii	"do nothing"
117c117
< str_const3:
---
> str_const12:
121,122c121,122
< 	.word	int_const4
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Bool"
126,127c126
< str_const2:
< 	.word	8
---
> str_const3:
128a128
> 	.word	6
130,131c130,131
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const5
> 	.ascii	"Object"
135c135
< str_const1:
---
> str_const10:
137c137
< 	.word	7
---
> 	.word	6
139,140c139,140
< 	.word	int_const7
< 	.ascii	"do nothing"
---
> 	.word	int_const3
> 	.ascii	"Main"
153,154c153,154
< int_const8:
< 	.word	6
---
> int_const2:
> 	.word	1
157c157
< 	.word	50
---
> 	.word	0
159,160c159,160
< int_const7:
< 	.word	6
---
> int_const1:
> 	.word	1
163c163
< 	.word	10
---
> 	.word	1
166c166
< 	.word	6
---
> 	.word	1
171,172c171,172
< int_const5:
< 	.word	6
---
> int_const0:
> 	.word	1
175c175
< 	.word	3
---
> 	.word	2
178c178
< 	.word	6
---
> 	.word	1
181c181
< 	.word	6
---
> 	.word	3
184c184
< 	.word	6
---
> 	.word	1
189,190c189,190
< int_const2:
< 	.word	6
---
> int_const5:
> 	.word	1
193,195d192
< 	.word	0
< 	.word	-1
< int_const1:
196a194,196
> 	.word	-1
> int_const8:
> 	.word	1
199c199
< 	.word	1
---
> 	.word	50
201,202c201,202
< int_const0:
< 	.word	6
---
> int_const7:
> 	.word	1
205c205
< 	.word	2
---
> 	.word	10
208c208
< 	.word	7
---
> 	.word	9
214c214
< 	.word	7
---
> 	.word	9
231a232,233
> 	.word	Int_protObj
> 	.word	Int_init
242,247d243
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
250,322c246,250
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Bazz_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Bazz.printh
< 	.word	Bazz.doh
< Foo_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Bazz.printh
< 	.word	Foo.doh
< Razz_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Bazz.printh
< 	.word	Foo.doh
< Bar_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Bazz.printh
< 	.word	Foo.doh
< 	.word	-1
---
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabInt_dispTabIO_dispTabBazz_dispTabFoo_dispTabRazz_dispTabBar_dispTabMain_dispTabString_dispTabBool_dispTab	.word	-1
328,349d255
< Main_protObj:
< 	.word	9
< 	.word	7
< 	.word	Main_dispTab
< 	.word	0
< 	.word	0
< 	.word	0
< 	.word	0
< 	.word	-1
< String_protObj:
< 	.word	8
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const2
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	7
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
351c257
< 	.word	6
---
> 	.word	1
357c263
< 	.word	1
---
> 	.word	2
362c268
< 	.word	2
---
> 	.word	3
370c276
< 	.word	3
---
> 	.word	4
380c286
< 	.word	4
---
> 	.word	5
392c298
< 	.word	5
---
> 	.word	6
403a310,331
> 	.word	-1
> Main_protObj:
> 	.word	7
> 	.word	7
> 	.word	Main_dispTab
> 	.word	0
> 	.word	0
> 	.word	0
> 	.word	0
> 	.word	-1
> String_protObj:
> 	.word	8
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const2
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	9
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
426,470c354
< Main_init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	jal	Object_init
< 	la	$a0 Bazz_protObj
< 	jal	Object.copy
< 	jal	Bazz_init
< 	sw	$a0 12($s0)
< 	la	$a0 Foo_protObj
< 	jal	Object.copy
< 	jal	Foo_init
< 	sw	$a0 16($s0)
< 	la	$a0 Razz_protObj
< 	jal	Object.copy
< 	jal	Razz_init
< 	sw	$a0 20($s0)
< 	la	$a0 Bar_protObj
< 	jal	Object.copy
< 	jal	Bar_init
< 	sw	$a0 24($s0)
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< String_init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	jal	Object_init
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Bool_init:
---
> Int_init:
484c368
< Int_init:
---
> IO_init:
498c382
< IO_init:
---
> Bazz_init:
505,518d388
< 	jal	Object_init
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Bazz_init:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
521d390
< 	sw	$a0 12($s0)
529,532c398,401
< 	blt	$t2 5 label2
< 	bgt	$t2 5 label2
< 	move	$s1 $a0
< 	move	$a0 $s1
---
> 	blt	$t2 6 label2
> 	bgt	$t2 6 label2
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
535,542c404,406
< 	blt	$t2 4 label3
< 	bgt	$t2 5 label3
< 	move	$s1 $a0
< 	la	$a0 Bar_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Bar_init
< 	lw	$s1 0($fp)
---
> 	blt	$t2 5 label3
> 	bgt	$t2 6 label3
> 	sw	$a0 0($fp)
545,552c409,411
< 	blt	$t2 3 label4
< 	bgt	$t2 5 label4
< 	move	$s1 $a0
< 	la	$a0 Razz_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Razz_init
< 	lw	$s1 0($fp)
---
> 	blt	$t2 4 label4
> 	bgt	$t2 6 label4
> 	sw	$a0 0($fp)
555,562c414,416
< 	blt	$t2 2 label5
< 	bgt	$t2 5 label5
< 	move	$s1 $a0
< 	la	$a0 Foo_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Foo_init
< 	lw	$s1 0($fp)
---
> 	blt	$t2 3 label5
> 	bgt	$t2 6 label5
> 	sw	$a0 0($fp)
567d420
< 	sw	$a0 16($s0)
576,577c429
< 	jalr		$t1
< 	sw	$a0 20($s0)
---
> 	jalr	$t1
579,582c431,434
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
585,588c437,440
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
599,602c451,454
< 	blt	$t2 5 label9
< 	bgt	$t2 5 label9
< 	move	$s1 $a0
< 	move	$a0 $s1
---
> 	blt	$t2 6 label9
> 	bgt	$t2 6 label9
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
605,612c457,459
< 	blt	$t2 4 label10
< 	bgt	$t2 5 label10
< 	move	$s1 $a0
< 	la	$a0 Bar_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Bar_init
< 	lw	$s1 0($fp)
---
> 	blt	$t2 5 label10
> 	bgt	$t2 6 label10
> 	sw	$a0 0($fp)
615,622c462,464
< 	blt	$t2 3 label11
< 	bgt	$t2 5 label11
< 	move	$s1 $a0
< 	la	$a0 Razz_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Razz_init
< 	lw	$s1 0($fp)
---
> 	blt	$t2 4 label11
> 	bgt	$t2 6 label11
> 	sw	$a0 0($fp)
627,688d468
< 	sw	$a0 24($s0)
< 	lw	$a0 24($s0)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	lw	$a0 16($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label13
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label13:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label14
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 28($s0)
690,693c470,473
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
696,699c476,479
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
704c484
< 	bne	$a0 $zero label17
---
> 	bne	$a0 $zero label13
708c488
< label17:
---
> label13:
710,725c490,500
< 	blt	$t2 5 label18
< 	bgt	$t2 5 label18
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	b	label16
< label18:
< 	blt	$t2 4 label19
< 	bgt	$t2 5 label19
< 	move	$s1 $a0
< 	la	$a0 Bar_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Bar_init
< 	lw	$s1 0($fp)
< 	b	label16
< label19:
---
> 	blt	$t2 6 label14
> 	bgt	$t2 6 label14
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	b	label12
> label14:
> 	blt	$t2 5 label15
> 	bgt	$t2 6 label15
> 	sw	$a0 0($fp)
> 	b	label12
> label15:
727,806c502
< label16:
< 	sw	$a0 32($s0)
< 	lw	$a0 24($s0)
< 	bne	$a0 $zero label20
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	la	$t1 Bazz_dispTab
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	lw	$a0 16($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label21
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	lw	$a0 32($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label22
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label22:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label23
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label23:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label24
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label24:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 36($s0)
---
> label12:
808,811c504,507
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
822c518
< 	bne	$a0 $zero label25
---
> 	bne	$a0 $zero label16
826c522
< label25:
---
> label16:
829,830c525
< 	jalr		$t1
< 	sw	$a0 40($s0)
---
> 	jalr	$t1
832c527
< 	bne	$a0 $zero label26
---
> 	bne	$a0 $zero label17
836c531
< label26:
---
> label17:
839,840c534
< 	jalr		$t1
< 	sw	$a0 44($s0)
---
> 	jalr	$t1
847c541
< Main.main:
---
> Main_init:
854c548,549
< 	la	$a0 str_const1
---
> 	jal	Object_init
> 	move	$a0 $s0
860c555
< Bazz.printh:
---
> String_init:
867,869c562,576
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
---
> 	jal	Object_init
> 	move	$a0 $s0
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Bool_init:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	jal	Object_init
871,879c578,590
< 	bne	$a0 $zero label27
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label27:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 int_const2
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Bazz.printh:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
886,889c597,600
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
892,905c603,608
< 	lw	$s1 12($s0)
< 	lw	$s2 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	move	$a0 $s1
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	sw	null 0($fp)
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
908,927c611,635
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 12($s0)
< 	lw	$s2 12($s0)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	move	$a0 $s1
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	sw	null 0($fp)
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	la	$a0 str_const1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ spim_outname=hairyscary.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/hairyscary.cl
+ spim_errname=hairyscary.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.spim.out
6,8c6,33
< 17141611714163171416511714161171416317141653117141611714163171416511714161171416317141653171416117141631714165171416COOL program successfully executed
< Stats -- #instructions : 30855
<          #reads : 7128  #writes 4794  #branches 6612  #other 12321
---
> The following symbols are undefined:
> heap_start
> Razz_protObj
> Int_protObj
> Bool_dispTab
> Bazz_init
> Foo_init
> Main.main
> Bool_init
> String_protObj
> Bar_protObj
> IO_init
> Int_init
> Int_dispTab
> Bazz_protObj
> String_init
> Foo_protObj
> Object_init
> IO_protObj
> Bar_init
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Razz_init
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.spim.out.filtered
6c6,33
< 17141611714163171416511714161171416317141653117141611714163171416511714161171416317141653171416117141631714165171416COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Razz_protObj
> Int_protObj
> Bool_dispTab
> Bazz_init
> Foo_init
> Main.main
> Bool_init
> String_protObj
> Bar_protObj
> IO_init
> Int_init
> Int_dispTab
> Bazz_protObj
> String_init
> Foo_protObj
> Object_init
> IO_protObj
> Bar_init
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Razz_init
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/hairyscary.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 250 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/hairyscary.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/hairyscary.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/init-default.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/init-default.cl
+ outname=init-default.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/init-default.cl
+ errname=init-default.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.out /home/raj/cool/distro/testsuite/cgen/init-default.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.out /home/raj/cool/distro/testsuite/cgen/init-default.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.out
13c13
< 	.word	3
---
> 	.word	6
36c36,37
< str_const14:
---
> str_const10:
> 	.word	5
38d38
< 	.word	6
40,41c40,41
< 	.word	int_const4
< 	.ascii	"Main"
---
> 	.word	int_const0
> 	.ascii	"A"
45c45,46
< str_const13:
---
> str_const9:
> 	.word	5
47d47
< 	.word	6
49,50c49,50
< 	.word	int_const5
< 	.ascii	"String"
---
> 	.word	int_const4
> 	.ascii	"IO"
54c54
< str_const12:
---
> str_const4:
58,59c58,59
< 	.word	int_const4
< 	.ascii	"Bool"
---
> 	.word	int_const2
> 	.ascii	"false"
63,64c63
< str_const11:
< 	.word	5
---
> str_const13:
65a65
> 	.word	6
67,68c67,68
< 	.word	int_const1
< 	.ascii	"Int"
---
> 	.word	int_const5
> 	.ascii	"String"
72,73c72
< str_const10:
< 	.word	5
---
> str_const7:
74a74
> 	.word	8
76,77c76,77
< 	.word	int_const0
< 	.ascii	"A"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
81c81
< str_const9:
---
> str_const14:
85,86c85,86
< 	.word	int_const6
< 	.ascii	"IO"
---
> 	.word	int_const1
> 	.ascii	"Int"
90c90
< str_const8:
---
> str_const6:
94,95c94,95
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const7
> 	.ascii	"\nz: "
99c99
< str_const7:
---
> str_const5:
101c101
< 	.word	8
---
> 	.word	6
104c104
< 	.ascii	"<basic class>"
---
> 	.ascii	"\ny: "
108c108
< str_const6:
---
> str_const12:
110c110
< 	.word	18
---
> 	.word	6
112,113c112,113
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/init-default.cl"
---
> 	.word	int_const7
> 	.ascii	"Bool"
117c117
< str_const5:
---
> str_const3:
121,122c121,122
< 	.word	int_const4
< 	.ascii	"\nz: "
---
> 	.word	int_const7
> 	.ascii	"true"
126c126
< str_const4:
---
> str_const2:
130,131c130,131
< 	.word	int_const4
< 	.ascii	"\ny: "
---
> 	.word	int_const7
> 	.ascii	"\nb: "
135c135
< str_const3:
---
> str_const8:
139,140c139,140
< 	.word	int_const2
< 	.ascii	"false"
---
> 	.word	int_const5
> 	.ascii	"Object"
144c144
< str_const2:
---
> str_const11:
148,149c148,149
< 	.word	int_const4
< 	.ascii	"true"
---
> 	.word	int_const7
> 	.ascii	"Main"
155c155
< 	.word	6
---
> 	.word	5
157,158c157,158
< 	.word	int_const4
< 	.ascii	"\nb: "
---
> 	.word	int_const1
> 	.ascii	"x: "
164c164
< 	.word	5
---
> 	.word	18
166,167c166,167
< 	.word	int_const1
< 	.ascii	"x: "
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/init-default.cl"
171,172c171,172
< int_const8:
< 	.word	3
---
> int_const3:
> 	.word	6
175c175
< 	.word	52
---
> 	.word	0
177,178c177,178
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	6
181c181
< 	.word	13
---
> 	.word	1
184c184
< 	.word	3
---
> 	.word	6
187c187
< 	.word	2
---
> 	.word	13
189,190c189,190
< int_const5:
< 	.word	3
---
> int_const4:
> 	.word	6
193c193
< 	.word	6
---
> 	.word	2
195,196c195,196
< int_const4:
< 	.word	3
---
> int_const1:
> 	.word	6
199,201d198
< 	.word	4
< 	.word	-1
< int_const3:
202a200,202
> 	.word	-1
> int_const7:
> 	.word	6
205c205
< 	.word	0
---
> 	.word	4
208c208
< 	.word	3
---
> 	.word	6
213,214c213,214
< int_const1:
< 	.word	3
---
> int_const5:
> 	.word	6
217c217
< 	.word	3
---
> 	.word	6
219,220c219,220
< int_const0:
< 	.word	3
---
> int_const8:
> 	.word	6
223c223
< 	.word	1
---
> 	.word	52
251,252c251,252
< 	.word	Int_protObj
< 	.word	Int_init
---
> 	.word	Main_protObj
> 	.word	Main_init
257,300c257,259
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	A.print_attr
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabA_dispTabMain_dispTabBool_dispTabString_dispTabInt_dispTab	.word	-1
305a265,278
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> A_protObj:
> 	.word	2
> 	.word	7
> 	.word	A_dispTab
> 	.word	int_const3
> 	.word	bool_const0
> 	.word	int_const3
> 	.word	int_const3
> 	.word	-1
307c280
< 	.word	6
---
> 	.word	3
311a285,290
> Bool_protObj:
> 	.word	4
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
319,324d297
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
326c299
< 	.word	3
---
> 	.word	6
330,343d302
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< A_protObj:
< 	.word	2
< 	.word	7
< 	.word	A_dispTab
< 	.word	int_const3
< 	.word	bool_const0
< 	.word	int_const3
< 	.word	int_const3
366c325
< Main_init:
---
> IO_init:
374,377d332
< 	la	$a0 A_protObj
< 	jal	Object.copy
< 	jal	A_init
< 	sw	$a0 12($s0)
384c339
< String_init:
---
> A_init:
391c346,347
< 	jal	Object_init
---
> 	jal	IO_init
> 	la	$a0 bool_const1
398c354
< Bool_init:
---
> Main_init:
412c368
< Int_init:
---
> Bool_init:
426c382
< IO_init:
---
> String_init:
440,444c396,400
< A_init:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> Int_init:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
447,478c403
< 	jal	IO_init
< 	lw	$a0 16($s0)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	la	$a0 int_const0
< 	b	label1
< label0:
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
< label1:
< 	sw	$a0 12($s0)
< 	la	$a0 bool_const1
< 	sw	$a0 16($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 20($s0)
< 	lw	$s1 24($s0)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 24($s0)
---
> 	jal	Object_init
480,483c405,408
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
485c410
< Main.main:
---
> A.print_attr:
492,500c417
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
---
> 	move	$a0 null
506c423
< A.print_attr:
---
> Main.main:
512a430,431
> 	move	$a0 null
> 	bne	$a0 $zero label0
514,518d432
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const6
521,612c435
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label6
< 	la	$a0 str_const2
< 	b	label7
< label6:
< 	la	$a0 str_const3
< label7:
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 24($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label12
< 	la	$a0 str_const6
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
---
> label0:
614,615c437,438
< 	lw	$t1 16($t1)
< 	jalr		$t1
---
> 	lw	$t1 28($t1)
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/init-default.cl
+ spim_outname=init-default.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/init-default.cl
+ spim_errname=init-default.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.spim.out
6,11c6,27
< x: -1
< b: true
< y: 2
< z: -5COOL program successfully executed
< Stats -- #instructions : 590
<          #reads : 128  #writes 85  #branches 119  #other 258
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.spim.out.filtered
6,9c6,27
< x: -1
< b: true
< y: 2
< z: -5COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-default.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 259 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-default.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/init-default.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ outname=init-order-self.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ errname=init-order-self.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.out /home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.out /home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	2
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,38c36,38
< str_const8:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	18
40,41c40,41
< 	.word	int_const5
< 	.ascii	"String"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/init-order-self.cl"
45,46c45,46
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	3
54,55c54,55
< str_const6:
< 	.word	5
---
> str_const7:
> 	.word	3
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const1
> 	.ascii	"IO"
63,64c63,64
< str_const5:
< 	.word	5
---
> str_const3:
> 	.word	3
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,73c72,73
< str_const4:
< 	.word	5
---
> str_const1:
> 	.word	3
76,77c76,77
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const0
> 	.ascii	"\n"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const6:
> 	.word	3
86c86
< 	.ascii	"Object"
---
> 	.ascii	"String"
90,92c90,92
< str_const2:
< 	.word	5
< 	.word	8
---
> str_const8:
> 	.word	3
> 	.word	6
94,95c94,95
< 	.word	int_const7
< 	.ascii	"<basic class>"
---
> 	.word	int_const3
> 	.ascii	"Main"
99,101c99,101
< str_const1:
< 	.word	5
< 	.word	18
---
> str_const2:
> 	.word	3
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/init-order-self.cl"
---
> 	.ascii	"<basic class>"
108,109c108,109
< str_const0:
< 	.word	5
---
> str_const4:
> 	.word	3
112,113c112,113
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const2
> 	.ascii	"Int"
117,122d116
< int_const8:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	55
< 	.word	-1
124c118
< 	.word	3
---
> 	.word	1
127c121
< 	.word	13
---
> 	.word	55
130c124
< 	.word	3
---
> 	.word	1
135,136c129,130
< int_const5:
< 	.word	3
---
> int_const0:
> 	.word	1
139c133
< 	.word	6
---
> 	.word	1
141,142c135,136
< int_const4:
< 	.word	3
---
> int_const8:
> 	.word	1
145c139
< 	.word	5
---
> 	.word	13
147,148c141,142
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	1
151c145
< 	.word	4
---
> 	.word	2
154c148
< 	.word	3
---
> 	.word	1
159,160c153,154
< int_const1:
< 	.word	3
---
> int_const3:
> 	.word	1
163c157
< 	.word	2
---
> 	.word	4
165,166c159,160
< int_const0:
< 	.word	3
---
> int_const4:
> 	.word	1
168a163,165
> 	.word	5
> 	.word	-1
> int_const5:
169a167,169
> 	.word	4
> 	.word	Int_dispTab
> 	.word	6
172c172
< 	.word	4
---
> 	.word	2
178c178
< 	.word	4
---
> 	.word	2
192,195d191
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
202,239c198,202
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.recite
< 	.word	Main.main
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTabMain_dispTab	.word	-1
245,249c208,211
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const6
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
253c215
< 	.word	4
---
> 	.word	2
258c220
< Int_protObj:
---
> String_protObj:
260,261c222,224
< 	.word	4
< 	.word	Int_dispTab
---
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const6
265c228
< 	.word	1
---
> 	.word	4
270c233
< 	.word	2
---
> 	.word	5
301c264
< String_init:
---
> Int_init:
329c292
< Int_init:
---
> String_init:
370c333
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
376,377c339
< 	jalr		$t1
< 	sw	$a0 12($s0)
---
> 	jalr	$t1
383c345
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
389,390c351
< 	jalr		$t1
< 	sw	$a0 16($s0)
---
> 	jalr	$t1
396c357
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
402,403c363
< 	jalr		$t1
< 	sw	$a0 20($s0)
---
> 	jalr	$t1
409c369
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
415,416c375
< 	jalr		$t1
< 	sw	$a0 24($s0)
---
> 	jalr	$t1
422c381
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
428,429c387
< 	jalr		$t1
< 	sw	$a0 28($s0)
---
> 	jalr	$t1
435c393
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
441,442c399
< 	jalr		$t1
< 	sw	$a0 32($s0)
---
> 	jalr	$t1
456,480c413
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ spim_outname=init-order-self.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-self.cl
+ spim_errname=init-order-self.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.spim.out
6,14c6,25
< 1
< 2
< 3
< 4
< 5
< 6
< COOL program successfully executed
< Stats -- #instructions : 509
<          #reads : 119  #writes 80  #branches 85  #other 225
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.spim.out.filtered
6,12c6,25
< 1
< 2
< 3
< 4
< 5
< 6
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-self.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 202 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-self.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/init-order-self.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ outname=init-order-super.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ errname=init-order-super.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.out /home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.out /home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.out
13c13
< 	.word	4
---
> 	.word	1
15c15
< 	.word	5
---
> 	.word	2
17c17
< 	.word	6
---
> 	.word	3
29c29
< 	.word	6
---
> 	.word	3
36,46c36,37
< str_const9:
< 	.word	6
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const6
< 	.ascii	"String"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const8:
< 	.word	6
---
> str_const5:
> 	.word	3
55c46
< 	.word	6
---
> 	.word	3
58,59c49,50
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const1
> 	.ascii	"IO"
63,65c54,56
< str_const6:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	19
67,68c58,59
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/init-order-super.cl"
72,73c63,64
< str_const5:
< 	.word	6
---
> str_const3:
> 	.word	3
76,77c67,68
< 	.word	int_const3
< 	.ascii	"Base"
---
> 	.word	int_const7
> 	.ascii	"Object"
81,82c72,73
< str_const4:
< 	.word	6
---
> str_const1:
> 	.word	3
85,86c76,77
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const0
> 	.ascii	"\n"
90c81,82
< str_const3:
---
> str_const6:
> 	.word	3
91a84,91
> 	.word	String_dispTab
> 	.word	int_const7
> 	.ascii	"String"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const9:
> 	.word	3
94,95c94,95
< 	.word	int_const6
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
100c100
< 	.word	6
---
> 	.word	3
103c103
< 	.word	int_const7
---
> 	.word	int_const8
108c108,109
< str_const1:
---
> str_const8:
> 	.word	3
110d110
< 	.word	19
112,113c112,113
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/init-order-super.cl"
---
> 	.word	int_const3
> 	.ascii	"Base"
117,118c117,118
< str_const0:
< 	.word	6
---
> str_const4:
> 	.word	3
121,122c121,122
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const2
> 	.ascii	"Int"
126,133c126,127
< int_const8:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	56
< 	.word	-1
< int_const7:
< 	.word	4
---
> int_const5:
> 	.word	1
136c130
< 	.word	13
---
> 	.word	0
139c133
< 	.word	4
---
> 	.word	1
142c136
< 	.word	6
---
> 	.word	56
144,145c138,139
< int_const5:
< 	.word	4
---
> int_const0:
> 	.word	1
148c142
< 	.word	0
---
> 	.word	1
150,151c144,145
< int_const4:
< 	.word	4
---
> int_const8:
> 	.word	1
154c148
< 	.word	5
---
> 	.word	13
156,157c150,151
< int_const3:
< 	.word	4
---
> int_const1:
> 	.word	1
160c154
< 	.word	4
---
> 	.word	2
163c157
< 	.word	4
---
> 	.word	1
168,169c162,163
< int_const1:
< 	.word	4
---
> int_const3:
> 	.word	1
172,174d165
< 	.word	2
< 	.word	-1
< int_const0:
175a167,169
> 	.word	-1
> int_const4:
> 	.word	1
177a172,174
> 	.word	5
> 	.word	-1
> int_const7:
178a176,178
> 	.word	4
> 	.word	Int_dispTab
> 	.word	6
181c181
< 	.word	5
---
> 	.word	2
187c187
< 	.word	5
---
> 	.word	2
202,207d201
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Base_protObj
< 	.word	Base_init
< 	.word	Main_protObj
< 	.word	Main_init
214,260c208,214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.recite
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.recite
< 	.word	Main.main
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Base_protObj
> 	.word	Base_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTabBase_dispTabMain_dispTab	.word	-1
266,270c220,223
< String_protObj:
< 	.word	6
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const5
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
274c227
< 	.word	5
---
> 	.word	2
279,282c232,236
< Int_protObj:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	3
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const5
286c240
< 	.word	1
---
> 	.word	4
291c245
< 	.word	2
---
> 	.word	5
298c252
< 	.word	3
---
> 	.word	6
328c282
< String_init:
---
> Int_init:
356c310
< Int_init:
---
> String_init:
397c351
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
403,404c357
< 	jalr		$t1
< 	sw	$a0 12($s0)
---
> 	jalr	$t1
410c363
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
416,417c369
< 	jalr		$t1
< 	sw	$a0 16($s0)
---
> 	jalr	$t1
437c389
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
443,444c395
< 	jalr		$t1
< 	sw	$a0 20($s0)
---
> 	jalr	$t1
450c401
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
456,457c407
< 	jalr		$t1
< 	sw	$a0 24($s0)
---
> 	jalr	$t1
463c413
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
469,470c419
< 	jalr		$t1
< 	sw	$a0 28($s0)
---
> 	jalr	$t1
484,508c433
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ spim_outname=init-order-super.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/init-order-super.cl
+ spim_errname=init-order-super.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.spim.out
6,13c6,27
< 1
< 2
< 3
< 4
< 5
< COOL program successfully executed
< Stats -- #instructions : 460
<          #reads : 106  #writes 73  #branches 77  #other 204
---
> The following symbols are undefined:
> heap_start
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.spim.out.filtered
6,11c6,27
< 1
< 2
< 3
< 4
< 5
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/init-order-super.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/init-order-super.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/init-order-super.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ outname=interaction-attrinit-method.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ errname=interaction-attrinit-method.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.out /home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.out /home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.out
13c13
< 	.word	3
---
> 	.word	1
15,16d14
< 	.word	4
< _string_tag:
17a16,17
> _string_tag:
> 	.word	4
29c29
< 	.word	5
---
> 	.word	4
37c37
< 	.word	5
---
> 	.word	4
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45c45,46
< str_const6:
---
> str_const4:
> 	.word	4
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	4
> 	.word	21
59c59
< 	.ascii	"Int"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	4
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const6:
> 	.word	4
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const5:
> 	.word	4
86c86
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	4
99c99,100
< str_const0:
---
> str_const3:
> 	.word	4
101d101
< 	.word	21
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl"
---
> 	.ascii	"Int"
108,109c108,109
< int_const7:
< 	.word	3
---
> int_const1:
> 	.word	1
112c112
< 	.word	67
---
> 	.word	0
114,115c114,115
< int_const6:
< 	.word	3
---
> int_const4:
> 	.word	1
118c118
< 	.word	13
---
> 	.word	67
120,121c120,121
< int_const5:
< 	.word	3
---
> int_const0:
> 	.word	1
124c124
< 	.word	2
---
> 	.word	1
126,127c126,127
< int_const4:
< 	.word	3
---
> int_const6:
> 	.word	1
130c130
< 	.word	3
---
> 	.word	13
133c133
< 	.word	3
---
> 	.word	1
136c136
< 	.word	4
---
> 	.word	2
138,139c138,139
< int_const2:
< 	.word	3
---
> int_const7:
> 	.word	1
142,144d141
< 	.word	6
< 	.word	-1
< int_const1:
145a143,145
> 	.word	-1
> int_const2:
> 	.word	1
148c148
< 	.word	0
---
> 	.word	4
150,151c150,151
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	1
154c154
< 	.word	1
---
> 	.word	6
157c157
< 	.word	4
---
> 	.word	5
163c163
< 	.word	4
---
> 	.word	5
176a177,178
> 	.word	Int_protObj
> 	.word	Int_init
181,184d182
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
187,224c185,187
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.f
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabInt_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTab	.word	-1
230,242d192
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const1
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
244c194
< 	.word	3
---
> 	.word	1
250c200
< 	.word	1
---
> 	.word	2
255c205
< 	.word	2
---
> 	.word	3
258a209,221
> 	.word	-1
> String_protObj:
> 	.word	4
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const1
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
281c244
< String_init:
---
> Int_init:
295c258
< Bool_init:
---
> IO_init:
309c272
< Int_init:
---
> Main_init:
316c279,288
< 	jal	Object_init
---
> 	jal	IO_init
> 	move	$a0 $s0
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label0:
> 	lw	$t1 8($a0)
> 	lw	$t1 28($t1)
> 	jalr	$t1
323c295
< IO_init:
---
> String_init:
337c309
< Main_init:
---
> Bool_init:
344,354c316
< 	jal	IO_init
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 12($s0)
---
> 	jal	Object_init
362,365c324,327
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
368,378c330,334
< 	lw	$s1 12($s0)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
387,388c343
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
398c353
< 	jalr		$t1
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ spim_outname=interaction-attrinit-method.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/interaction-attrinit-method.cl
+ spim_errname=interaction-attrinit-method.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.spim.out
6,8c6,25
< 1COOL program successfully executed
< Stats -- #instructions : 236
<          #reads : 48  #writes 35  #branches 46  #other 107
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.spim.out.filtered
6c6,25
< 1COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/interaction-attrinit-method.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 187 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/interaction-attrinit-method.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/interaction-attrinit-method.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/lam.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/lam.cl
+ outname=lam.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/lam.cl
+ errname=lam.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.out /home/raj/cool/distro/testsuite/cgen/lam.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.out /home/raj/cool/distro/testsuite/cgen/lam.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.out
13c13
< 	.word	10
---
> 	.word	5
15c15
< 	.word	11
---
> 	.word	4
17c17
< 	.word	12
---
> 	.word	15
29c29
< 	.word	12
---
> 	.word	15
36,38c36,38
< str_const71:
< 	.word	12
< 	.word	8
---
> str_const69:
> 	.word	15
> 	.word	5
41c41
< 	.ascii	"LambdaListRef"
---
> 	.ascii	"App"
45,47c45,47
< str_const70:
< 	.word	12
< 	.word	8
---
> str_const24:
> 	.word	15
> 	.word	5
50c50
< 	.ascii	"LambdaListNE"
---
> 	.ascii	"(("
54,56c54,56
< str_const69:
< 	.word	12
< 	.word	7
---
> str_const53:
> 	.word	15
> 	.word	11
59c59
< 	.ascii	"LambdaList"
---
> 	.ascii	"  main() : EvalObject {\n"
63,65c63,65
< str_const68:
< 	.word	12
< 	.word	6
---
> str_const21:
> 	.word	15
> 	.word	8
68c68
< 	.ascii	"String"
---
> 	.ascii	"      x <- y;\n"
72,74c72,74
< str_const67:
< 	.word	12
< 	.word	6
---
> str_const14:
> 	.word	15
> 	.word	8
77c77
< 	.ascii	"Bool"
---
> 	.ascii	"new Closure))"
81,83c81,92
< str_const66:
< 	.word	12
< 	.word	5
---
> str_const52:
> 	.word	15
> 	.word	8
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"class Main {\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const47:
> 	.word	15
> 	.word	19
86c95
< 	.ascii	"Int"
---
> 	.ascii	"  init(p : Closure) : Closure {{ parent <- p; self; }};\n"
90,92c99,101
< str_const65:
< 	.word	12
< 	.word	6
---
> str_const1:
> 	.word	15
> 	.word	5
94,95c103,104
< 	.word	int_const6
< 	.ascii	"Main"
---
> 	.word	int_const1
> 	.ascii	"\n"
99,100c108,109
< str_const64:
< 	.word	12
---
> str_const71:
> 	.word	15
103,104c112,113
< 	.word	int_const6
< 	.ascii	"Term"
---
> 	.word	int_const8
> 	.ascii	"String"
108,110c117,119
< str_const63:
< 	.word	12
< 	.word	5
---
> str_const50:
> 	.word	15
> 	.word	16
112,113c121,122
< 	.word	int_const7
< 	.ascii	"App"
---
> 	.word	int_const9
> 	.ascii	"\n------------------cut here------------------\n"
117,118c126,127
< str_const62:
< 	.word	12
---
> str_const63:
> 	.word	15
121,122c130,131
< 	.word	int_const5
< 	.ascii	"Lambda"
---
> 	.word	int_const10
> 	.ascii	"VarList"
126,128c135,137
< str_const61:
< 	.word	12
< 	.word	7
---
> str_const8:
> 	.word	15
> 	.word	11
130,131c139,140
< 	.word	int_const8
< 	.ascii	"Variable"
---
> 	.word	int_const11
> 	.ascii	"Error:  free occurrence of "
135,136c144,154
< str_const60:
< 	.word	12
---
> str_const6:
> 	.word	15
> 	.word	16
> 	.word	String_dispTab
> 	.word	int_const12
> 	.ascii	"\nError: Expr is pure virtual; can't gen_code\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const15:
> 	.word	15
139,140c157,158
< 	.word	int_const6
< 	.ascii	"Expr"
---
> 	.word	int_const8
> 	.ascii	"self))"
144,146c162,164
< str_const59:
< 	.word	12
< 	.word	7
---
> str_const43:
> 	.word	15
> 	.word	10
148,149c166,167
< 	.word	int_const9
< 	.ascii	"VarListNE"
---
> 	.word	int_const13
> 	.ascii	"  parent : Closure;\n"
153,154c171,172
< str_const58:
< 	.word	12
---
> str_const60:
> 	.word	15
157,158c175,176
< 	.word	int_const10
< 	.ascii	"VarList"
---
> 	.word	int_const14
> 	.ascii	"Bool"
162,164c180,182
< str_const57:
< 	.word	12
< 	.word	5
---
> str_const5:
> 	.word	15
> 	.word	16
166,167c184,185
< 	.word	int_const11
< 	.ascii	"IO"
---
> 	.word	int_const15
> 	.ascii	"\nError: Expr is pure virtual; can't substitute\n"
171,173c189,191
< str_const56:
< 	.word	12
< 	.word	6
---
> str_const31:
> 	.word	15
> 	.word	8
175,176c193,194
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const16
> 	.ascii	"  case x of\n"
180,182c198,200
< str_const55:
< 	.word	12
< 	.word	8
---
> str_const9:
> 	.word	15
> 	.word	6
184,185c202,203
< 	.word	int_const2
< 	.ascii	"<basic class>"
---
> 	.word	int_const10
> 	.ascii	"get_x()"
190c208
< 	.word	12
---
> 	.word	15
198,200c216,218
< str_const53:
< 	.word	12
< 	.word	11
---
> str_const41:
> 	.word	15
> 	.word	16
202,203c220,221
< 	.word	int_const12
< 	.ascii	"  main() : EvalObject {\n"
---
> 	.word	int_const9
> 	.ascii	"  eval() : EvalObject { { abort(); self; } };\n"
207,209c225,227
< str_const52:
< 	.word	12
< 	.word	8
---
> str_const19:
> 	.word	15
> 	.word	13
211,212c229,230
< 	.word	int_const2
< 	.ascii	"class Main {\n"
---
> 	.word	int_const17
> 	.ascii	"    { out_string(\"Applying closure "
216,218c234,236
< str_const51:
< 	.word	12
< 	.word	17
---
> str_const58:
> 	.word	15
> 	.word	8
220,221c238,239
< 	.word	int_const13
< 	.ascii	"(*Generated by lam.cl (Jeff Foster, March 2000)*)\n"
---
> 	.word	int_const16
> 	.ascii	"LambdaListNE"
225,227c243,245
< str_const50:
< 	.word	12
< 	.word	16
---
> str_const26:
> 	.word	15
> 	.word	5
229,230c247,248
< 	.word	int_const14
< 	.ascii	"\n------------------cut here------------------\n"
---
> 	.word	int_const3
> 	.ascii	"))"
234,236c252,254
< str_const49:
< 	.word	12
< 	.word	10
---
> str_const2:
> 	.word	15
> 	.word	5
238,239c256,257
< 	.word	int_const15
< 	.ascii	"Generating code for "
---
> 	.word	int_const1
> 	.ascii	" "
243,245c261,263
< str_const48:
< 	.word	12
< 	.word	20
---
> str_const62:
> 	.word	15
> 	.word	5
247,248c265,266
< 	.word	int_const16
< 	.ascii	"  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n"
---
> 	.word	int_const3
> 	.ascii	"IO"
252,254c270,272
< str_const47:
< 	.word	12
< 	.word	19
---
> str_const65:
> 	.word	15
> 	.word	6
256,257c274,275
< 	.word	int_const17
< 	.ascii	"  init(p : Closure) : Closure {{ parent <- p; self; }};\n"
---
> 	.word	int_const14
> 	.ascii	"Term"
261,263c279,281
< str_const46:
< 	.word	12
< 	.word	12
---
> str_const11:
> 	.word	15
> 	.word	5
265,266c283,284
< 	.word	int_const18
< 	.ascii	"  get_x() : EvalObject { x };\n"
---
> 	.word	int_const1
> 	.ascii	"."
270,272c288,290
< str_const45:
< 	.word	12
< 	.word	14
---
> str_const51:
> 	.word	15
> 	.word	17
274,275c292,293
< 	.word	int_const19
< 	.ascii	"  get_parent() : Closure { parent };\n"
---
> 	.word	int_const18
> 	.ascii	"(*Generated by lam.cl (Jeff Foster, March 2000)*)\n"
279,281c297,299
< str_const44:
< 	.word	12
< 	.word	9
---
> str_const7:
> 	.word	15
> 	.word	8
283,284c301,302
< 	.word	int_const20
< 	.ascii	"  x : EvalObject;\n"
---
> 	.word	int_const6
> 	.ascii	"get_parent()."
288,289c306,307
< str_const43:
< 	.word	12
---
> str_const17:
> 	.word	15
292,293c310,311
< 	.word	int_const15
< 	.ascii	"  parent : Closure;\n"
---
> 	.word	int_const13
> 	.ascii	" inherits Closure {\n"
297,299c315,317
< str_const42:
< 	.word	12
< 	.word	14
---
> str_const67:
> 	.word	15
> 	.word	6
301,302c319,320
< 	.word	int_const21
< 	.ascii	"class Closure inherits EvalObject {\n"
---
> 	.word	int_const14
> 	.ascii	"Expr"
306,307c324,325
< str_const41:
< 	.word	12
---
> str_const3:
> 	.word	15
310,311c328,329
< 	.word	int_const14
< 	.ascii	"  eval() : EvalObject { { abort(); self; } };\n"
---
> 	.word	int_const15
> 	.ascii	"\nError: Expr is pure virtual; can't print self\n"
315,317c333,335
< str_const40:
< 	.word	12
< 	.word	12
---
> str_const56:
> 	.word	15
> 	.word	6
319,320c337,338
< 	.word	int_const22
< 	.ascii	"class EvalObject inherits IO {\n"
---
> 	.word	int_const8
> 	.ascii	"Object"
324,326c342,344
< str_const39:
< 	.word	12
< 	.word	6
---
> str_const18:
> 	.word	15
> 	.word	14
328,329c346,347
< 	.word	int_const6
< 	.ascii	" =>\n"
---
> 	.word	int_const19
> 	.ascii	"  apply(y : EvalObject) : EvalObject {\n"
333,335c351,353
< str_const38:
< 	.word	12
< 	.word	8
---
> str_const64:
> 	.word	15
> 	.word	7
337,338c355,356
< 	.word	int_const2
< 	.ascii	"beta-reduce: "
---
> 	.word	int_const20
> 	.ascii	"VarListNE"
342,344c360,362
< str_const37:
< 	.word	12
< 	.word	5
---
> str_const68:
> 	.word	15
> 	.word	7
346,347c364,365
< 	.word	int_const1
< 	.ascii	"z"
---
> 	.word	int_const21
> 	.ascii	"Variable"
351,353c369,371
< str_const36:
< 	.word	12
< 	.word	5
---
> str_const49:
> 	.word	15
> 	.word	10
355,356c373,374
< 	.word	int_const1
< 	.ascii	"y"
---
> 	.word	int_const13
> 	.ascii	"Generating code for "
360c378,379
< str_const35:
---
> str_const46:
> 	.word	15
362d380
< 	.word	5
364,365c382,383
< 	.word	int_const1
< 	.ascii	"x"
---
> 	.word	int_const22
> 	.ascii	"  get_x() : EvalObject { x };\n"
369,370c387,388
< str_const34:
< 	.word	12
---
> str_const13:
> 	.word	15
374c392
< 	.ascii	"  esac)"
---
> 	.ascii	").init("
379c397
< 	.word	12
---
> 	.word	15
387,389c405,407
< str_const32:
< 	.word	12
< 	.word	12
---
> str_const61:
> 	.word	15
> 	.word	5
391,392c409,410
< 	.word	int_const22
< 	.ascii	"    c : Closure => c.apply(y);\n"
---
> 	.word	int_const2
> 	.ascii	"Int"
396,398c414,416
< str_const31:
< 	.word	12
< 	.word	8
---
> str_const45:
> 	.word	15
> 	.word	14
400,401c418,419
< 	.word	int_const3
< 	.ascii	"  case x of\n"
---
> 	.word	int_const24
> 	.ascii	"  get_parent() : Closure { parent };\n"
405,407c423,425
< str_const30:
< 	.word	12
< 	.word	6
---
> str_const25:
> 	.word	15
> 	.word	5
409,410c427,428
< 	.word	int_const6
< 	.ascii	" in\n"
---
> 	.word	int_const2
> 	.ascii	")@("
414,416c432,434
< str_const29:
< 	.word	12
< 	.word	10
---
> str_const38:
> 	.word	15
> 	.word	8
418,419c436,437
< 	.word	int_const24
< 	.ascii	"     y : EvalObject <- "
---
> 	.word	int_const6
> 	.ascii	"beta-reduce: "
423,425c441,443
< str_const28:
< 	.word	12
< 	.word	5
---
> str_const20:
> 	.word	15
> 	.word	6
427,428c445,447
< 	.word	int_const11
< 	.ascii	",\n"
---
> 	.word	int_const8
> 	.byte	92
> 	.ascii	"n\");\n"
432,433c451,452
< str_const27:
< 	.word	12
---
> str_const29:
> 	.word	15
436,437c455,456
< 	.word	int_const24
< 	.ascii	"(let x : EvalObject <- "
---
> 	.word	int_const25
> 	.ascii	"     y : EvalObject <- "
441,443c460,462
< str_const26:
< 	.word	12
< 	.word	5
---
> str_const12:
> 	.word	15
> 	.word	8
445,446c464,465
< 	.word	int_const11
< 	.ascii	"))"
---
> 	.word	int_const6
> 	.ascii	"((new Closure"
450,452c469,471
< str_const25:
< 	.word	12
< 	.word	5
---
> str_const48:
> 	.word	15
> 	.word	20
454,455c473,474
< 	.word	int_const7
< 	.ascii	")@("
---
> 	.word	int_const26
> 	.ascii	"  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n"
459,461c478,480
< str_const24:
< 	.word	12
< 	.word	5
---
> str_const42:
> 	.word	15
> 	.word	14
463,464c482,483
< 	.word	int_const11
< 	.ascii	"(("
---
> 	.word	int_const27
> 	.ascii	"class Closure inherits EvalObject {\n"
468,469c487,488
< str_const23:
< 	.word	12
---
> str_const10:
> 	.word	15
472,473c491,492
< 	.word	int_const7
< 	.ascii	"};\n"
---
> 	.word	int_const1
> 	.byte	92
477,478c496,497
< str_const22:
< 	.word	12
---
> str_const70:
> 	.word	15
481,482c500,501
< 	.word	int_const25
< 	.ascii	";}};\n"
---
> 	.word	int_const8
> 	.ascii	"Lambda"
486,488c505,507
< str_const21:
< 	.word	12
< 	.word	8
---
> str_const28:
> 	.word	15
> 	.word	5
490,491c509,510
< 	.word	int_const26
< 	.ascii	"      x <- y;\n"
---
> 	.word	int_const3
> 	.ascii	",\n"
495,496c514,515
< str_const20:
< 	.word	12
---
> str_const39:
> 	.word	15
499,501c518,519
< 	.word	int_const5
< 	.byte	92
< 	.ascii	"n\");\n"
---
> 	.word	int_const14
> 	.ascii	" =>\n"
505,507c523,525
< str_const19:
< 	.word	12
< 	.word	13
---
> str_const27:
> 	.word	15
> 	.word	10
509,510c527,528
< 	.word	int_const27
< 	.ascii	"    { out_string(\"Applying closure "
---
> 	.word	int_const25
> 	.ascii	"(let x : EvalObject <- "
514,516c532,534
< str_const18:
< 	.word	12
< 	.word	14
---
> str_const55:
> 	.word	15
> 	.word	8
518,519c536,537
< 	.word	int_const28
< 	.ascii	"  apply(y : EvalObject) : EvalObject {\n"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
523c541,542
< str_const17:
---
> str_const40:
> 	.word	15
525d543
< 	.word	10
527,528c545,546
< 	.word	int_const15
< 	.ascii	" inherits Closure {\n"
---
> 	.word	int_const28
> 	.ascii	"class EvalObject inherits IO {\n"
532,534c550,552
< str_const16:
< 	.word	12
< 	.word	8
---
> str_const23:
> 	.word	15
> 	.word	5
537c555
< 	.ascii	"class Closure"
---
> 	.ascii	"};\n"
541,543c559,561
< str_const15:
< 	.word	12
< 	.word	6
---
> str_const4:
> 	.word	15
> 	.word	17
545,546c563,564
< 	.word	int_const5
< 	.ascii	"self))"
---
> 	.word	int_const23
> 	.ascii	"\nError: Expr is pure virtual; can't beta-reduce\n"
550,552c568,570
< str_const14:
< 	.word	12
< 	.word	8
---
> str_const22:
> 	.word	15
> 	.word	6
554,555c572,573
< 	.word	int_const2
< 	.ascii	"new Closure))"
---
> 	.word	int_const29
> 	.ascii	";}};\n"
559c577,578
< str_const13:
---
> str_const32:
> 	.word	15
561d579
< 	.word	6
563,564c581,582
< 	.word	int_const10
< 	.ascii	").init("
---
> 	.word	int_const28
> 	.ascii	"    c : Closure => c.apply(y);\n"
568,570c586,588
< str_const12:
< 	.word	12
< 	.word	8
---
> str_const30:
> 	.word	15
> 	.word	6
572,573c590,591
< 	.word	int_const2
< 	.ascii	"((new Closure"
---
> 	.word	int_const14
> 	.ascii	" in\n"
577,579c595,597
< str_const11:
< 	.word	12
< 	.word	5
---
> str_const16:
> 	.word	15
> 	.word	8
581,582c599,600
< 	.word	int_const1
< 	.ascii	"."
---
> 	.word	int_const6
> 	.ascii	"class Closure"
586,587c604,605
< str_const10:
< 	.word	12
---
> str_const35:
> 	.word	15
591,600c609
< 	.byte	92
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	12
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const10
< 	.ascii	"get_x()"
---
> 	.ascii	"x"
604,606c613,615
< str_const8:
< 	.word	12
< 	.word	11
---
> str_const0:
> 	.word	15
> 	.word	15
608,609c617,618
< 	.word	int_const29
< 	.ascii	"Error:  free occurrence of "
---
> 	.word	int_const30
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/lam.cl"
613,615c622,624
< str_const7:
< 	.word	12
< 	.word	8
---
> str_const36:
> 	.word	15
> 	.word	5
617,618c626,627
< 	.word	int_const2
< 	.ascii	"get_parent()."
---
> 	.word	int_const1
> 	.ascii	"y"
622,624c631,633
< str_const6:
< 	.word	12
< 	.word	16
---
> str_const37:
> 	.word	15
> 	.word	5
626,627c635,636
< 	.word	int_const30
< 	.ascii	"\nError: Expr is pure virtual; can't gen_code\n"
---
> 	.word	int_const1
> 	.ascii	"z"
631,633c640,642
< str_const5:
< 	.word	12
< 	.word	16
---
> str_const57:
> 	.word	15
> 	.word	7
636c645
< 	.ascii	"\nError: Expr is pure virtual; can't substitute\n"
---
> 	.ascii	"LambdaList"
640,642c649,651
< str_const4:
< 	.word	12
< 	.word	17
---
> str_const44:
> 	.word	15
> 	.word	9
644,645c653,654
< 	.word	int_const23
< 	.ascii	"\nError: Expr is pure virtual; can't beta-reduce\n"
---
> 	.word	int_const32
> 	.ascii	"  x : EvalObject;\n"
649,651c658,660
< str_const3:
< 	.word	12
< 	.word	16
---
> str_const66:
> 	.word	15
> 	.word	6
653,654c662,663
< 	.word	int_const31
< 	.ascii	"\nError: Expr is pure virtual; can't print self\n"
---
> 	.word	int_const14
> 	.ascii	"Main"
658,660c667,669
< str_const2:
< 	.word	12
< 	.word	5
---
> str_const34:
> 	.word	15
> 	.word	6
662,663c671,672
< 	.word	int_const1
< 	.ascii	" "
---
> 	.word	int_const10
> 	.ascii	"  esac)"
667,668c676
< str_const1:
< 	.word	12
---
> str_const59:
669a678
> 	.word	8
671,672c680,681
< 	.word	int_const32
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/lam.cl"
---
> 	.word	int_const6
> 	.ascii	"LambdaListRef"
676,677c685
< str_const0:
< 	.word	12
---
> int_const25:
679,692d686
< 	.word	String_dispTab
< 	.word	int_const1
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const32:
< 	.word	10
< 	.word	4
< 	.word	Int_dispTab
< 	.word	43
< 	.word	-1
< int_const31:
< 	.word	10
695c689
< 	.word	47
---
> 	.word	23
697,698c691,692
< int_const30:
< 	.word	10
---
> int_const12:
> 	.word	5
703,704c697,698
< int_const29:
< 	.word	10
---
> int_const9:
> 	.word	5
707c701
< 	.word	27
---
> 	.word	46
709,710c703,704
< int_const28:
< 	.word	10
---
> int_const4:
> 	.word	5
713c707
< 	.word	39
---
> 	.word	24
715,716c709,710
< int_const27:
< 	.word	10
---
> int_const15:
> 	.word	5
719c713
< 	.word	35
---
> 	.word	47
721,722c715,716
< int_const26:
< 	.word	10
---
> int_const23:
> 	.word	5
725c719
< 	.word	14
---
> 	.word	48
727,730c721
< int_const25:
< 	.word	10
< 	.word	4
< 	.word	Int_dispTab
---
> int_const11:
732,734d722
< 	.word	-1
< int_const24:
< 	.word	10
737c725
< 	.word	23
---
> 	.word	27
739,740c727,728
< int_const23:
< 	.word	10
---
> int_const18:
> 	.word	5
743c731
< 	.word	48
---
> 	.word	50
746c734
< 	.word	10
---
> 	.word	5
749c737
< 	.word	31
---
> 	.word	30
751,752c739,740
< int_const21:
< 	.word	10
---
> int_const28:
> 	.word	5
755c743
< 	.word	36
---
> 	.word	31
757,758c745,746
< int_const20:
< 	.word	10
---
> int_const31:
> 	.word	5
761,763d748
< 	.word	18
< 	.word	-1
< int_const19:
764a750,752
> 	.word	-1
> int_const16:
> 	.word	5
767c755
< 	.word	37
---
> 	.word	12
769,770c757,758
< int_const18:
< 	.word	10
---
> int_const7:
> 	.word	5
773c761
< 	.word	30
---
> 	.word	56
776c764
< 	.word	10
---
> 	.word	5
779c767
< 	.word	56
---
> 	.word	35
781,782c769,770
< int_const16:
< 	.word	10
---
> int_const6:
> 	.word	5
785c773
< 	.word	61
---
> 	.word	13
787,788c775,776
< int_const15:
< 	.word	10
---
> int_const27:
> 	.word	5
791c779
< 	.word	20
---
> 	.word	36
793,794c781,782
< int_const14:
< 	.word	10
---
> int_const5:
> 	.word	5
797c785
< 	.word	46
---
> 	.word	14
799,800c787,788
< int_const13:
< 	.word	10
---
> int_const24:
> 	.word	5
803c791
< 	.word	50
---
> 	.word	37
805,806c793,794
< int_const12:
< 	.word	10
---
> int_const19:
> 	.word	5
809c797
< 	.word	24
---
> 	.word	39
811,812c799,800
< int_const11:
< 	.word	10
---
> int_const32:
> 	.word	5
815c803
< 	.word	2
---
> 	.word	18
817,818c805,806
< int_const10:
< 	.word	10
---
> int_const0:
> 	.word	5
821c809
< 	.word	7
---
> 	.word	0
823,824c811,812
< int_const9:
< 	.word	10
---
> int_const1:
> 	.word	5
827c815
< 	.word	9
---
> 	.word	1
829,830c817,818
< int_const8:
< 	.word	10
---
> int_const3:
> 	.word	5
833c821
< 	.word	8
---
> 	.word	2
835,836c823,824
< int_const7:
< 	.word	10
---
> int_const2:
> 	.word	5
841,842c829,830
< int_const6:
< 	.word	10
---
> int_const14:
> 	.word	5
847,848c835,842
< int_const5:
< 	.word	10
---
> int_const29:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	5
> 	.word	-1
> int_const8:
> 	.word	5
853,854c847,848
< int_const4:
< 	.word	10
---
> int_const10:
> 	.word	5
857c851
< 	.word	10
---
> 	.word	7
859,860c853,854
< int_const3:
< 	.word	10
---
> int_const21:
> 	.word	5
863c857
< 	.word	12
---
> 	.word	8
865,866c859,860
< int_const2:
< 	.word	10
---
> int_const20:
> 	.word	5
869c863
< 	.word	13
---
> 	.word	9
871,872c865,866
< int_const1:
< 	.word	10
---
> int_const26:
> 	.word	5
875c869
< 	.word	1
---
> 	.word	61
877,878c871,872
< int_const0:
< 	.word	10
---
> int_const13:
> 	.word	5
881c875,881
< 	.word	0
---
> 	.word	20
> 	.word	-1
> int_const30:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	43
884c884
< 	.word	11
---
> 	.word	4
890c890
< 	.word	11
---
> 	.word	4
913a914,923
> 	.word	LambdaList_protObj
> 	.word	LambdaList_init
> 	.word	LambdaListNE_protObj
> 	.word	LambdaListNE_init
> 	.word	LambdaListRef_protObj
> 	.word	LambdaListRef_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
919a930,933
> 	.word	Term_protObj
> 	.word	Term_init
> 	.word	Main_protObj
> 	.word	Main_init
924,925d937
< 	.word	Lambda_protObj
< 	.word	Lambda_init
928,935c940,941
< 	.word	Term_protObj
< 	.word	Term_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
---
> 	.word	Lambda_protObj
> 	.word	Lambda_init
938,1116c944
< 	.word	LambdaList_protObj
< 	.word	LambdaList_init
< 	.word	LambdaListNE_protObj
< 	.word	LambdaListNE_init
< 	.word	LambdaListRef_protObj
< 	.word	LambdaListRef_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< LambdaListRef_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	LambdaListRef.isNil
< 	.word	LambdaListRef.headE
< 	.word	LambdaListRef.headC
< 	.word	LambdaListRef.headN
< 	.word	LambdaListRef.reset
< 	.word	LambdaListRef.add
< 	.word	LambdaListRef.removeHead
< LambdaList_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	LambdaList.isNil
< 	.word	LambdaList.headE
< 	.word	LambdaList.headC
< 	.word	LambdaList.headN
< 	.word	LambdaList.tail
< 	.word	LambdaList.add
< LambdaListNE_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	LambdaListNE.isNil
< 	.word	LambdaListNE.headE
< 	.word	LambdaListNE.headC
< 	.word	LambdaListNE.headN
< 	.word	LambdaListNE.tail
< 	.word	LambdaList.add
< 	.word	LambdaListNE.init
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Term_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Term.var
< 	.word	Term.lam
< 	.word	Term.app
< 	.word	Term.i
< 	.word	Term.k
< 	.word	Term.s
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Term.var
< 	.word	Term.lam
< 	.word	Term.app
< 	.word	Term.i
< 	.word	Term.k
< 	.word	Term.s
< 	.word	Main.beta_reduce
< 	.word	Main.eval_class
< 	.word	Main.closure_class
< 	.word	Main.gen_code
< 	.word	Main.main
< Expr_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Expr.print_self
< 	.word	Expr.beta
< 	.word	Expr.substitute
< 	.word	Expr.gen_code
< App_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	App.print_self
< 	.word	App.beta
< 	.word	App.substitute
< 	.word	App.gen_code
< 	.word	App.init
< Lambda_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Lambda.print_self
< 	.word	Lambda.beta
< 	.word	Lambda.substitute
< 	.word	Lambda.gen_code
< 	.word	Lambda.init
< 	.word	Lambda.apply
< 	.word	Lambda.gen_closure_code
< Variable_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Variable.print_self
< 	.word	Variable.beta
< 	.word	Variable.substitute
< 	.word	Variable.gen_code
< 	.word	Variable.init
< VarList_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	VarList.isNil
< 	.word	VarList.head
< 	.word	VarList.tail
< 	.word	VarList.add
< 	.word	VarList.print
< VarListNE_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	VarListNE.isNil
< 	.word	VarListNE.head
< 	.word	VarListNE.tail
< 	.word	VarList.add
< 	.word	VarListNE.print
< 	.word	VarListNE.init
< 	.word	-1
---
> Object_dispTabLambdaList_dispTabLambdaListNE_dispTabLambdaListRef_dispTabBool_dispTabInt_dispTabIO_dispTabVarList_dispTabVarListNE_dispTabTerm_dispTabMain_dispTabExpr_dispTabVariable_dispTabApp_dispTabLambda_dispTabString_dispTab	.word	-1
1122,1128d949
< LambdaListRef_protObj:
< 	.word	15
< 	.word	5
< 	.word	LambdaListRef_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
1130c951
< 	.word	13
---
> 	.word	1
1135c956
< 	.word	14
---
> 	.word	2
1143,1144c964,965
< String_protObj:
< 	.word	12
---
> LambdaListRef_protObj:
> 	.word	3
1146c967
< 	.word	String_dispTab
---
> 	.word	LambdaListRef_dispTab
1151c972
< 	.word	11
---
> 	.word	4
1157c978
< 	.word	10
---
> 	.word	5
1163c984
< 	.word	1
---
> 	.word	6
1167c988,993
< Term_protObj:
---
> VarList_protObj:
> 	.word	7
> 	.word	3
> 	.word	VarList_dispTab
> 	.word	-1
> VarListNE_protObj:
1168a995,1001
> 	.word	5
> 	.word	VarListNE_dispTab
> 	.word	0
> 	.word	0
> 	.word	-1
> Term_protObj:
> 	.word	9
1173c1006
< 	.word	9
---
> 	.word	10
1178c1011
< 	.word	4
---
> 	.word	11
1181a1015,1020
> Variable_protObj:
> 	.word	12
> 	.word	4
> 	.word	Variable_dispTab
> 	.word	str_const72
> 	.word	-1
1183c1022
< 	.word	7
---
> 	.word	13
1190c1029
< 	.word	6
---
> 	.word	14
1196,1208c1035,1036
< Variable_protObj:
< 	.word	5
< 	.word	4
< 	.word	Variable_dispTab
< 	.word	str_const72
< 	.word	-1
< VarList_protObj:
< 	.word	2
< 	.word	3
< 	.word	VarList_dispTab
< 	.word	-1
< VarListNE_protObj:
< 	.word	3
---
> String_protObj:
> 	.word	15
1210,1211c1038,1039
< 	.word	VarListNE_dispTab
< 	.word	0
---
> 	.word	String_dispTab
> 	.word	int_const0
1235c1063
< LambdaListRef_init:
---
> LambdaList_init:
1243,1244d1070
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
1251c1077
< LambdaList_init:
---
> LambdaListNE_init:
1258c1084
< 	jal	Object_init
---
> 	jal	LambdaList_init
1265c1091
< LambdaListNE_init:
---
> LambdaListRef_init:
1272c1098,1099
< 	jal	LambdaList_init
---
> 	jal	Object_init
> 	la	$a0 int_const0
1279c1106
< String_init:
---
> Bool_init:
1293c1120
< Bool_init:
---
> Int_init:
1307c1134
< Int_init:
---
> IO_init:
1321c1148
< IO_init:
---
> VarList_init:
1328c1155
< 	jal	Object_init
---
> 	jal	IO_init
1335c1162
< Term_init:
---
> VarListNE_init:
1342c1169
< 	jal	IO_init
---
> 	jal	VarList_init
1349c1176
< Main_init:
---
> Term_init:
1356c1183
< 	jal	Term_init
---
> 	jal	IO_init
1363c1190
< Expr_init:
---
> Main_init:
1370c1197
< 	jal	IO_init
---
> 	jal	Term_init
1377c1204
< App_init:
---
> Expr_init:
1384c1211
< 	jal	Expr_init
---
> 	jal	IO_init
1391c1218
< Lambda_init:
---
> Variable_init:
1405c1232
< Variable_init:
---
> App_init:
1419c1246
< VarList_init:
---
> Lambda_init:
1426c1253
< 	jal	IO_init
---
> 	jal	Expr_init
1433c1260
< VarListNE_init:
---
> String_init:
1440c1267
< 	jal	VarList_init
---
> 	jal	Object_init
1447c1274
< LambdaListRef.isNil:
---
> LambdaList.isNil:
1454,1462c1281
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	la	$a0 bool_const1
1468c1287
< LambdaListRef.headE:
---
> LambdaList.headE:
1475,1483c1294
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
---
> 	move	$a0 null
1489c1300
< LambdaListRef.headC:
---
> LambdaList.headC:
1496,1504c1307
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
---
> 	move	$a0 null
1510c1313
< LambdaListRef.headN:
---
> LambdaList.headN:
1517,1525c1320
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 24($t1)
< 	jalr		$t1
---
> 	move	$a0 null
1531c1326
< LambdaListRef.reset:
---
> LambdaList.tail:
1538,1544c1333
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
< 	la	$a0 LambdaList_protObj
< 	jal	Object.copy
< 	jal	LambdaList_init
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
1550,1554c1339,1343
< LambdaListRef.add:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> LambdaList.add:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
1563c1352,1355
< 	lw	$a0 12($s0)
---
> 	lw	$a0 12($fp)
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	move	$a0 $s0
1566,1568c1358,1359
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
1571c1362
< label4:
---
> label0:
1573,1593c1364,1368
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	sw	$a0 16($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
1596c1371
< LambdaListRef.removeHead:
---
> LambdaListNE.isNil:
1603,1613c1378
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	la	$a0 bool_const0
1619c1384
< LambdaList.isNil:
---
> LambdaListNE.headE:
1626c1391
< 	la	$a0 bool_const1
---
> 	move	$a0 null
1632c1397
< LambdaList.headE:
---
> LambdaListNE.headC:
1639,1641c1404,1458
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListNE.headN:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListNE.tail:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListNE.init:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 28
> 	jr	$ra	
> LambdaListRef.isNil:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
1644c1461
< label6:
---
> label1:
1646,1650c1463,1464
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 VarList_protObj
< 	jal	Object.copy
< 	jal	VarList_init
---
> 	lw	$t1 12($t1)
> 	jalr	$t1
1656c1470
< LambdaList.headC:
---
> LambdaListRef.headE:
1663,1665c1477,1479
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
1668c1482
< label7:
---
> label2:
1670,1674c1484,1485
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 Lambda_protObj
< 	jal	Object.copy
< 	jal	Lambda_init
---
> 	lw	$t1 16($t1)
> 	jalr	$t1
1680c1491
< LambdaList.headN:
---
> LambdaListRef.headC:
1687,1689c1498,1500
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
1692c1503
< label8:
---
> label3:
1694,1696c1505,1506
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
---
> 	lw	$t1 20($t1)
> 	jalr	$t1
1702c1512
< LambdaList.tail:
---
> LambdaListRef.headN:
1709,1711c1519,1521
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label4
> 	la	$a0 str_const0
1714c1524
< label9:
---
> label4:
1716,1720c1526,1527
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 LambdaList_protObj
< 	jal	Object.copy
< 	jal	LambdaList_init
---
> 	lw	$t1 24($t1)
> 	jalr	$t1
1726c1533,1611
< LambdaList.add:
---
> LambdaListRef.reset:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListRef.add:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 20
> 	jr	$ra	
> LambdaListRef.removeHead:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.isNil:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	la	$a0 bool_const1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.head:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.tail:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.add:
1733,1738d1617
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
1745,1749c1624,1625
< 	la	$a0 LambdaListNE_protObj
< 	jal	Object.copy
< 	jal	LambdaListNE_init
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label5
> 	la	$a0 str_const0
1752c1628
< label10:
---
> label5:
1754,1755c1630,1631
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	lw	$t1 48($t1)
> 	jalr	$t1
1759c1635
< 	addiu	$sp $sp 24
---
> 	addiu	$sp $sp 16
1761c1637
< LambdaListNE.isNil:
---
> VarList.print:
1768c1644,1655
< 	la	$a0 bool_const0
---
> 	la	$a0 str_const1
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	move	$a0 $s0
> 	bne	$a0 $zero label6
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label6:
> 	lw	$t1 8($a0)
> 	lw	$t1 12($t1)
> 	jalr	$t1
1774c1661
< LambdaListNE.headE:
---
> VarListNE.isNil:
1781c1668
< 	lw	$a0 20($s0)
---
> 	la	$a0 bool_const0
1787c1674
< LambdaListNE.headC:
---
> VarListNE.head:
1794c1681
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
1800c1687
< LambdaListNE.headN:
---
> VarListNE.tail:
1807c1694
< 	lw	$a0 16($s0)
---
> 	move	$a0 null
1813c1700
< LambdaListNE.tail:
---
> VarListNE.init:
1820c1707
< 	lw	$a0 24($s0)
---
> 	move	$a0 null
1824c1711
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
1826c1713
< LambdaListNE.init:
---
> VarListNE.print:
1833,1841c1720
< 	lw	$a0 24($fp)
< 	sw	$a0 20($s0)
< 	lw	$a0 20($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 16($fp)
< 	sw	$a0 16($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 24($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
1845c1724
< 	addiu	$sp $sp 28
---
> 	addiu	$sp $sp 12
1854,1857c1733
< 	la	$a0 Variable_protObj
< 	jal	Object.copy
< 	jal	Variable_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
1861,1864c1737,1739
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label7
> 	la	$a0 str_const0
1867c1742
< label11:
---
> label7:
1870,1871c1745
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1884,1887c1758
< 	la	$a0 Lambda_protObj
< 	jal	Object.copy
< 	jal	Lambda_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
1894,1897c1765,1767
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label8
> 	la	$a0 str_const0
1900c1770
< label12:
---
> label8:
1903,1904c1773
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1917,1920c1786
< 	la	$a0 App_protObj
< 	jal	Object.copy
< 	jal	App_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
1927,1930c1793,1795
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label13
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label9
> 	la	$a0 str_const0
1933c1798
< label13:
---
> label9:
1936,1937c1801
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1954,1955c1818,1819
< 	bne	$a0 $zero label14
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label10
> 	la	$a0 str_const0
1958c1822
< label14:
---
> label10:
1961,1963c1825,1828
< 	jalr		$t1
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
1965c1830,1831
< 	sw	$s1 0($sp)
---
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
1968,1970c1834,1835
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label11
> 	la	$a0 str_const0
1973c1838
< label15:
---
> label11:
1976,1977c1841
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1994,1995c1858,1859
< 	bne	$a0 $zero label16
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label12
> 	la	$a0 str_const0
1998c1862
< label16:
---
> label12:
2001,2002c1865,1866
< 	jalr		$t1
< 	move	$s1 $a0
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
2007,2009c1871,1872
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label17
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label13
> 	la	$a0 str_const0
2012c1875
< label17:
---
> label13:
2015,2018c1878,1881
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	sw	$s1 0($sp)
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2020c1883,1884
< 	sw	$s2 0($sp)
---
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
2022c1886,1887
< 	sw	$s1 0($sp)
---
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2025,2028c1890,1891
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label18
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label14
> 	la	$a0 str_const0
2031c1894
< label18:
---
> label14:
2034,2036c1897
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
2040,2043c1901,1902
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label19
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label15
> 	la	$a0 str_const0
2046c1905
< label19:
---
> label15:
2049,2051c1908
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
2068,2069c1925,1926
< 	bne	$a0 $zero label20
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label16
> 	la	$a0 str_const0
2072c1929
< label20:
---
> label16:
2075,2076c1932,1933
< 	jalr		$t1
< 	move	$s1 $a0
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
2081,2083c1938,1939
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label21
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label17
> 	la	$a0 str_const0
2086c1942
< label21:
---
> label17:
2089,2091c1945,1946
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
2096,2099c1951,1952
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label22
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label18
> 	la	$a0 str_const0
2102c1955
< label22:
---
> label18:
2105,2109c1958,1961
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	sw	$s1 0($sp)
---
> 	jalr	$t1
> 	sw	$a0 8($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2111c1963,1964
< 	sw	$s2 0($sp)
---
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
2113c1966,1967
< 	sw	$s3 0($sp)
---
> 	lw	$a0 8($fp)
> 	sw	$a0 0($sp)
2115c1969,1970
< 	sw	$s1 0($sp)
---
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2117c1972,1973
< 	sw	$s3 0($sp)
---
> 	lw	$a0 8($fp)
> 	sw	$a0 0($sp)
2120,2124c1976,1977
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label23
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label19
> 	la	$a0 str_const0
2127c1980
< label23:
---
> label19:
2130,2133c1983
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2136c1986,1987
< 	sw	$s2 0($sp)
---
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
2138c1989,1990
< 	sw	$s3 0($sp)
---
> 	lw	$a0 8($fp)
> 	sw	$a0 0($sp)
2141,2145c1993,1994
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label24
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label20
> 	la	$a0 str_const0
2148c1997
< label24:
---
> label20:
2151,2154c2000
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2158,2162c2004,2005
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label25
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label21
> 	la	$a0 str_const0
2165c2008
< label25:
---
> label21:
2168,2171c2011
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2175,2179c2015,2016
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label26
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label22
> 	la	$a0 str_const0
2182c2019
< label26:
---
> label22:
2185,2188c2022
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2192,2196c2026,2027
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label27
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label23
> 	la	$a0 str_const0
2199c2030
< label27:
---
> label23:
2202,2205c2033
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2209,2213c2037,2038
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label28
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label24
> 	la	$a0 str_const0
2216c2041
< label28:
---
> label24:
2219,2222c2044
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2229,2232c2051,2054
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
---
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
2235,2348c2057,2061
< 	la	$a0 str_const38
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label29
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label29:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 24($fp)
< 	bne	$a0 $zero label30
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label30:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$s1 bool_const0
< 	move	$s2 $zero
< label31:
< 	lw	$t1 12($s1)
< 	la	$a0 bool_const1
< 	beqz	$t1 label33
< 	la	$a0 bool_const0
< label33:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label32
< 	lw	$a0 24($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label34
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label34:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s2 $a0
< 	move	$s3 $s2
< 	lw	$t2 24($fp)
< 	move	$t1 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label37
< 	la	$a1 bool_const0
< 	jal	equality_test
< label37:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label35
< 	la	$s1 bool_const1
< 	move	$a0 $s1
< 	b	label36
< label35:
< 	sw	$s2 24($fp)
< 	la	$a0 str_const39
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label38
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label38:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$a0 24($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label39
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label39:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label36:
< 	b	label31
< label32:
< 	move	$a0 $zero
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label40
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label40:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$a0 24($fp)
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 28
---
> 	move	$a0 null
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 24
2357,2392c2070
< 	la	$a0 str_const40
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label41
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label41:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const41
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label42
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label42:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const23
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label43
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label43:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2405,2500c2083
< 	la	$a0 str_const42
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label44
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label44:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const43
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label45
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label45:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const44
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label46
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label46:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const45
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label47
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label47:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const46
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label48
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label48:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const47
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label49
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label49:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const48
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label50
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label50:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const23
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label51
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label51:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2513,2542c2096,2097
< 	la	$a0 LambdaListRef_protObj
< 	jal	Object.copy
< 	jal	LambdaListRef_init
< 	bne	$a0 $zero label52
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label52:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 str_const49
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label53
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label53:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$a0 28($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label54
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label25
> 	la	$a0 str_const0
2545c2100
< label54:
---
> label25:
2548,2779c2103,2105
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const50
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label55
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label55:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const51
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label56
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label56:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label57
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label57:
< 	lw	$t1 8($a0)
< 	lw	$t1 56($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label58
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label58:
< 	lw	$t1 8($a0)
< 	lw	$t1 60($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const52
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label59
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label59:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const53
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label60
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label60:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 VarList_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	VarList_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 28($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label61
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label61:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const54
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label62
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label62:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< label63:
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label66
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label66:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label65
< 	la	$a0 bool_const0
< label65:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label64
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label67
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label67:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label68
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label68:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label69
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label69:
< 	lw	$t1 8($a0)
< 	lw	$t1 24($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label70
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label70:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	sw	$s4 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label71
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label71:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label63
< label64:
< 	move	$a0 $zero
< 	la	$a0 str_const50
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label72
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label72:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	move	$a0 null
2792,3483c2118
< 	move	$a0 $s0
< 	bne	$a0 $zero label73
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label73:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label74
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label74:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label75
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label75:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label76
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label76:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label77
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label77:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label78
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label78:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label79
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label79:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label80
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label80:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label81
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label81:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label82
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label82:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label83
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label83:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label84
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label84:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label85
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label85:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label86
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label86:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label87
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label87:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label88
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label88:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label89
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label89:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label90
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label90:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label91
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label91:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label92
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label92:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label93
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label93:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label94
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label94:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label95
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label95:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label96
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label96:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label97
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label97:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label98
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label98:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label99
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label99:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label100
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label100:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label101
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label101:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label102
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label102:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label103
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label103:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label104
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label104:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label105
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label105:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label106
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label106:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label107
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label107:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label108
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label108:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label109
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label109:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label110
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label110:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label111
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label111:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label112
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label112:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label113
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label113:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label114
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label114:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label115
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label115:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label116
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label116:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label117
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label117:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label118
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label118:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label119
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label119:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label120
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label120:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label121
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label121:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label122
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label122:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label123
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label123:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label124
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label124:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label125
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label125:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label126
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label126:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label127
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label127:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label128
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label128:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label129
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label129:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label130
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label130:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label131
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label131:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label132
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label132:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label133
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label133:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label134
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label134:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label135
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label135:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label136
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label136:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label137
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label137:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
---
> 	move	$a0 null
3496,3517c2131
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label138
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label138:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label139
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label139:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3530,3551c2144
< 	la	$a0 str_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label140
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label140:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label141
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label141:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3564,3585c2157
< 	la	$a0 str_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label142
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label142:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label143
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label143:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3598,3619c2170
< 	la	$a0 str_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label144
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label144:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label145
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label145:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3625c2176
< App.init:
---
> Variable.init:
3632,3636c2183
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
3640c2187
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 16
3642c2189
< App.print_self:
---
> Variable.print_self:
3649,3692c2196
< 	la	$a0 str_const24
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label146
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label146:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label147
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label147:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const25
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label148
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label148:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label149
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label149:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const26
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
3695,3696c2199,2200
< 	bne	$a0 $zero label150
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label26
> 	la	$a0 str_const0
3699c2203
< label150:
---
> label26:
3702,3703c2206
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	jalr	$t1
3709,3867c2212
< App.beta:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label152
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_case_abort2
< label152:
< 	lw	$t2 0($a0)
< 	blt	$t2 6 label153
< 	bgt	$t2 6 label153
< 	move	$s1 $a0
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label154
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label154:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label151
< label153:
< 	blt	$t2 4 label155
< 	bgt	$t2 7 label155
< 	move	$s1 $a0
< 	lw	$a0 12($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label156
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label156:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 App_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	App_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label157
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label157:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label151
< label155:
< 	jal	_case_abort
< label151:
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< App.substitute:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 28($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 24($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label158
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label158:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	lw	$a0 28($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 24($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label159
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label159:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 App_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	App_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label160
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label160:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 32
< 	jr	$ra	
< App.gen_code:
---
> Variable.beta:
3874,3990d2218
< 	la	$a0 str_const27
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label161
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label161:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label162
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label162:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	la	$a0 str_const28
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label163
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label163:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const29
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label164
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label164:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label165
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label165:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	la	$a0 str_const30
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label166
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label166:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const31
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label167
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label167:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const32
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label168
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label168:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const33
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label169
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label169:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const34
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
3992,3999d2219
< 	bne	$a0 $zero label170
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label170:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
4003c2223
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 12
4005c2225
< Lambda.init:
---
> Variable.substitute:
4012,4016d2231
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
4022,4026c2237,2241
< Lambda.print_self:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> Variable.gen_code:
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
4029,4075c2244,2250
< 	la	$a0 str_const10
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label171
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label171:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label172
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label172:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label173
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label173:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label174
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label174:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$a0 20($fp)
> 	sw	$a0 0($fp)
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 24
4077c2252
< Lambda.beta:
---
> App.init:
4084c2259
< 	move	$a0 $s0
---
> 	move	$a0 null
4088c2263
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
4090c2265
< Lambda.apply:
---
> App.print_self:
4097,4111c2272
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label175
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label175:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	move	$a0 null
4115,4181c2276
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Lambda.substitute:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 24($fp)
< 	lw	$t2 12($s0)
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label178
< 	la	$a1 bool_const0
< 	jal	equality_test
< label178:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label176
< 	move	$a0 $s0
< 	b	label177
< label176:
< 	lw	$a0 24($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label179
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label179:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 Lambda_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Lambda_init
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label180
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label180:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label177:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 28
---
> 	addiu	$sp $sp 12
4183c2278
< Lambda.gen_code:
---
> App.beta:
4190,4221c2285,2286
< 	la	$a0 str_const12
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label181
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label181:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	bne	$a0 $zero label182
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label182:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label183
< 	la	$a0 str_const1
---
> 	bne	null $zero label28
> 	la	$a0 str_const0
4223,4229c2288,2294
< 	jal	_dispatch_abort
< label183:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const13
< 	sw	$a0 0($sp)
---
> 	jal	_case_abort2
> label28:
> 	lw	$t2 0(null)
> 	blt	$t2 14 label29
> 	bgt	$t2 14 label29
> 	sw	$a0 0($fp)
> 	sw	null 0($sp)
4231,4233c2296,2298
< 	move	$a0 $s0
< 	bne	$a0 $zero label184
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label30
> 	la	$a0 str_const0
4236c2301
< label184:
---
> label30:
4238,4242c2303,2312
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	bne	$a0 $zero label187
< 	la	$a0 str_const1
---
> 	lw	$t1 48($t1)
> 	jalr	$t1
> 	b	label27
> label29:
> 	blt	$t2 11 label31
> 	bgt	$t2 14 label31
> 	sw	$a0 0($fp)
> 	move	$a0 null
> 	bne	$a0 $zero label32
> 	la	$a0 str_const0
4245c2315
< label187:
---
> label32:
4247,4251c2317,2321
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label185
< 	la	$a0 str_const14
---
> 	lw	$t1 32($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
4254,4266c2324
< 	move	$a0 $s0
< 	bne	$a0 $zero label188
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label188:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	b	label186
< label185:
< 	la	$a0 str_const15
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
4268,4270c2326,2328
< 	move	$a0 $s0
< 	bne	$a0 $zero label189
< 	la	$a0 str_const1
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label33
> 	la	$a0 str_const0
4273c2331
< label189:
---
> label33:
4275,4278c2333,2338
< 	lw	$t1 12($t1)
< 	jalr		$t1
< label186:
< 	move	$a0 $s0
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label27
> label31:
> 	jal	_case_abort
> label27:
4282c2342
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 12
4284,4288c2344,2348
< Lambda.gen_closure_code:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> App.substitute:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
4291,4375c2351
< 	la	$a0 str_const16
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label190
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label190:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label191
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label191:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const17
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label192
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label192:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const18
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label193
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label193:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const19
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label194
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label194:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label195
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label195:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const20
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label196
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label196:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const21
---
> 	lw	$a0 28($fp)
4378,4387c2354
< 	move	$a0 $s0
< 	bne	$a0 $zero label197
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label197:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
---
> 	lw	$a0 24($fp)
4390,4392c2357,2359
< 	lw	$a0 16($fp)
< 	bne	$a0 $zero label198
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label34
> 	la	$a0 str_const0
4395c2362
< label198:
---
> label34:
4397,4401c2364,2367
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	lw	$a0 28($fp)
4404,4413c2370
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label199
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label199:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	la	$a0 str_const22
---
> 	lw	$a0 24($fp)
4416,4418c2373,2375
< 	move	$a0 $s0
< 	bne	$a0 $zero label200
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label35
> 	la	$a0 str_const0
4421c2378
< label200:
---
> label35:
4423,4425c2380,2384
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const23
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	sw	$a0 8($fp)
> 	lw	$a0 0($fp)
4428,4464c2387
< 	move	$a0 $s0
< 	bne	$a0 $zero label201
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label201:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< Variable.init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($fp)
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Variable.print_self:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
---
> 	lw	$a0 4($fp)
4467,4469c2390,2392
< 	move	$a0 $s0
< 	bne	$a0 $zero label202
< 	la	$a0 str_const1
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label36
> 	la	$a0 str_const0
4472c2395
< label202:
---
> label36:
4474,4479c2397,2402
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 32
4481c2404
< Variable.beta:
---
> App.gen_code:
4488c2411
< 	move	$a0 $s0
---
> 	move	$a0 null
4492,4686c2415
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Variable.substitute:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 20($fp)
< 	move	$t2 $s0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label205
< 	la	$a1 bool_const0
< 	jal	equality_test
< label205:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label203
< 	lw	$a0 16($fp)
< 	b	label204
< label203:
< 	move	$a0 $s0
< label204:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< Variable.gen_code:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 24($fp)
< label206:
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label210
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label210:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label208
< 	la	$a0 bool_const0
< 	b	label209
< label208:
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label213
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label213:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$t2 $s0
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label212
< 	la	$a1 bool_const0
< 	jal	equality_test
< label212:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label211
< 	la	$a0 bool_const0
< label211:
< label209:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label207
< 	la	$a0 str_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label214
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label214:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label215
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label215:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s1 $a0
< 	b	label206
< label207:
< 	move	$a0 $zero
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label218
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label218:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label216
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label219
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label219:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label220
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label220:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label221
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label221:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label222
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label222:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	b	label217
< label216:
< 	la	$a0 str_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label223
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label223:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< label217:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 28
---
> 	addiu	$sp $sp 20
4688c2417
< VarList.isNil:
---
> Lambda.init:
4695c2424
< 	la	$a0 bool_const1
---
> 	move	$a0 null
4699c2428
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
4701c2430
< VarList.head:
---
> Lambda.print_self:
4708,4719c2437
< 	move	$a0 $s0
< 	bne	$a0 $zero label224
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label224:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 Variable_protObj
< 	jal	Object.copy
< 	jal	Variable_init
---
> 	move	$a0 null
4725c2443
< VarList.tail:
---
> Lambda.beta:
4733,4743d2450
< 	bne	$a0 $zero label225
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label225:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 VarList_protObj
< 	jal	Object.copy
< 	jal	VarList_init
4749c2456
< VarList.add:
---
> Lambda.apply:
4756,4757c2463
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
4759c2465
< 	move	$a0 $s0
---
> 	lw	$a0 12($fp)
4762,4784c2468,2469
< 	la	$a0 VarListNE_protObj
< 	jal	Object.copy
< 	jal	VarListNE_init
< 	bne	$a0 $zero label226
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label226:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< VarList.print:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
---
> 	move	$a0 null
> 	bne	$a0 $zero label37
4786,4790d2470
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label227
< 	la	$a0 str_const1
4793c2473
< label227:
---
> label37:
4795,4822c2475,2476
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< VarListNE.isNil:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 bool_const0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< VarListNE.head:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
4826c2480
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 16
4828,4832c2482,2486
< VarListNE.tail:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> Lambda.substitute:
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
4835,4839c2489,2492
< 	lw	$a0 16($s0)
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 28
4841c2494
< VarListNE.init:
---
> Lambda.gen_code:
4848,4852c2501
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
4858c2507
< VarListNE.print:
---
> Lambda.gen_closure_code:
4865,4895c2514
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label228
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label228:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label229
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label229:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label230
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label230:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
4899c2518
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 24
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/lam.cl
+ spim_outname=lam.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/lam.cl
+ spim_errname=lam.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.spim.out
6,53c6,43
< \x.x
< \x.\y.x
< \x.\y.\z.((((x)@(z)))@(((y)@(z))))
< beta-reduce: ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x)) =>
< ((((\y.\z.((((\x.\y.x)@(z)))@(((y)@(z)))))@(\x.x)))@(\x.x)) =>
< ((\z.((((\x.\y.x)@(z)))@(((\x.x)@(z)))))@(\x.x)) =>
< ((((\x.\y.x)@(\x.x)))@(((\x.x)@(\x.x)))) =>
< ((\y.\x.x)@(((\x.x)@(\x.x)))) =>
< \x.x
< beta-reduce: ((((\x.\y.x)@(\x.x)))@(\x.x)) =>
< ((\y.\x.x)@(\x.x)) =>
< \x.x
< Generating code for ((\x.x)@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
---
> The following symbols are undefined:
> LambdaListNE_protObj
> heap_start
> Term_protObj
> VarList_protObj
> LambdaList_protObj
> LambdaList_init
> Lambda_protObj
> Int_protObj
> App_protObj
> VarListNE_protObj
> Bool_dispTab
> Main.main
> LambdaListRef_init
> VarListNE_init
> Expr_protObj
> Bool_init
> Variable_init
> String_protObj
> IO_init
> App_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Term_init
> Expr_init
> LambdaListRef_protObj
> LambdaListNE_init
> Main_init
> Bool_protObj
> Variable_protObj
> Lambda_init
> Object_protObj
> VarList_init
55,540c45
< ------------------cut here------------------
< Generating code for ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< get_x();}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure4).init(self));}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< ((new Closure5).init(self));}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((((((((((((((\x.x)@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.x)))@(\x.\y.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure4).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure6).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure7).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure8).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< get_x();}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< get_x();}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< ((new Closure14).init(self));}};
< };
< class Closure14 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 14\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure15).init(self));}};
< };
< class Closure15 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 15\n");
<       x <- y;
< ((new Closure16).init(self));}};
< };
< class Closure16 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 16\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure17).init(self));}};
< };
< class Closure17 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 17\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((\x.x)@(((\x.\y.x)@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))))@(((\x.\y.x)@(((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z))))))))))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure1).init(new Closure)),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure3).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure4).init(new Closure)),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< ((new Closure7).init(self));}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure8).init(self));}};
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< COOL program successfully executed
< Stats -- #instructions : 106539
<          #reads : 28068  #writes 18514  #branches 18847  #other 41110
---
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.spim.out.filtered
6,53c6,43
< \x.x
< \x.\y.x
< \x.\y.\z.((((x)@(z)))@(((y)@(z))))
< beta-reduce: ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x)) =>
< ((((\y.\z.((((\x.\y.x)@(z)))@(((y)@(z)))))@(\x.x)))@(\x.x)) =>
< ((\z.((((\x.\y.x)@(z)))@(((\x.x)@(z)))))@(\x.x)) =>
< ((((\x.\y.x)@(\x.x)))@(((\x.x)@(\x.x)))) =>
< ((\y.\x.x)@(((\x.x)@(\x.x)))) =>
< \x.x
< beta-reduce: ((((\x.\y.x)@(\x.x)))@(\x.x)) =>
< ((\y.\x.x)@(\x.x)) =>
< \x.x
< Generating code for ((\x.x)@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
---
> The following symbols are undefined:
> LambdaListNE_protObj
> heap_start
> Term_protObj
> VarList_protObj
> LambdaList_protObj
> LambdaList_init
> Lambda_protObj
> Int_protObj
> App_protObj
> VarListNE_protObj
> Bool_dispTab
> Main.main
> LambdaListRef_init
> VarListNE_init
> Expr_protObj
> Bool_init
> Variable_init
> String_protObj
> IO_init
> App_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Term_init
> Expr_init
> LambdaListRef_protObj
> LambdaListNE_init
> Main_init
> Bool_protObj
> Variable_protObj
> Lambda_init
> Object_protObj
> VarList_init
55,538c45
< ------------------cut here------------------
< Generating code for ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< get_x();}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure4).init(self));}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< ((new Closure5).init(self));}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((((((((((((((\x.x)@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.x)))@(\x.\y.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure4).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure6).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure7).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure8).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< get_x();}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< get_x();}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< ((new Closure14).init(self));}};
< };
< class Closure14 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 14\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure15).init(self));}};
< };
< class Closure15 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 15\n");
<       x <- y;
< ((new Closure16).init(self));}};
< };
< class Closure16 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 16\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure17).init(self));}};
< };
< class Closure17 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 17\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((\x.x)@(((\x.\y.x)@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))))@(((\x.\y.x)@(((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z))))))))))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure1).init(new Closure)),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure3).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure4).init(new Closure)),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< ((new Closure7).init(self));}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure8).init(self));}};
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< COOL program successfully executed
---
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 944 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/lam.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ outname=lam-gc.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ errname=lam-gc.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.out /home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.out /home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.out
13c13
< 	.word	10
---
> 	.word	5
15c15
< 	.word	11
---
> 	.word	4
17c17
< 	.word	12
---
> 	.word	15
29c29
< 	.word	12
---
> 	.word	15
36,38c36,38
< str_const71:
< 	.word	12
< 	.word	8
---
> str_const69:
> 	.word	15
> 	.word	5
41c41
< 	.ascii	"LambdaListRef"
---
> 	.ascii	"App"
45,47c45,47
< str_const70:
< 	.word	12
< 	.word	8
---
> str_const24:
> 	.word	15
> 	.word	5
50c50
< 	.ascii	"LambdaListNE"
---
> 	.ascii	"(("
54,56c54,56
< str_const69:
< 	.word	12
< 	.word	7
---
> str_const53:
> 	.word	15
> 	.word	11
59c59
< 	.ascii	"LambdaList"
---
> 	.ascii	"  main() : EvalObject {\n"
63,65c63,65
< str_const68:
< 	.word	12
< 	.word	6
---
> str_const21:
> 	.word	15
> 	.word	8
68c68
< 	.ascii	"String"
---
> 	.ascii	"      x <- y;\n"
72,74c72,74
< str_const67:
< 	.word	12
< 	.word	6
---
> str_const14:
> 	.word	15
> 	.word	8
77c77
< 	.ascii	"Bool"
---
> 	.ascii	"new Closure))"
81,83c81,92
< str_const66:
< 	.word	12
< 	.word	5
---
> str_const52:
> 	.word	15
> 	.word	8
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"class Main {\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const47:
> 	.word	15
> 	.word	19
86c95
< 	.ascii	"Int"
---
> 	.ascii	"  init(p : Closure) : Closure {{ parent <- p; self; }};\n"
90,92c99,101
< str_const65:
< 	.word	12
< 	.word	6
---
> str_const1:
> 	.word	15
> 	.word	5
94,95c103,104
< 	.word	int_const6
< 	.ascii	"Main"
---
> 	.word	int_const1
> 	.ascii	"\n"
99,100c108,109
< str_const64:
< 	.word	12
---
> str_const71:
> 	.word	15
103,104c112,113
< 	.word	int_const6
< 	.ascii	"Term"
---
> 	.word	int_const8
> 	.ascii	"String"
108,110c117,119
< str_const63:
< 	.word	12
< 	.word	5
---
> str_const50:
> 	.word	15
> 	.word	16
112,113c121,122
< 	.word	int_const7
< 	.ascii	"App"
---
> 	.word	int_const9
> 	.ascii	"\n------------------cut here------------------\n"
117,118c126,127
< str_const62:
< 	.word	12
---
> str_const63:
> 	.word	15
121,122c130,131
< 	.word	int_const5
< 	.ascii	"Lambda"
---
> 	.word	int_const10
> 	.ascii	"VarList"
126,128c135,137
< str_const61:
< 	.word	12
< 	.word	7
---
> str_const8:
> 	.word	15
> 	.word	11
130,131c139,140
< 	.word	int_const8
< 	.ascii	"Variable"
---
> 	.word	int_const11
> 	.ascii	"Error:  free occurrence of "
135,136c144,154
< str_const60:
< 	.word	12
---
> str_const6:
> 	.word	15
> 	.word	16
> 	.word	String_dispTab
> 	.word	int_const12
> 	.ascii	"\nError: Expr is pure virtual; can't gen_code\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const15:
> 	.word	15
139,140c157,158
< 	.word	int_const6
< 	.ascii	"Expr"
---
> 	.word	int_const8
> 	.ascii	"self))"
144,146c162,164
< str_const59:
< 	.word	12
< 	.word	7
---
> str_const43:
> 	.word	15
> 	.word	10
148,149c166,167
< 	.word	int_const9
< 	.ascii	"VarListNE"
---
> 	.word	int_const13
> 	.ascii	"  parent : Closure;\n"
153,154c171,172
< str_const58:
< 	.word	12
---
> str_const60:
> 	.word	15
157,158c175,176
< 	.word	int_const10
< 	.ascii	"VarList"
---
> 	.word	int_const14
> 	.ascii	"Bool"
162,164c180,182
< str_const57:
< 	.word	12
< 	.word	5
---
> str_const5:
> 	.word	15
> 	.word	16
166,167c184,185
< 	.word	int_const11
< 	.ascii	"IO"
---
> 	.word	int_const15
> 	.ascii	"\nError: Expr is pure virtual; can't substitute\n"
171,173c189,191
< str_const56:
< 	.word	12
< 	.word	6
---
> str_const31:
> 	.word	15
> 	.word	8
175,176c193,194
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const16
> 	.ascii	"  case x of\n"
180,182c198,200
< str_const55:
< 	.word	12
< 	.word	8
---
> str_const9:
> 	.word	15
> 	.word	6
184,185c202,203
< 	.word	int_const2
< 	.ascii	"<basic class>"
---
> 	.word	int_const10
> 	.ascii	"get_x()"
190c208
< 	.word	12
---
> 	.word	15
198,200c216,218
< str_const53:
< 	.word	12
< 	.word	11
---
> str_const41:
> 	.word	15
> 	.word	16
202,203c220,221
< 	.word	int_const12
< 	.ascii	"  main() : EvalObject {\n"
---
> 	.word	int_const9
> 	.ascii	"  eval() : EvalObject { { abort(); self; } };\n"
207,209c225,227
< str_const52:
< 	.word	12
< 	.word	8
---
> str_const19:
> 	.word	15
> 	.word	13
211,212c229,230
< 	.word	int_const2
< 	.ascii	"class Main {\n"
---
> 	.word	int_const17
> 	.ascii	"    { out_string(\"Applying closure "
216,218c234,236
< str_const51:
< 	.word	12
< 	.word	17
---
> str_const58:
> 	.word	15
> 	.word	8
220,221c238,239
< 	.word	int_const13
< 	.ascii	"(*Generated by lam.cl (Jeff Foster, March 2000)*)\n"
---
> 	.word	int_const16
> 	.ascii	"LambdaListNE"
225,227c243,245
< str_const50:
< 	.word	12
< 	.word	16
---
> str_const26:
> 	.word	15
> 	.word	5
229,230c247,248
< 	.word	int_const14
< 	.ascii	"\n------------------cut here------------------\n"
---
> 	.word	int_const3
> 	.ascii	"))"
234,236c252,254
< str_const49:
< 	.word	12
< 	.word	10
---
> str_const2:
> 	.word	15
> 	.word	5
238,239c256,257
< 	.word	int_const15
< 	.ascii	"Generating code for "
---
> 	.word	int_const1
> 	.ascii	" "
243,245c261,263
< str_const48:
< 	.word	12
< 	.word	20
---
> str_const62:
> 	.word	15
> 	.word	5
247,248c265,266
< 	.word	int_const16
< 	.ascii	"  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n"
---
> 	.word	int_const3
> 	.ascii	"IO"
252,254c270,272
< str_const47:
< 	.word	12
< 	.word	19
---
> str_const65:
> 	.word	15
> 	.word	6
256,257c274,275
< 	.word	int_const17
< 	.ascii	"  init(p : Closure) : Closure {{ parent <- p; self; }};\n"
---
> 	.word	int_const14
> 	.ascii	"Term"
261,263c279,281
< str_const46:
< 	.word	12
< 	.word	12
---
> str_const11:
> 	.word	15
> 	.word	5
265,266c283,284
< 	.word	int_const18
< 	.ascii	"  get_x() : EvalObject { x };\n"
---
> 	.word	int_const1
> 	.ascii	"."
270,272c288,290
< str_const45:
< 	.word	12
< 	.word	14
---
> str_const51:
> 	.word	15
> 	.word	17
274,275c292,293
< 	.word	int_const19
< 	.ascii	"  get_parent() : Closure { parent };\n"
---
> 	.word	int_const18
> 	.ascii	"(*Generated by lam.cl (Jeff Foster, March 2000)*)\n"
279,281c297,299
< str_const44:
< 	.word	12
< 	.word	9
---
> str_const7:
> 	.word	15
> 	.word	8
283,284c301,302
< 	.word	int_const20
< 	.ascii	"  x : EvalObject;\n"
---
> 	.word	int_const6
> 	.ascii	"get_parent()."
288,289c306,307
< str_const43:
< 	.word	12
---
> str_const17:
> 	.word	15
292,293c310,311
< 	.word	int_const15
< 	.ascii	"  parent : Closure;\n"
---
> 	.word	int_const13
> 	.ascii	" inherits Closure {\n"
297,299c315,317
< str_const42:
< 	.word	12
< 	.word	14
---
> str_const67:
> 	.word	15
> 	.word	6
301,302c319,320
< 	.word	int_const21
< 	.ascii	"class Closure inherits EvalObject {\n"
---
> 	.word	int_const14
> 	.ascii	"Expr"
306,307c324,325
< str_const41:
< 	.word	12
---
> str_const3:
> 	.word	15
310,311c328,329
< 	.word	int_const14
< 	.ascii	"  eval() : EvalObject { { abort(); self; } };\n"
---
> 	.word	int_const15
> 	.ascii	"\nError: Expr is pure virtual; can't print self\n"
315,317c333,335
< str_const40:
< 	.word	12
< 	.word	12
---
> str_const56:
> 	.word	15
> 	.word	6
319,320c337,338
< 	.word	int_const22
< 	.ascii	"class EvalObject inherits IO {\n"
---
> 	.word	int_const8
> 	.ascii	"Object"
324,326c342,344
< str_const39:
< 	.word	12
< 	.word	6
---
> str_const18:
> 	.word	15
> 	.word	14
328,329c346,347
< 	.word	int_const6
< 	.ascii	" =>\n"
---
> 	.word	int_const19
> 	.ascii	"  apply(y : EvalObject) : EvalObject {\n"
333,335c351,353
< str_const38:
< 	.word	12
< 	.word	8
---
> str_const64:
> 	.word	15
> 	.word	7
337,338c355,356
< 	.word	int_const2
< 	.ascii	"beta-reduce: "
---
> 	.word	int_const20
> 	.ascii	"VarListNE"
342,344c360,362
< str_const37:
< 	.word	12
< 	.word	5
---
> str_const68:
> 	.word	15
> 	.word	7
346,347c364,365
< 	.word	int_const1
< 	.ascii	"z"
---
> 	.word	int_const21
> 	.ascii	"Variable"
351,353c369,371
< str_const36:
< 	.word	12
< 	.word	5
---
> str_const49:
> 	.word	15
> 	.word	10
355,356c373,374
< 	.word	int_const1
< 	.ascii	"y"
---
> 	.word	int_const13
> 	.ascii	"Generating code for "
360c378,379
< str_const35:
---
> str_const46:
> 	.word	15
362d380
< 	.word	5
364,365c382,383
< 	.word	int_const1
< 	.ascii	"x"
---
> 	.word	int_const22
> 	.ascii	"  get_x() : EvalObject { x };\n"
369,370c387,388
< str_const34:
< 	.word	12
---
> str_const13:
> 	.word	15
374c392
< 	.ascii	"  esac)"
---
> 	.ascii	").init("
379c397
< 	.word	12
---
> 	.word	15
387,389c405,407
< str_const32:
< 	.word	12
< 	.word	12
---
> str_const61:
> 	.word	15
> 	.word	5
391,392c409,410
< 	.word	int_const22
< 	.ascii	"    c : Closure => c.apply(y);\n"
---
> 	.word	int_const2
> 	.ascii	"Int"
396,398c414,416
< str_const31:
< 	.word	12
< 	.word	8
---
> str_const45:
> 	.word	15
> 	.word	14
400,401c418,419
< 	.word	int_const3
< 	.ascii	"  case x of\n"
---
> 	.word	int_const24
> 	.ascii	"  get_parent() : Closure { parent };\n"
405,407c423,425
< str_const30:
< 	.word	12
< 	.word	6
---
> str_const25:
> 	.word	15
> 	.word	5
409,410c427,428
< 	.word	int_const6
< 	.ascii	" in\n"
---
> 	.word	int_const2
> 	.ascii	")@("
414,416c432,434
< str_const29:
< 	.word	12
< 	.word	10
---
> str_const0:
> 	.word	15
> 	.word	16
418,419c436,437
< 	.word	int_const24
< 	.ascii	"     y : EvalObject <- "
---
> 	.word	int_const9
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/lam-gc.cl"
423,425c441,443
< str_const28:
< 	.word	12
< 	.word	5
---
> str_const38:
> 	.word	15
> 	.word	8
427,428c445,446
< 	.word	int_const11
< 	.ascii	",\n"
---
> 	.word	int_const6
> 	.ascii	"beta-reduce: "
432,433c450,461
< str_const27:
< 	.word	12
---
> str_const20:
> 	.word	15
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const8
> 	.byte	92
> 	.ascii	"n\");\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const29:
> 	.word	15
436,437c464,465
< 	.word	int_const24
< 	.ascii	"(let x : EvalObject <- "
---
> 	.word	int_const25
> 	.ascii	"     y : EvalObject <- "
441,443c469,471
< str_const26:
< 	.word	12
< 	.word	5
---
> str_const12:
> 	.word	15
> 	.word	8
445,446c473,474
< 	.word	int_const11
< 	.ascii	"))"
---
> 	.word	int_const6
> 	.ascii	"((new Closure"
450,452c478,480
< str_const25:
< 	.word	12
< 	.word	5
---
> str_const48:
> 	.word	15
> 	.word	20
454,455c482,483
< 	.word	int_const7
< 	.ascii	")@("
---
> 	.word	int_const26
> 	.ascii	"  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n"
459,461c487,489
< str_const24:
< 	.word	12
< 	.word	5
---
> str_const42:
> 	.word	15
> 	.word	14
463,464c491,492
< 	.word	int_const11
< 	.ascii	"(("
---
> 	.word	int_const27
> 	.ascii	"class Closure inherits EvalObject {\n"
468,469c496,497
< str_const23:
< 	.word	12
---
> str_const10:
> 	.word	15
472,473c500,501
< 	.word	int_const7
< 	.ascii	"};\n"
---
> 	.word	int_const1
> 	.byte	92
477,478c505,506
< str_const22:
< 	.word	12
---
> str_const70:
> 	.word	15
481,482c509,510
< 	.word	int_const25
< 	.ascii	";}};\n"
---
> 	.word	int_const8
> 	.ascii	"Lambda"
486,488c514,516
< str_const21:
< 	.word	12
< 	.word	8
---
> str_const28:
> 	.word	15
> 	.word	5
490,491c518,519
< 	.word	int_const26
< 	.ascii	"      x <- y;\n"
---
> 	.word	int_const3
> 	.ascii	",\n"
495,496c523,524
< str_const20:
< 	.word	12
---
> str_const39:
> 	.word	15
499,501c527,528
< 	.word	int_const5
< 	.byte	92
< 	.ascii	"n\");\n"
---
> 	.word	int_const14
> 	.ascii	" =>\n"
505,507c532,534
< str_const19:
< 	.word	12
< 	.word	13
---
> str_const27:
> 	.word	15
> 	.word	10
509,510c536,537
< 	.word	int_const27
< 	.ascii	"    { out_string(\"Applying closure "
---
> 	.word	int_const25
> 	.ascii	"(let x : EvalObject <- "
514,516c541,543
< str_const18:
< 	.word	12
< 	.word	14
---
> str_const55:
> 	.word	15
> 	.word	8
518,519c545,546
< 	.word	int_const28
< 	.ascii	"  apply(y : EvalObject) : EvalObject {\n"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
523c550,551
< str_const17:
---
> str_const40:
> 	.word	15
525d552
< 	.word	10
527,528c554,555
< 	.word	int_const15
< 	.ascii	" inherits Closure {\n"
---
> 	.word	int_const28
> 	.ascii	"class EvalObject inherits IO {\n"
532,534c559,561
< str_const16:
< 	.word	12
< 	.word	8
---
> str_const23:
> 	.word	15
> 	.word	5
537c564
< 	.ascii	"class Closure"
---
> 	.ascii	"};\n"
541,542c568,578
< str_const15:
< 	.word	12
---
> str_const4:
> 	.word	15
> 	.word	17
> 	.word	String_dispTab
> 	.word	int_const23
> 	.ascii	"\nError: Expr is pure virtual; can't beta-reduce\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const22:
> 	.word	15
545,546c581,582
< 	.word	int_const5
< 	.ascii	"self))"
---
> 	.word	int_const29
> 	.ascii	";}};\n"
550c586,587
< str_const14:
---
> str_const32:
> 	.word	15
552d588
< 	.word	8
554,555c590,591
< 	.word	int_const2
< 	.ascii	"new Closure))"
---
> 	.word	int_const28
> 	.ascii	"    c : Closure => c.apply(y);\n"
559,560c595,596
< str_const13:
< 	.word	12
---
> str_const30:
> 	.word	15
563,564c599,600
< 	.word	int_const10
< 	.ascii	").init("
---
> 	.word	int_const14
> 	.ascii	" in\n"
568,569c604,605
< str_const12:
< 	.word	12
---
> str_const16:
> 	.word	15
572,573c608,609
< 	.word	int_const2
< 	.ascii	"((new Closure"
---
> 	.word	int_const6
> 	.ascii	"class Closure"
577,578c613,614
< str_const11:
< 	.word	12
---
> str_const35:
> 	.word	15
582c618
< 	.ascii	"."
---
> 	.ascii	"x"
586,587c622,623
< str_const10:
< 	.word	12
---
> str_const36:
> 	.word	15
591,609c627
< 	.byte	92
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	12
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const10
< 	.ascii	"get_x()"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const8:
< 	.word	12
< 	.word	11
< 	.word	String_dispTab
< 	.word	int_const29
< 	.ascii	"Error:  free occurrence of "
---
> 	.ascii	"y"
613,615c631,633
< str_const7:
< 	.word	12
< 	.word	8
---
> str_const37:
> 	.word	15
> 	.word	5
617,618c635,636
< 	.word	int_const2
< 	.ascii	"get_parent()."
---
> 	.word	int_const1
> 	.ascii	"z"
622,624c640,642
< str_const6:
< 	.word	12
< 	.word	16
---
> str_const57:
> 	.word	15
> 	.word	7
627c645
< 	.ascii	"\nError: Expr is pure virtual; can't gen_code\n"
---
> 	.ascii	"LambdaList"
631,633c649,651
< str_const5:
< 	.word	12
< 	.word	16
---
> str_const44:
> 	.word	15
> 	.word	9
636,645c654
< 	.ascii	"\nError: Expr is pure virtual; can't substitute\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const4:
< 	.word	12
< 	.word	17
< 	.word	String_dispTab
< 	.word	int_const23
< 	.ascii	"\nError: Expr is pure virtual; can't beta-reduce\n"
---
> 	.ascii	"  x : EvalObject;\n"
649,651c658,660
< str_const3:
< 	.word	12
< 	.word	16
---
> str_const66:
> 	.word	15
> 	.word	6
653,654c662,663
< 	.word	int_const31
< 	.ascii	"\nError: Expr is pure virtual; can't print self\n"
---
> 	.word	int_const14
> 	.ascii	"Main"
658,660c667,669
< str_const2:
< 	.word	12
< 	.word	5
---
> str_const34:
> 	.word	15
> 	.word	6
662,663c671,672
< 	.word	int_const1
< 	.ascii	" "
---
> 	.word	int_const10
> 	.ascii	"  esac)"
667,669c676,678
< str_const1:
< 	.word	12
< 	.word	16
---
> str_const59:
> 	.word	15
> 	.word	8
671,672c680,681
< 	.word	int_const14
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/lam-gc.cl"
---
> 	.word	int_const6
> 	.ascii	"LambdaListRef"
676,677c685
< str_const0:
< 	.word	12
---
> int_const25:
679,686d686
< 	.word	String_dispTab
< 	.word	int_const1
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const31:
< 	.word	10
689c689
< 	.word	47
---
> 	.word	23
691,692c691,692
< int_const30:
< 	.word	10
---
> int_const12:
> 	.word	5
697,698c697,698
< int_const29:
< 	.word	10
---
> int_const9:
> 	.word	5
701c701
< 	.word	27
---
> 	.word	46
703,704c703,704
< int_const28:
< 	.word	10
---
> int_const4:
> 	.word	5
707c707
< 	.word	39
---
> 	.word	24
709,710c709,710
< int_const27:
< 	.word	10
---
> int_const15:
> 	.word	5
713c713
< 	.word	35
---
> 	.word	47
715,716c715,716
< int_const26:
< 	.word	10
---
> int_const23:
> 	.word	5
719c719
< 	.word	14
---
> 	.word	48
721,724c721
< int_const25:
< 	.word	10
< 	.word	4
< 	.word	Int_dispTab
---
> int_const11:
726,728d722
< 	.word	-1
< int_const24:
< 	.word	10
731c725
< 	.word	23
---
> 	.word	27
733,734c727,728
< int_const23:
< 	.word	10
---
> int_const18:
> 	.word	5
737c731
< 	.word	48
---
> 	.word	50
740c734
< 	.word	10
---
> 	.word	5
743c737
< 	.word	31
---
> 	.word	30
745,746c739,740
< int_const21:
< 	.word	10
---
> int_const28:
> 	.word	5
749c743
< 	.word	36
---
> 	.word	31
751,752c745,746
< int_const20:
< 	.word	10
---
> int_const30:
> 	.word	5
755,757d748
< 	.word	18
< 	.word	-1
< int_const19:
758a750,752
> 	.word	-1
> int_const16:
> 	.word	5
761c755
< 	.word	37
---
> 	.word	12
763,764c757,758
< int_const18:
< 	.word	10
---
> int_const7:
> 	.word	5
767c761
< 	.word	30
---
> 	.word	56
770c764
< 	.word	10
---
> 	.word	5
773c767
< 	.word	56
---
> 	.word	35
775,776c769,770
< int_const16:
< 	.word	10
---
> int_const6:
> 	.word	5
779c773
< 	.word	61
---
> 	.word	13
781,782c775,776
< int_const15:
< 	.word	10
---
> int_const27:
> 	.word	5
785c779
< 	.word	20
---
> 	.word	36
787,788c781,782
< int_const14:
< 	.word	10
---
> int_const5:
> 	.word	5
791c785
< 	.word	46
---
> 	.word	14
793,794c787,788
< int_const13:
< 	.word	10
---
> int_const24:
> 	.word	5
797c791
< 	.word	50
---
> 	.word	37
799,800c793,794
< int_const12:
< 	.word	10
---
> int_const19:
> 	.word	5
803c797
< 	.word	24
---
> 	.word	39
805,806c799,800
< int_const11:
< 	.word	10
---
> int_const31:
> 	.word	5
809c803
< 	.word	2
---
> 	.word	18
811,812c805,806
< int_const10:
< 	.word	10
---
> int_const0:
> 	.word	5
815c809
< 	.word	7
---
> 	.word	0
817,818c811,812
< int_const9:
< 	.word	10
---
> int_const1:
> 	.word	5
821c815
< 	.word	9
---
> 	.word	1
823,824c817,818
< int_const8:
< 	.word	10
---
> int_const3:
> 	.word	5
827c821
< 	.word	8
---
> 	.word	2
829,830c823,824
< int_const7:
< 	.word	10
---
> int_const2:
> 	.word	5
835,836c829,830
< int_const6:
< 	.word	10
---
> int_const14:
> 	.word	5
841,842c835,842
< int_const5:
< 	.word	10
---
> int_const29:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	5
> 	.word	-1
> int_const8:
> 	.word	5
847,848c847,848
< int_const4:
< 	.word	10
---
> int_const10:
> 	.word	5
851c851
< 	.word	10
---
> 	.word	7
853,854c853,854
< int_const3:
< 	.word	10
---
> int_const21:
> 	.word	5
857c857
< 	.word	12
---
> 	.word	8
859,860c859,860
< int_const2:
< 	.word	10
---
> int_const20:
> 	.word	5
863c863
< 	.word	13
---
> 	.word	9
865,866c865,866
< int_const1:
< 	.word	10
---
> int_const26:
> 	.word	5
869c869
< 	.word	1
---
> 	.word	61
871,872c871,872
< int_const0:
< 	.word	10
---
> int_const13:
> 	.word	5
875c875
< 	.word	0
---
> 	.word	20
878c878
< 	.word	11
---
> 	.word	4
884c884
< 	.word	11
---
> 	.word	4
907a908,917
> 	.word	LambdaList_protObj
> 	.word	LambdaList_init
> 	.word	LambdaListNE_protObj
> 	.word	LambdaListNE_init
> 	.word	LambdaListRef_protObj
> 	.word	LambdaListRef_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
913a924,927
> 	.word	Term_protObj
> 	.word	Term_init
> 	.word	Main_protObj
> 	.word	Main_init
918,919d931
< 	.word	Lambda_protObj
< 	.word	Lambda_init
922,929c934,935
< 	.word	Term_protObj
< 	.word	Term_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
---
> 	.word	Lambda_protObj
> 	.word	Lambda_init
932,1110c938
< 	.word	LambdaList_protObj
< 	.word	LambdaList_init
< 	.word	LambdaListNE_protObj
< 	.word	LambdaListNE_init
< 	.word	LambdaListRef_protObj
< 	.word	LambdaListRef_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< LambdaListRef_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	LambdaListRef.isNil
< 	.word	LambdaListRef.headE
< 	.word	LambdaListRef.headC
< 	.word	LambdaListRef.headN
< 	.word	LambdaListRef.reset
< 	.word	LambdaListRef.add
< 	.word	LambdaListRef.removeHead
< LambdaList_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	LambdaList.isNil
< 	.word	LambdaList.headE
< 	.word	LambdaList.headC
< 	.word	LambdaList.headN
< 	.word	LambdaList.tail
< 	.word	LambdaList.add
< LambdaListNE_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	LambdaListNE.isNil
< 	.word	LambdaListNE.headE
< 	.word	LambdaListNE.headC
< 	.word	LambdaListNE.headN
< 	.word	LambdaListNE.tail
< 	.word	LambdaList.add
< 	.word	LambdaListNE.init
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Term_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Term.var
< 	.word	Term.lam
< 	.word	Term.app
< 	.word	Term.i
< 	.word	Term.k
< 	.word	Term.s
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Term.var
< 	.word	Term.lam
< 	.word	Term.app
< 	.word	Term.i
< 	.word	Term.k
< 	.word	Term.s
< 	.word	Main.beta_reduce
< 	.word	Main.eval_class
< 	.word	Main.closure_class
< 	.word	Main.gen_code
< 	.word	Main.main
< Expr_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Expr.print_self
< 	.word	Expr.beta
< 	.word	Expr.substitute
< 	.word	Expr.gen_code
< App_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	App.print_self
< 	.word	App.beta
< 	.word	App.substitute
< 	.word	App.gen_code
< 	.word	App.init
< Lambda_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Lambda.print_self
< 	.word	Lambda.beta
< 	.word	Lambda.substitute
< 	.word	Lambda.gen_code
< 	.word	Lambda.init
< 	.word	Lambda.apply
< 	.word	Lambda.gen_closure_code
< Variable_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Variable.print_self
< 	.word	Variable.beta
< 	.word	Variable.substitute
< 	.word	Variable.gen_code
< 	.word	Variable.init
< VarList_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	VarList.isNil
< 	.word	VarList.head
< 	.word	VarList.tail
< 	.word	VarList.add
< 	.word	VarList.print
< VarListNE_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	VarListNE.isNil
< 	.word	VarListNE.head
< 	.word	VarListNE.tail
< 	.word	VarList.add
< 	.word	VarListNE.print
< 	.word	VarListNE.init
< 	.word	-1
---
> Object_dispTabLambdaList_dispTabLambdaListNE_dispTabLambdaListRef_dispTabBool_dispTabInt_dispTabIO_dispTabVarList_dispTabVarListNE_dispTabTerm_dispTabMain_dispTabExpr_dispTabVariable_dispTabApp_dispTabLambda_dispTabString_dispTab	.word	-1
1116,1122d943
< LambdaListRef_protObj:
< 	.word	15
< 	.word	5
< 	.word	LambdaListRef_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
1124c945
< 	.word	13
---
> 	.word	1
1129c950
< 	.word	14
---
> 	.word	2
1137,1138c958,959
< String_protObj:
< 	.word	12
---
> LambdaListRef_protObj:
> 	.word	3
1140c961
< 	.word	String_dispTab
---
> 	.word	LambdaListRef_dispTab
1145c966
< 	.word	11
---
> 	.word	4
1151c972
< 	.word	10
---
> 	.word	5
1157c978
< 	.word	1
---
> 	.word	6
1161c982,987
< Term_protObj:
---
> VarList_protObj:
> 	.word	7
> 	.word	3
> 	.word	VarList_dispTab
> 	.word	-1
> VarListNE_protObj:
1162a989,995
> 	.word	5
> 	.word	VarListNE_dispTab
> 	.word	0
> 	.word	0
> 	.word	-1
> Term_protObj:
> 	.word	9
1167c1000
< 	.word	9
---
> 	.word	10
1172c1005
< 	.word	4
---
> 	.word	11
1175a1009,1014
> Variable_protObj:
> 	.word	12
> 	.word	4
> 	.word	Variable_dispTab
> 	.word	str_const72
> 	.word	-1
1177c1016
< 	.word	7
---
> 	.word	13
1184c1023
< 	.word	6
---
> 	.word	14
1190,1202c1029,1030
< Variable_protObj:
< 	.word	5
< 	.word	4
< 	.word	Variable_dispTab
< 	.word	str_const72
< 	.word	-1
< VarList_protObj:
< 	.word	2
< 	.word	3
< 	.word	VarList_dispTab
< 	.word	-1
< VarListNE_protObj:
< 	.word	3
---
> String_protObj:
> 	.word	15
1204,1205c1032,1033
< 	.word	VarListNE_dispTab
< 	.word	0
---
> 	.word	String_dispTab
> 	.word	int_const0
1229c1057
< LambdaListRef_init:
---
> LambdaList_init:
1237,1238d1064
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
1245c1071
< LambdaList_init:
---
> LambdaListNE_init:
1252c1078
< 	jal	Object_init
---
> 	jal	LambdaList_init
1259c1085
< LambdaListNE_init:
---
> LambdaListRef_init:
1266c1092,1093
< 	jal	LambdaList_init
---
> 	jal	Object_init
> 	la	$a0 int_const0
1273c1100
< String_init:
---
> Bool_init:
1287c1114
< Bool_init:
---
> Int_init:
1301c1128
< Int_init:
---
> IO_init:
1315c1142
< IO_init:
---
> VarList_init:
1322c1149
< 	jal	Object_init
---
> 	jal	IO_init
1329c1156
< Term_init:
---
> VarListNE_init:
1336c1163
< 	jal	IO_init
---
> 	jal	VarList_init
1343c1170
< Main_init:
---
> Term_init:
1350c1177
< 	jal	Term_init
---
> 	jal	IO_init
1357c1184
< Expr_init:
---
> Main_init:
1364c1191
< 	jal	IO_init
---
> 	jal	Term_init
1371c1198
< App_init:
---
> Expr_init:
1378c1205
< 	jal	Expr_init
---
> 	jal	IO_init
1385c1212
< Lambda_init:
---
> Variable_init:
1399c1226
< Variable_init:
---
> App_init:
1413c1240
< VarList_init:
---
> Lambda_init:
1420c1247
< 	jal	IO_init
---
> 	jal	Expr_init
1427c1254
< VarListNE_init:
---
> String_init:
1434c1261
< 	jal	VarList_init
---
> 	jal	Object_init
1441c1268
< LambdaListRef.isNil:
---
> LambdaList.isNil:
1448,1456c1275
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	la	$a0 bool_const1
1462c1281
< LambdaListRef.headE:
---
> LambdaList.headE:
1469,1477c1288
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
---
> 	move	$a0 null
1483c1294
< LambdaListRef.headC:
---
> LambdaList.headC:
1490,1498c1301
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
---
> 	move	$a0 null
1504c1307
< LambdaListRef.headN:
---
> LambdaList.headN:
1511,1519c1314
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 24($t1)
< 	jalr		$t1
---
> 	move	$a0 null
1525c1320
< LambdaListRef.reset:
---
> LambdaList.tail:
1532,1538c1327
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
< 	la	$a0 LambdaList_protObj
< 	jal	Object.copy
< 	jal	LambdaList_init
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
1544,1548c1333,1337
< LambdaListRef.add:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> LambdaList.add:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
1557c1346
< 	lw	$a0 12($s0)
---
> 	lw	$a0 12($fp)
1560,1562c1349,1353
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	move	$a0 $s0
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
1565c1356
< label4:
---
> label0:
1567,1587c1358,1362
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	sw	$a0 16($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
1590c1365
< LambdaListRef.removeHead:
---
> LambdaListNE.isNil:
1597,1607c1372
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	la	$a0 bool_const0
1613c1378
< LambdaList.isNil:
---
> LambdaListNE.headE:
1620c1385
< 	la	$a0 bool_const1
---
> 	move	$a0 null
1626c1391
< LambdaList.headE:
---
> LambdaListNE.headC:
1633,1635c1398,1452
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListNE.headN:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListNE.tail:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListNE.init:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 28
> 	jr	$ra	
> LambdaListRef.isNil:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
1638c1455
< label6:
---
> label1:
1640,1644c1457,1458
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 VarList_protObj
< 	jal	Object.copy
< 	jal	VarList_init
---
> 	lw	$t1 12($t1)
> 	jalr	$t1
1650c1464
< LambdaList.headC:
---
> LambdaListRef.headE:
1657,1659c1471,1473
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
1662c1476
< label7:
---
> label2:
1664,1668c1478,1479
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 Lambda_protObj
< 	jal	Object.copy
< 	jal	Lambda_init
---
> 	lw	$t1 16($t1)
> 	jalr	$t1
1674c1485
< LambdaList.headN:
---
> LambdaListRef.headC:
1681,1683c1492,1494
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
1686c1497
< label8:
---
> label3:
1688,1690c1499,1500
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
---
> 	lw	$t1 20($t1)
> 	jalr	$t1
1696c1506
< LambdaList.tail:
---
> LambdaListRef.headN:
1703,1705c1513,1515
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label4
> 	la	$a0 str_const0
1708c1518
< label9:
---
> label4:
1710,1714c1520,1521
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 LambdaList_protObj
< 	jal	Object.copy
< 	jal	LambdaList_init
---
> 	lw	$t1 24($t1)
> 	jalr	$t1
1720c1527,1605
< LambdaList.add:
---
> LambdaListRef.reset:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> LambdaListRef.add:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 20
> 	jr	$ra	
> LambdaListRef.removeHead:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.isNil:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	la	$a0 bool_const1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.head:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.tail:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> VarList.add:
1727,1732d1611
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
1739,1743c1618,1619
< 	la	$a0 LambdaListNE_protObj
< 	jal	Object.copy
< 	jal	LambdaListNE_init
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label5
> 	la	$a0 str_const0
1746c1622
< label10:
---
> label5:
1748,1749c1624,1625
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	lw	$t1 48($t1)
> 	jalr	$t1
1753c1629
< 	addiu	$sp $sp 24
---
> 	addiu	$sp $sp 16
1755c1631
< LambdaListNE.isNil:
---
> VarList.print:
1762c1638,1649
< 	la	$a0 bool_const0
---
> 	la	$a0 str_const1
> 	sw	$a0 0($sp)
> 	addiu	$sp $sp -4
> 	move	$a0 $s0
> 	bne	$a0 $zero label6
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label6:
> 	lw	$t1 8($a0)
> 	lw	$t1 12($t1)
> 	jalr	$t1
1768c1655
< LambdaListNE.headE:
---
> VarListNE.isNil:
1775c1662
< 	lw	$a0 20($s0)
---
> 	la	$a0 bool_const0
1781c1668
< LambdaListNE.headC:
---
> VarListNE.head:
1788c1675
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
1794c1681
< LambdaListNE.headN:
---
> VarListNE.tail:
1801c1688
< 	lw	$a0 16($s0)
---
> 	move	$a0 null
1807c1694
< LambdaListNE.tail:
---
> VarListNE.init:
1814c1701
< 	lw	$a0 24($s0)
---
> 	move	$a0 null
1818c1705
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
1820c1707
< LambdaListNE.init:
---
> VarListNE.print:
1827,1835c1714
< 	lw	$a0 24($fp)
< 	sw	$a0 20($s0)
< 	lw	$a0 20($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 16($fp)
< 	sw	$a0 16($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 24($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
1839c1718
< 	addiu	$sp $sp 28
---
> 	addiu	$sp $sp 12
1848,1851c1727
< 	la	$a0 Variable_protObj
< 	jal	Object.copy
< 	jal	Variable_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
1855,1858c1731,1733
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label7
> 	la	$a0 str_const0
1861c1736
< label11:
---
> label7:
1864,1865c1739
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1878,1881c1752
< 	la	$a0 Lambda_protObj
< 	jal	Object.copy
< 	jal	Lambda_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
1888,1891c1759,1761
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label8
> 	la	$a0 str_const0
1894c1764
< label12:
---
> label8:
1897,1898c1767
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1911,1914c1780
< 	la	$a0 App_protObj
< 	jal	Object.copy
< 	jal	App_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
1921,1924c1787,1789
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label13
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label9
> 	la	$a0 str_const0
1927c1792
< label13:
---
> label9:
1930,1931c1795
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1948,1949c1812,1813
< 	bne	$a0 $zero label14
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label10
> 	la	$a0 str_const0
1952c1816
< label14:
---
> label10:
1955,1957c1819,1822
< 	jalr		$t1
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
1959c1824,1825
< 	sw	$s1 0($sp)
---
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
1962,1964c1828,1829
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label11
> 	la	$a0 str_const0
1967c1832
< label15:
---
> label11:
1970,1971c1835
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
1988,1989c1852,1853
< 	bne	$a0 $zero label16
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label12
> 	la	$a0 str_const0
1992c1856
< label16:
---
> label12:
1995,1996c1859,1860
< 	jalr		$t1
< 	move	$s1 $a0
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
2001,2003c1865,1866
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label17
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label13
> 	la	$a0 str_const0
2006c1869
< label17:
---
> label13:
2009,2012c1872,1875
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	sw	$s1 0($sp)
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2014c1877,1878
< 	sw	$s2 0($sp)
---
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
2016c1880,1881
< 	sw	$s1 0($sp)
---
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2019,2022c1884,1885
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label18
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label14
> 	la	$a0 str_const0
2025c1888
< label18:
---
> label14:
2028,2030c1891
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
2034,2037c1895,1896
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label19
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label15
> 	la	$a0 str_const0
2040c1899
< label19:
---
> label15:
2043,2045c1902
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
---
> 	jalr	$t1
2062,2063c1919,1920
< 	bne	$a0 $zero label20
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label16
> 	la	$a0 str_const0
2066c1923
< label20:
---
> label16:
2069,2070c1926,1927
< 	jalr		$t1
< 	move	$s1 $a0
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
2075,2077c1932,1933
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label21
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label17
> 	la	$a0 str_const0
2080c1936
< label21:
---
> label17:
2083,2085c1939,1940
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
---
> 	jalr	$t1
> 	sw	$a0 4($fp)
2090,2093c1945,1946
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label22
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label18
> 	la	$a0 str_const0
2096c1949
< label22:
---
> label18:
2099,2103c1952,1955
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	sw	$s1 0($sp)
---
> 	jalr	$t1
> 	sw	$a0 8($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2105c1957,1958
< 	sw	$s2 0($sp)
---
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
2107c1960,1961
< 	sw	$s3 0($sp)
---
> 	lw	$a0 8($fp)
> 	sw	$a0 0($sp)
2109c1963,1964
< 	sw	$s1 0($sp)
---
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
2111c1966,1967
< 	sw	$s3 0($sp)
---
> 	lw	$a0 8($fp)
> 	sw	$a0 0($sp)
2114,2118c1970,1971
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label23
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label19
> 	la	$a0 str_const0
2121c1974
< label23:
---
> label19:
2124,2127c1977
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2130c1980,1981
< 	sw	$s2 0($sp)
---
> 	lw	$a0 4($fp)
> 	sw	$a0 0($sp)
2132c1983,1984
< 	sw	$s3 0($sp)
---
> 	lw	$a0 8($fp)
> 	sw	$a0 0($sp)
2135,2139c1987,1988
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label24
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label20
> 	la	$a0 str_const0
2142c1991
< label24:
---
> label20:
2145,2148c1994
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2152,2156c1998,1999
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label25
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label21
> 	la	$a0 str_const0
2159c2002
< label25:
---
> label21:
2162,2165c2005
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2169,2173c2009,2010
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label26
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label22
> 	la	$a0 str_const0
2176c2013
< label26:
---
> label22:
2179,2182c2016
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2186,2190c2020,2021
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label27
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label23
> 	la	$a0 str_const0
2193c2024
< label27:
---
> label23:
2196,2199c2027
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2203,2207c2031,2032
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label28
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label24
> 	la	$a0 str_const0
2210c2035
< label28:
---
> label24:
2213,2216c2038
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
---
> 	jalr	$t1
2223,2226c2045,2048
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
---
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
2229,2342c2051,2055
< 	la	$a0 str_const38
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label29
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label29:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 24($fp)
< 	bne	$a0 $zero label30
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label30:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$s1 bool_const0
< 	move	$s2 $zero
< label31:
< 	lw	$t1 12($s1)
< 	la	$a0 bool_const1
< 	beqz	$t1 label33
< 	la	$a0 bool_const0
< label33:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label32
< 	lw	$a0 24($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label34
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label34:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s2 $a0
< 	move	$s3 $s2
< 	lw	$t2 24($fp)
< 	move	$t1 $s3
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label37
< 	la	$a1 bool_const0
< 	jal	equality_test
< label37:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label35
< 	la	$s1 bool_const1
< 	move	$a0 $s1
< 	b	label36
< label35:
< 	sw	$s2 24($fp)
< 	la	$a0 str_const39
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label38
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label38:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$a0 24($fp)
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label39
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label39:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label36:
< 	b	label31
< label32:
< 	move	$a0 $zero
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label40
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label40:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$a0 24($fp)
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 28
---
> 	move	$a0 null
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 24
2351,2386c2064
< 	la	$a0 str_const40
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label41
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label41:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const41
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label42
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label42:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const23
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label43
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label43:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2399,2494c2077
< 	la	$a0 str_const42
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label44
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label44:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const43
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label45
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label45:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const44
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label46
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label46:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const45
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label47
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label47:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const46
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label48
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label48:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const47
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label49
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label49:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const48
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label50
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label50:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const23
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label51
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label51:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
2507,2536c2090,2091
< 	la	$a0 LambdaListRef_protObj
< 	jal	Object.copy
< 	jal	LambdaListRef_init
< 	bne	$a0 $zero label52
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label52:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 str_const49
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label53
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label53:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$a0 28($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label54
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label25
> 	la	$a0 str_const0
2539c2094
< label54:
---
> label25:
2542,2773c2097,2099
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const50
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label55
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label55:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const51
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label56
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label56:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label57
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label57:
< 	lw	$t1 8($a0)
< 	lw	$t1 56($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label58
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label58:
< 	lw	$t1 8($a0)
< 	lw	$t1 60($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const52
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label59
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label59:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const53
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label60
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label60:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 VarList_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	VarList_init
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 28($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label61
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label61:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const54
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label62
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label62:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< label63:
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label66
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label66:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label65
< 	la	$a0 bool_const0
< label65:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label64
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label67
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label67:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label68
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label68:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label69
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label69:
< 	lw	$t1 8($a0)
< 	lw	$t1 24($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	move	$s4 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label70
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label70:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	sw	$s4 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label71
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label71:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label63
< label64:
< 	move	$a0 $zero
< 	la	$a0 str_const50
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label72
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label72:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	move	$a0 null
2786,3477c2112
< 	move	$a0 $s0
< 	bne	$a0 $zero label73
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label73:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label74
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label74:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label75
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label75:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label76
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label76:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label77
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label77:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label78
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label78:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label79
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label79:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label80
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label80:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label81
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label81:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label82
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label82:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label83
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label83:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label84
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label84:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label85
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label85:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label86
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label86:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label87
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label87:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label88
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label88:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label89
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label89:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label90
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label90:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label91
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label91:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label92
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label92:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label93
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label93:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label94
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label94:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label95
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label95:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label96
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label96:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label97
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label97:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label98
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label98:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label99
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label99:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label100
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label100:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label101
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label101:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label102
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label102:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label103
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label103:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label104
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label104:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label105
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label105:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label106
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label106:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label107
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label107:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label108
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label108:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label109
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label109:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label110
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label110:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label111
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label111:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label112
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label112:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label113
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label113:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label114
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label114:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label115
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label115:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label116
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label116:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label117
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label117:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label118
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label118:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label119
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label119:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label120
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label120:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label121
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label121:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label122
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label122:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label123
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label123:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label124
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label124:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label125
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label125:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label126
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label126:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label127
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label127:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label128
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label128:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label129
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label129:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label130
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label130:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label131
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label131:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label132
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label132:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label133
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label133:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label134
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label134:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label135
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label135:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label136
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label136:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label137
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label137:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
---
> 	move	$a0 null
3490,3511c2125
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label138
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label138:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label139
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label139:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3524,3545c2138
< 	la	$a0 str_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label140
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label140:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label141
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label141:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3558,3579c2151
< 	la	$a0 str_const5
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label142
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label142:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label143
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label143:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3592,3613c2164
< 	la	$a0 str_const6
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label144
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label144:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	bne	$a0 $zero label145
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label145:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
3619c2170
< App.init:
---
> Variable.init:
3626,3630c2177
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
3634c2181
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 16
3636c2183
< App.print_self:
---
> Variable.print_self:
3643,3686c2190
< 	la	$a0 str_const24
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label146
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label146:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label147
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label147:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const25
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label148
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label148:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label149
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label149:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const26
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
3689,3690c2193,2194
< 	bne	$a0 $zero label150
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label26
> 	la	$a0 str_const0
3693c2197
< label150:
---
> label26:
3696,3697c2200
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	jalr	$t1
3703,3861c2206
< App.beta:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label152
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_case_abort2
< label152:
< 	lw	$t2 0($a0)
< 	blt	$t2 6 label153
< 	bgt	$t2 6 label153
< 	move	$s1 $a0
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label154
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label154:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label151
< label153:
< 	blt	$t2 4 label155
< 	bgt	$t2 7 label155
< 	move	$s1 $a0
< 	lw	$a0 12($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label156
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label156:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 App_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	App_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label157
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label157:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label151
< label155:
< 	jal	_case_abort
< label151:
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< App.substitute:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 28($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 24($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label158
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label158:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	lw	$a0 28($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 24($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label159
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label159:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 App_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	App_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label160
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label160:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 32
< 	jr	$ra	
< App.gen_code:
---
> Variable.beta:
3868,3870d2212
< 	la	$a0 str_const27
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
3872,3993d2213
< 	bne	$a0 $zero label161
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label161:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label162
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label162:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	la	$a0 str_const28
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label163
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label163:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const29
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label164
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label164:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label165
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label165:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	la	$a0 str_const30
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label166
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label166:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const31
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label167
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label167:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const32
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label168
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label168:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const33
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label169
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label169:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const34
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label170
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label170:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
3997c2217
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 12
3999c2219
< Lambda.init:
---
> Variable.substitute:
4006,4010d2225
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
4016,4020c2231,2235
< Lambda.print_self:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> Variable.gen_code:
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
4023,4069c2238,2244
< 	la	$a0 str_const10
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label171
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label171:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label172
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label172:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const11
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label173
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label173:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label174
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label174:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$a0 20($fp)
> 	sw	$a0 0($fp)
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 24
4071c2246
< Lambda.beta:
---
> App.init:
4078c2253
< 	move	$a0 $s0
---
> 	move	$a0 null
4082c2257
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
4084c2259
< Lambda.apply:
---
> App.print_self:
4091,4105c2266
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label175
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label175:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
---
> 	move	$a0 null
4109,4175c2270
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Lambda.substitute:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 24($fp)
< 	lw	$t2 12($s0)
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label178
< 	la	$a1 bool_const0
< 	jal	equality_test
< label178:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label176
< 	move	$a0 $s0
< 	b	label177
< label176:
< 	lw	$a0 24($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label179
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label179:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	la	$a0 Lambda_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Lambda_init
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label180
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label180:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label177:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 28
---
> 	addiu	$sp $sp 12
4177c2272
< Lambda.gen_code:
---
> App.beta:
4184,4215c2279,2280
< 	la	$a0 str_const12
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label181
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label181:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
< 	bne	$a0 $zero label182
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label182:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label183
< 	la	$a0 str_const1
---
> 	bne	null $zero label28
> 	la	$a0 str_const0
4217,4223c2282,2288
< 	jal	_dispatch_abort
< label183:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const13
< 	sw	$a0 0($sp)
---
> 	jal	_case_abort2
> label28:
> 	lw	$t2 0(null)
> 	blt	$t2 14 label29
> 	bgt	$t2 14 label29
> 	sw	$a0 0($fp)
> 	sw	null 0($sp)
4225,4227c2290,2292
< 	move	$a0 $s0
< 	bne	$a0 $zero label184
< 	la	$a0 str_const1
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label30
> 	la	$a0 str_const0
4230c2295
< label184:
---
> label30:
4232,4236c2297,2306
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($fp)
< 	bne	$a0 $zero label187
< 	la	$a0 str_const1
---
> 	lw	$t1 48($t1)
> 	jalr	$t1
> 	b	label27
> label29:
> 	blt	$t2 11 label31
> 	bgt	$t2 14 label31
> 	sw	$a0 0($fp)
> 	move	$a0 null
> 	bne	$a0 $zero label32
> 	la	$a0 str_const0
4239c2309
< label187:
---
> label32:
4241,4245c2311,2315
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$t1 12($a0)
< 	beqz	$t1 label185
< 	la	$a0 str_const14
---
> 	lw	$t1 32($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	sw	$a0 8($fp)
> 	lw	$a0 4($fp)
4248,4260c2318
< 	move	$a0 $s0
< 	bne	$a0 $zero label188
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label188:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	b	label186
< label185:
< 	la	$a0 str_const15
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
4262,4264c2320,2322
< 	move	$a0 $s0
< 	bne	$a0 $zero label189
< 	la	$a0 str_const1
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label33
> 	la	$a0 str_const0
4267c2325
< label189:
---
> label33:
4269,4272c2327,2332
< 	lw	$t1 12($t1)
< 	jalr		$t1
< label186:
< 	move	$a0 $s0
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	b	label27
> label31:
> 	jal	_case_abort
> label27:
4276c2336
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 12
4278,4282c2338,2342
< Lambda.gen_closure_code:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> App.substitute:
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
4285,4369c2345
< 	la	$a0 str_const16
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label190
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label190:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label191
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label191:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const17
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label192
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label192:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const18
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label193
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label193:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const19
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label194
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label194:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 20($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label195
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label195:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const20
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label196
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label196:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const21
---
> 	lw	$a0 28($fp)
4372,4381c2348
< 	move	$a0 $s0
< 	bne	$a0 $zero label197
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label197:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
---
> 	lw	$a0 24($fp)
4384,4386c2351,2353
< 	lw	$a0 16($fp)
< 	bne	$a0 $zero label198
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label34
> 	la	$a0 str_const0
4389c2356
< label198:
---
> label34:
4391,4395c2358,2361
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($fp)
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	sw	$a0 0($fp)
> 	lw	$a0 28($fp)
4398,4407c2364
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label199
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label199:
< 	lw	$t1 8($a0)
< 	lw	$t1 40($t1)
< 	jalr		$t1
< 	la	$a0 str_const22
---
> 	lw	$a0 24($fp)
4410,4412c2367,2369
< 	move	$a0 $s0
< 	bne	$a0 $zero label200
< 	la	$a0 str_const1
---
> 	move	$a0 null
> 	bne	$a0 $zero label35
> 	la	$a0 str_const0
4415c2372
< label200:
---
> label35:
4417,4419c2374,2378
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const23
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
> 	sw	$a0 4($fp)
> 	sw	$a0 8($fp)
> 	lw	$a0 0($fp)
4422,4458c2381
< 	move	$a0 $s0
< 	bne	$a0 $zero label201
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label201:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< Variable.init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($fp)
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< Variable.print_self:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
---
> 	lw	$a0 4($fp)
4461,4463c2384,2386
< 	move	$a0 $s0
< 	bne	$a0 $zero label202
< 	la	$a0 str_const1
---
> 	lw	$a0 8($fp)
> 	bne	$a0 $zero label36
> 	la	$a0 str_const0
4466c2389
< label202:
---
> label36:
4468,4473c2391,2396
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$t1 44($t1)
> 	jalr	$t1
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 32
4475c2398
< Variable.beta:
---
> App.gen_code:
4482c2405
< 	move	$a0 $s0
---
> 	move	$a0 null
4486,4680c2409
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Variable.substitute:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 20($fp)
< 	move	$t2 $s0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label205
< 	la	$a1 bool_const0
< 	jal	equality_test
< label205:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label203
< 	lw	$a0 16($fp)
< 	b	label204
< label203:
< 	move	$a0 $s0
< label204:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< Variable.gen_code:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 24($fp)
< label206:
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label210
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label210:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label208
< 	la	$a0 bool_const0
< 	b	label209
< label208:
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label213
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label213:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	move	$t2 $s0
< 	move	$t1 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label212
< 	la	$a1 bool_const0
< 	jal	equality_test
< label212:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label211
< 	la	$a0 bool_const0
< label211:
< label209:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label207
< 	la	$a0 str_const7
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label214
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label214:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label215
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label215:
< 	lw	$t1 8($a0)
< 	lw	$t1 36($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$s1 $a0
< 	b	label206
< label207:
< 	move	$a0 $zero
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label218
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label218:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$t1 12($a0)
< 	beqz	$t1 label216
< 	la	$a0 str_const8
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label219
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label219:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label220
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label220:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label221
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label221:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label222
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label222:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	b	label217
< label216:
< 	la	$a0 str_const9
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label223
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label223:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< label217:
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 28
---
> 	addiu	$sp $sp 20
4682c2411
< VarList.isNil:
---
> Lambda.init:
4689c2418
< 	la	$a0 bool_const1
---
> 	move	$a0 null
4693c2422
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 20
4695c2424
< VarList.head:
---
> Lambda.print_self:
4702,4713c2431
< 	move	$a0 $s0
< 	bne	$a0 $zero label224
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label224:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 Variable_protObj
< 	jal	Object.copy
< 	jal	Variable_init
---
> 	move	$a0 null
4719c2437
< VarList.tail:
---
> Lambda.beta:
4727,4737d2444
< 	bne	$a0 $zero label225
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label225:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 VarList_protObj
< 	jal	Object.copy
< 	jal	VarList_init
4743c2450
< VarList.add:
---
> Lambda.apply:
4750,4751c2457
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
4753c2459
< 	move	$a0 $s0
---
> 	lw	$a0 12($fp)
4756,4778c2462,2463
< 	la	$a0 VarListNE_protObj
< 	jal	Object.copy
< 	jal	VarListNE_init
< 	bne	$a0 $zero label226
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label226:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
< VarList.print:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
---
> 	move	$a0 null
> 	bne	$a0 $zero label37
4780,4784d2464
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label227
< 	la	$a0 str_const1
4787c2467
< label227:
---
> label37:
4789,4816c2469,2470
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< VarListNE.isNil:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 bool_const0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< VarListNE.head:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$a0 12($s0)
---
> 	lw	$t1 36($t1)
> 	jalr	$t1
4820c2474
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 16
4822,4826c2476,2480
< VarListNE.tail:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
---
> Lambda.substitute:
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
4829,4833c2483,2486
< 	lw	$a0 16($s0)
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
---
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 28
4835c2488
< VarListNE.init:
---
> Lambda.gen_code:
4842,4846c2495
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
4852c2501
< VarListNE.print:
---
> Lambda.gen_closure_code:
4859,4889c2508
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label228
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label228:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label229
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label229:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label230
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label230:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
4893c2512
< 	addiu	$sp $sp 12
---
> 	addiu	$sp $sp 24
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ spim_outname=lam-gc.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/lam-gc.cl
+ spim_errname=lam-gc.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.spim.out
6,53c6,43
< \x.x
< \x.\y.x
< \x.\y.\z.((((x)@(z)))@(((y)@(z))))
< beta-reduce: ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x)) =>
< ((((\y.\z.((((\x.\y.x)@(z)))@(((y)@(z)))))@(\x.x)))@(\x.x)) =>
< ((\z.((((\x.\y.x)@(z)))@(((\x.x)@(z)))))@(\x.x)) =>
< ((((\x.\y.x)@(\x.x)))@(((\x.x)@(\x.x)))) =>
< ((\y.\x.x)@(((\x.x)@(\x.x)))) =>
< \x.x
< beta-reduce: ((((\x.\y.x)@(\x.x)))@(\x.x)) =>
< ((\y.\x.x)@(\x.x)) =>
< \x.x
< Generating code for ((\x.x)@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
---
> The following symbols are undefined:
> LambdaListNE_protObj
> heap_start
> Term_protObj
> VarList_protObj
> LambdaList_protObj
> LambdaList_init
> Lambda_protObj
> Int_protObj
> App_protObj
> VarListNE_protObj
> Bool_dispTab
> Main.main
> LambdaListRef_init
> VarListNE_init
> Expr_protObj
> Bool_init
> Variable_init
> String_protObj
> IO_init
> App_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Term_init
> Expr_init
> LambdaListRef_protObj
> LambdaListNE_init
> Main_init
> Bool_protObj
> Variable_protObj
> Lambda_init
> Object_protObj
> VarList_init
55,540c45
< ------------------cut here------------------
< Generating code for ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< get_x();}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure4).init(self));}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< ((new Closure5).init(self));}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((((((((((((((\x.x)@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.x)))@(\x.\y.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure4).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure6).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure7).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure8).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< get_x();}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< get_x();}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< ((new Closure14).init(self));}};
< };
< class Closure14 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 14\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure15).init(self));}};
< };
< class Closure15 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 15\n");
<       x <- y;
< ((new Closure16).init(self));}};
< };
< class Closure16 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 16\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure17).init(self));}};
< };
< class Closure17 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 17\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((\x.x)@(((\x.\y.x)@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))))@(((\x.\y.x)@(((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z))))))))))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure1).init(new Closure)),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure3).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure4).init(new Closure)),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< ((new Closure7).init(self));}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure8).init(self));}};
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< COOL program successfully executed
< Stats -- #instructions : 106539
<          #reads : 28068  #writes 18514  #branches 18847  #other 41110
---
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.spim.out.filtered
6,53c6,43
< \x.x
< \x.\y.x
< \x.\y.\z.((((x)@(z)))@(((y)@(z))))
< beta-reduce: ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x)) =>
< ((((\y.\z.((((\x.\y.x)@(z)))@(((y)@(z)))))@(\x.x)))@(\x.x)) =>
< ((\z.((((\x.\y.x)@(z)))@(((\x.x)@(z)))))@(\x.x)) =>
< ((((\x.\y.x)@(\x.x)))@(((\x.x)@(\x.x)))) =>
< ((\y.\x.x)@(((\x.x)@(\x.x)))) =>
< \x.x
< beta-reduce: ((((\x.\y.x)@(\x.x)))@(\x.x)) =>
< ((\y.\x.x)@(\x.x)) =>
< \x.x
< Generating code for ((\x.x)@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
---
> The following symbols are undefined:
> LambdaListNE_protObj
> heap_start
> Term_protObj
> VarList_protObj
> LambdaList_protObj
> LambdaList_init
> Lambda_protObj
> Int_protObj
> App_protObj
> VarListNE_protObj
> Bool_dispTab
> Main.main
> LambdaListRef_init
> VarListNE_init
> Expr_protObj
> Bool_init
> Variable_init
> String_protObj
> IO_init
> App_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Term_init
> Expr_init
> LambdaListRef_protObj
> LambdaListNE_init
> Main_init
> Bool_protObj
> Variable_protObj
> Lambda_init
> Object_protObj
> VarList_init
55,538c45
< ------------------cut here------------------
< Generating code for ((((((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.x)))@(\x.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< get_x();}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure4).init(self));}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< ((new Closure5).init(self));}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((((((((((((((\x.x)@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.\y.x)))@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))@(\x.x)))@(\x.\y.x)))@(\x.x))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- ((new Closure1).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure3).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure4).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure6).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure7).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- ((new Closure8).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< get_x();}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< get_x();}};
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< ((new Closure14).init(self));}};
< };
< class Closure14 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 14\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure15).init(self));}};
< };
< class Closure15 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 15\n");
<       x <- y;
< ((new Closure16).init(self));}};
< };
< class Closure16 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 16\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure17).init(self));}};
< };
< class Closure17 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 17\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< Generating code for ((((\x.x)@(((\x.\y.x)@(\x.\y.\z.((((x)@(z)))@(((y)@(z)))))))))@(((\x.\y.x)@(((\x.\y.\z.((((x)@(z)))@(((y)@(z)))))@(\x.\y.\z.((((x)@(z)))@(((y)@(z))))))))))
< ------------------cut here------------------
< (*Generated by lam.cl (Jeff Foster, March 2000)*)
< class EvalObject inherits IO {
<   eval() : EvalObject { { abort(); self; } };
< };
< class Closure inherits EvalObject {
<   parent : Closure;
<   x : EvalObject;
<   get_parent() : Closure { parent };
<   get_x() : EvalObject { x };
<   init(p : Closure) : Closure {{ parent <- p; self; }};
<   apply(y : EvalObject) : EvalObject { { abort(); self; } };
< };
< class Main {
<   main() : EvalObject {
< (let x : EvalObject <- (let x : EvalObject <- ((new Closure0).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure1).init(new Closure)),
<      y : EvalObject <- ((new Closure2).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure3).init(new Closure)),
<      y : EvalObject <- (let x : EvalObject <- ((new Closure4).init(new Closure)),
<      y : EvalObject <- ((new Closure5).init(new Closure)) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac)
< };
< };
< class Closure5 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 5\n");
<       x <- y;
< ((new Closure6).init(self));}};
< };
< class Closure6 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 6\n");
<       x <- y;
< ((new Closure7).init(self));}};
< };
< class Closure7 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 7\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure4 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 4\n");
<       x <- y;
< ((new Closure8).init(self));}};
< };
< class Closure8 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 8\n");
<       x <- y;
< ((new Closure9).init(self));}};
< };
< class Closure9 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 9\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure3 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 3\n");
<       x <- y;
< ((new Closure10).init(self));}};
< };
< class Closure10 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 10\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure2 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 2\n");
<       x <- y;
< ((new Closure11).init(self));}};
< };
< class Closure11 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 11\n");
<       x <- y;
< ((new Closure12).init(self));}};
< };
< class Closure12 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 12\n");
<       x <- y;
< (let x : EvalObject <- (let x : EvalObject <- get_parent().get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac),
<      y : EvalObject <- (let x : EvalObject <- get_parent().get_x(),
<      y : EvalObject <- get_x() in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac) in
<   case x of
<     c : Closure => c.apply(y);
<     o : Object => { abort(); new EvalObject; };
<   esac);}};
< };
< class Closure1 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 1\n");
<       x <- y;
< ((new Closure13).init(self));}};
< };
< class Closure13 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 13\n");
<       x <- y;
< get_parent().get_x();}};
< };
< class Closure0 inherits Closure {
<   apply(y : EvalObject) : EvalObject {
<     { out_string("Applying closure 0\n");
<       x <- y;
< get_x();}};
< };
< 
< ------------------cut here------------------
< COOL program successfully executed
---
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/lam-gc.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 938 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/lam-gc.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/lam-gc.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/letinit.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/letinit.cl
+ outname=letinit.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/letinit.cl
+ errname=letinit.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.out /home/raj/cool/distro/testsuite/cgen/letinit.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.out /home/raj/cool/distro/testsuite/cgen/letinit.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.out
13c13
< 	.word	3
---
> 	.word	1
15,16d14
< 	.word	4
< _string_tag:
17a16,17
> _string_tag:
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,38c36,38
< str_const8:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	16
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/letinit.cl"
45,46c45,46
< str_const7:
< 	.word	5
---
> str_const8:
> 	.word	2
55c55
< 	.word	5
---
> 	.word	2
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const5:
< 	.word	5
---
> str_const3:
> 	.word	2
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,74c72,74
< str_const4:
< 	.word	5
< 	.word	5
---
> str_const1:
> 	.word	2
> 	.word	6
76,77c76,77
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const6
> 	.ascii	"test\n"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const5:
> 	.word	2
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const5
> 	.ascii	"String"
90,92c90,92
< str_const2:
< 	.word	5
< 	.word	8
---
> str_const7:
> 	.word	2
> 	.word	6
94,95c94,95
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const3
> 	.ascii	"Main"
99,101c99,101
< str_const1:
< 	.word	5
< 	.word	16
---
> str_const2:
> 	.word	2
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/letinit.cl"
---
> 	.ascii	"<basic class>"
108c108,109
< str_const0:
---
> str_const4:
> 	.word	2
110d110
< 	.word	6
113c113
< 	.ascii	"test\n"
---
> 	.ascii	"Int"
117,118c117,118
< int_const8:
< 	.word	3
---
> int_const1:
> 	.word	1
121c121
< 	.word	5
---
> 	.word	0
123,124c123,124
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	1
127c127
< 	.word	47
---
> 	.word	1
129,130c129,130
< int_const6:
< 	.word	3
---
> int_const7:
> 	.word	1
135,136c135,136
< int_const5:
< 	.word	3
---
> int_const4:
> 	.word	1
141,142c141,142
< int_const4:
< 	.word	3
---
> int_const8:
> 	.word	1
147,148c147,148
< int_const3:
< 	.word	3
---
> int_const2:
> 	.word	1
151c151
< 	.word	4
---
> 	.word	47
153,154c153,154
< int_const2:
< 	.word	3
---
> int_const3:
> 	.word	1
157c157
< 	.word	6
---
> 	.word	4
159,160c159,160
< int_const1:
< 	.word	3
---
> int_const6:
> 	.word	1
163c163
< 	.word	0
---
> 	.word	5
165,166c165,166
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	1
169c169
< 	.word	1
---
> 	.word	6
172c172
< 	.word	4
---
> 	.word	5
178c178
< 	.word	4
---
> 	.word	5
191a192,195
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	String_protObj
> 	.word	String_init
196,197d199
< 	.word	Int_protObj
< 	.word	Int_init
200,238c202
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabInt_dispTabString_dispTabIO_dispTabMain_dispTabBool_dispTab	.word	-1
243a208,213
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
245c215
< 	.word	5
---
> 	.word	2
251,262d220
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
264c222
< 	.word	1
---
> 	.word	3
269c227
< 	.word	2
---
> 	.word	4
271a230,235
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
294c258
< String_init:
---
> Int_init:
308c272
< Bool_init:
---
> String_init:
322c286
< Int_init:
---
> IO_init:
336c300
< IO_init:
---
> Main_init:
343c307
< 	jal	Object_init
---
> 	jal	IO_init
350c314
< Main_init:
---
> Bool_init:
357c321
< 	jal	IO_init
---
> 	jal	Object_init
365,368c329,332
< 	addiu	$sp $sp -28
< 	sw	$fp 28($sp)
< 	sw	$s0 24($sp)
< 	sw	$ra 20($sp)
---
> 	addiu	$sp $sp -24
> 	sw	$fp 24($sp)
> 	sw	$s0 20($sp)
> 	sw	$ra 16($sp)
371,456c335,339
< 	la	$s1 bool_const0
< 	la	$s2 int_const1
< 	la	$s3 str_const9
< 	lw	$t1 12($s1)
< 	beqz	$t1 label0
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	b	label1
< label0:
< 	move	$s4 $s2
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s3
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< label1:
< 	lw	$fp 28($sp)
< 	lw	$s0 24($sp)
< 	lw	$ra 20($sp)
< 	addiu	$sp $sp 28
---
> 	move	$a0 null
> 	lw	$fp 24($sp)
> 	lw	$s0 20($sp)
> 	lw	$ra 16($sp)
> 	addiu	$sp $sp 24
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/letinit.cl
+ spim_outname=letinit.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/letinit.cl
+ spim_errname=letinit.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.spim.out
6,9c6,25
< 1test
< COOL program successfully executed
< Stats -- #instructions : 424
<          #reads : 91  #writes 62  #branches 78  #other 193
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.spim.out.filtered
6,7c6,25
< 1test
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/letinit.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 202 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/letinit.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/letinit.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ outname=let-nested.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ errname=let-nested.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.out /home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.out /home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	3
17c17
< 	.word	5
---
> 	.word	4
29c29
< 	.word	5
---
> 	.word	4
36,37c36,37
< str_const8:
< 	.word	5
---
> str_const6:
> 	.word	4
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45c45,46
< str_const7:
---
> str_const4:
> 	.word	4
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const6:
< 	.word	5
< 	.word	5
---
> str_const3:
> 	.word	4
> 	.word	6
59c59
< 	.ascii	"Int"
---
> 	.ascii	"Object"
63c63,64
< str_const5:
---
> str_const1:
> 	.word	4
65d65
< 	.word	6
67,68c67,68
< 	.word	int_const4
< 	.ascii	"Main"
---
> 	.word	int_const1
> 	.ascii	"\n"
72,74c72,74
< str_const4:
< 	.word	5
< 	.word	5
---
> str_const7:
> 	.word	4
> 	.word	6
76,77c76,77
< 	.word	int_const6
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"String"
81,82c81,82
< str_const3:
< 	.word	5
---
> str_const5:
> 	.word	4
86c86
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	4
94c94
< 	.word	int_const7
---
> 	.word	int_const6
99c99,100
< str_const1:
---
> str_const8:
> 	.word	4
101d101
< 	.word	17
103,104c103,104
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/let-nested.cl"
---
> 	.word	int_const7
> 	.ascii	"Int"
109,110c109,110
< 	.word	5
< 	.word	5
---
> 	.word	4
> 	.word	17
112,113c112,113
< 	.word	int_const1
< 	.ascii	"\n"
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/let-nested.cl"
117,118c117,118
< int_const8:
< 	.word	3
---
> int_const2:
> 	.word	5
121c121
< 	.word	50
---
> 	.word	0
123,124c123,124
< int_const7:
< 	.word	3
---
> int_const1:
> 	.word	5
127c127
< 	.word	13
---
> 	.word	1
130c130
< 	.word	3
---
> 	.word	5
133c133
< 	.word	2
---
> 	.word	13
135,136c135,136
< int_const5:
< 	.word	3
---
> int_const4:
> 	.word	5
139c139
< 	.word	3
---
> 	.word	2
141,142c141,142
< int_const4:
< 	.word	3
---
> int_const7:
> 	.word	5
145c145
< 	.word	4
---
> 	.word	3
148c148
< 	.word	3
---
> 	.word	5
151c151
< 	.word	6
---
> 	.word	4
153,154c153,154
< int_const2:
< 	.word	3
---
> int_const0:
> 	.word	5
157c157
< 	.word	0
---
> 	.word	5
159,160c159,160
< int_const1:
< 	.word	3
---
> int_const5:
> 	.word	5
163c163
< 	.word	1
---
> 	.word	6
165,166c165,166
< int_const0:
< 	.word	3
---
> int_const8:
> 	.word	5
169c169
< 	.word	5
---
> 	.word	50
172c172
< 	.word	4
---
> 	.word	3
178c178
< 	.word	4
---
> 	.word	3
196,197d195
< 	.word	Int_protObj
< 	.word	Int_init
202,239c200,202
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.print
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabMain_dispTabBool_dispTabString_dispTabInt_dispTab	.word	-1
245,250c208,216
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const2
< 	.word	0
---
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> Main_protObj:
> 	.word	2
> 	.word	3
> 	.word	Main_dispTab
253c219
< 	.word	4
---
> 	.word	3
257a224,230
> String_protObj:
> 	.word	4
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const2
> 	.word	0
> 	.word	-1
259c232
< 	.word	3
---
> 	.word	5
263,272d235
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Main_protObj:
< 	.word	2
< 	.word	3
< 	.word	Main_dispTab
295c258
< String_init:
---
> IO_init:
309c272
< Bool_init:
---
> Main_init:
316c279
< 	jal	Object_init
---
> 	jal	IO_init
323c286
< Int_init:
---
> Bool_init:
337c300
< IO_init:
---
> String_init:
351c314
< Main_init:
---
> Int_init:
358c321
< 	jal	IO_init
---
> 	jal	Object_init
372,395c335
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
402,405c342,345
< 	addiu	$sp $sp -32
< 	sw	$fp 32($sp)
< 	sw	$s0 28($sp)
< 	sw	$ra 24($sp)
---
> 	addiu	$sp $sp -28
> 	sw	$fp 28($sp)
> 	sw	$s0 24($sp)
> 	sw	$ra 20($sp)
408,409c348,349
< 	la	$s1 int_const0
< 	la	$a0 int_const1
---
> 	la	$a0 int_const0
> 	sw	$a0 0($fp)
414,418c354
< 	move	$s2 $a0
< 	la	$s3 bool_const0
< 	lw	$t1 12($s3)
< 	la	$a0 bool_const1
< 	beqz	$t1 label4
---
> 	sw	$a0 4($fp)
420,457c356,360
< label4:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label2
< 	la	$s4 int_const2
< 	move	$s5 $s4
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s5)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	sw	$s3 8($fp)
< 	sw	$s4 12($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$s3 8($fp)
< 	lw	$s4 12($fp)
< 	b	label3
< label2:
< 	la	$a0 int_const0
< label3:
< 	lw	$fp 32($sp)
< 	lw	$s0 28($sp)
< 	lw	$ra 24($sp)
< 	addiu	$sp $sp 32
---
> 	sw	$a0 8($fp)
> 	lw	$fp 28($sp)
> 	lw	$s0 24($sp)
> 	lw	$ra 20($sp)
> 	addiu	$sp $sp 28
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ spim_outname=let-nested.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/let-nested.cl
+ spim_errname=let-nested.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.spim.out
6,9c6,25
< 1
< COOL program successfully executed
< Stats -- #instructions : 331
<          #reads : 67  #writes 48  #branches 65  #other 151
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.spim.out.filtered
6,7c6,25
< 1
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/let-nested.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 202 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/let-nested.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/let-nested.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ outname=many_objects_on_heap.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ errname=many_objects_on_heap.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.out /home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.out /home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.out
13c13
< 	.word	3
---
> 	.word	5
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,37c36,37
< str_const7:
< 	.word	5
---
> str_const6:
> 	.word	3
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45c45,46
< str_const6:
---
> str_const3:
> 	.word	3
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	3
> 	.word	20
59c59
< 	.ascii	"Int"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	3
67,68c67,68
< 	.word	int_const4
< 	.ascii	"Main"
---
> 	.word	int_const6
> 	.ascii	"Object"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const5:
> 	.word	3
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const4:
> 	.word	3
86c86
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	3
99c99,100
< str_const0:
---
> str_const7:
> 	.word	3
101d101
< 	.word	20
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl"
---
> 	.ascii	"Int"
108,109c108,109
< int_const8:
< 	.word	3
---
> int_const1:
> 	.word	5
112c112
< 	.word	60
---
> 	.word	0
114,115c114,115
< int_const7:
< 	.word	3
---
> int_const2:
> 	.word	5
118c118
< 	.word	13
---
> 	.word	1
120,121c120,121
< int_const6:
< 	.word	3
---
> int_const0:
> 	.word	5
124c124
< 	.word	2
---
> 	.word	100
126,127c126,127
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	5
130c130
< 	.word	3
---
> 	.word	13
133c133
< 	.word	3
---
> 	.word	5
136c136
< 	.word	4
---
> 	.word	2
138,139c138,139
< int_const3:
< 	.word	3
---
> int_const8:
> 	.word	5
142,144d141
< 	.word	6
< 	.word	-1
< int_const2:
145a143,145
> 	.word	-1
> int_const3:
> 	.word	5
148c148
< 	.word	1
---
> 	.word	4
150,151c150,151
< int_const1:
< 	.word	3
---
> int_const6:
> 	.word	5
154c154
< 	.word	0
---
> 	.word	6
156,157c156,157
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	5
160c160
< 	.word	100
---
> 	.word	60
187,190d186
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
193,229c189,193
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTabInt_dispTab	.word	-1
235c199,205
< String_protObj:
---
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> Main_protObj:
> 	.word	2
236a207,212
> 	.word	Main_dispTab
> 	.word	int_const1
> 	.word	int_const1
> 	.word	-1
> String_protObj:
> 	.word	3
249c225
< 	.word	3
---
> 	.word	5
253,264d228
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Main_protObj:
< 	.word	2
< 	.word	5
< 	.word	Main_dispTab
< 	.word	int_const1
< 	.word	int_const1
287c251
< String_init:
---
> IO_init:
301c265
< Bool_init:
---
> Main_init:
308c272,273
< 	jal	Object_init
---
> 	jal	IO_init
> 	la	$a0 int_const0
315c280
< Int_init:
---
> String_init:
329c294
< IO_init:
---
> Bool_init:
343c308
< Main_init:
---
> Int_init:
350,352c315
< 	jal	IO_init
< 	la	$a0 int_const0
< 	sw	$a0 16($s0)
---
> 	jal	Object_init
366,412c329
< label0:
< 	lw	$a0 16($s0)
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const1
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label2
< 	la	$a0 bool_const0
< label2:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label1
< 	la	$a0 Int_protObj
< 	jal	Object.copy
< 	jal	Int_init
< 	sw	$a0 12($s0)
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	move	$s1 $a0
< 	lw	$s1 16($s0)
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	b	label0
< label1:
< 	move	$a0 $zero
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ spim_outname=many_objects_on_heap.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/many_objects_on_heap.cl
+ spim_errname=many_objects_on_heap.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.spim.out
6,8c6,25
< 0COOL program successfully executed
< Stats -- #instructions : 29538
<          #reads : 5946  #writes 4333  #branches 6646  #other 12613
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.spim.out.filtered
6c6,25
< 0COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/many_objects_on_heap.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 193 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/many_objects_on_heap.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/many_objects_on_heap.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ outname=mod-param.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ errname=mod-param.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.out /home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.out /home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.out
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36,38c36,38
< str_const7:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	17
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/mod-param.cl"
45,46c45,46
< str_const6:
< 	.word	5
---
> str_const3:
> 	.word	2
54,55c54,55
< str_const5:
< 	.word	5
---
> str_const6:
> 	.word	2
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const2:
> 	.word	2
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"Object"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const7:
> 	.word	2
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	2
99c99,100
< str_const0:
---
> str_const5:
> 	.word	2
101d101
< 	.word	17
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/mod-param.cl"
---
> 	.ascii	"Int"
108c108
< int_const7:
---
> int_const1:
112c112,118
< 	.word	49
---
> 	.word	0
> 	.word	-1
> int_const0:
> 	.word	3
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
120c126
< int_const5:
---
> int_const4:
126c132
< int_const4:
---
> int_const7:
142,148c148
< 	.word	6
< 	.word	-1
< int_const1:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
---
> 	.word	49
150c150
< int_const0:
---
> int_const5:
154c154
< 	.word	1
---
> 	.word	6
157c157
< 	.word	4
---
> 	.word	1
163c163
< 	.word	4
---
> 	.word	1
177,182d176
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
187,224c181,187
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.f
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabBool_dispTabString_dispTabInt_dispTabIO_dispTabMain_dispTab	.word	-1
229a193,198
> Bool_protObj:
> 	.word	1
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
231c200
< 	.word	5
---
> 	.word	2
237,242d205
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
250c213
< 	.word	1
---
> 	.word	4
255c218
< 	.word	2
---
> 	.word	5
281c244
< String_init:
---
> Bool_init:
295c258
< Bool_init:
---
> String_init:
372,395c335
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ spim_outname=mod-param.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/mod-param.cl
+ spim_errname=mod-param.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.spim.out
6,8c6,25
< 0COOL program successfully executed
< Stats -- #instructions : 180
<          #reads : 36  #writes 28  #branches 32  #other 84
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.spim.out.filtered
6c6,25
< 0COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/mod-param.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 187 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/mod-param.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/mod-param.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ outname=multiple-dispatch.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ errname=multiple-dispatch.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	2
36c36
< str_const8:
---
> str_const5:
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45c45,46
< str_const7:
---
> str_const6:
> 	.word	5
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,55c54
< str_const6:
< 	.word	5
---
> str_const0:
56a56
> 	.word	19
59c59
< 	.ascii	"Int"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl"
63c63
< str_const5:
---
> str_const3:
67,68c67,68
< 	.word	int_const5
< 	.ascii	"Main"
---
> 	.word	int_const7
> 	.ascii	"Object"
72c72,73
< str_const4:
---
> str_const1:
> 	.word	5
73a75,81
> 	.word	String_dispTab
> 	.word	int_const0
> 	.ascii	"\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const8:
74a83
> 	.word	6
77c86
< 	.ascii	"IO"
---
> 	.ascii	"String"
81c90
< str_const3:
---
> str_const7:
86c95
< 	.ascii	"Object"
---
> 	.ascii	"Main"
99,108c108
< str_const1:
< 	.word	5
< 	.word	19
< 	.word	String_dispTab
< 	.word	int_const9
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const0:
---
> str_const4:
112,113c112,113
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const9
> 	.ascii	"Int"
117,118c117,118
< int_const9:
< 	.word	3
---
> int_const3:
> 	.word	1
121c121
< 	.word	57
---
> 	.word	0
123,124c123,124
< int_const8:
< 	.word	3
---
> int_const0:
> 	.word	1
127c127
< 	.word	13
---
> 	.word	1
129,130c129,130
< int_const7:
< 	.word	3
---
> int_const8:
> 	.word	1
133c133
< 	.word	2
---
> 	.word	13
136c136
< 	.word	3
---
> 	.word	1
139c139
< 	.word	3
---
> 	.word	57
142c142
< 	.word	3
---
> 	.word	1
145c145
< 	.word	4
---
> 	.word	2
147,148c147,148
< int_const4:
< 	.word	3
---
> int_const9:
> 	.word	1
151,153d150
< 	.word	6
< 	.word	-1
< int_const3:
155,157d151
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
159,160c153,154
< int_const2:
< 	.word	3
---
> int_const4:
> 	.word	1
163c157
< 	.word	10
---
> 	.word	4
166c160
< 	.word	3
---
> 	.word	1
171,172c165,166
< int_const0:
< 	.word	3
---
> int_const7:
> 	.word	1
174a169,171
> 	.word	6
> 	.word	-1
> int_const2:
175a173,175
> 	.word	4
> 	.word	Int_dispTab
> 	.word	10
178c178
< 	.word	4
---
> 	.word	2
184c184
< 	.word	4
---
> 	.word	2
198,201d197
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
205a202,205
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
208,246c208
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.f
< 	.word	Main.g
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabInt_dispTabBool_dispTabIO_dispTabMain_dispTabString_dispTab	.word	-1
252,256c214,217
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const3
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
260c221
< 	.word	4
---
> 	.word	2
265,270d225
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
272c227
< 	.word	1
---
> 	.word	3
277c232
< 	.word	2
---
> 	.word	4
280a236,242
> 	.word	-1
> String_protObj:
> 	.word	5
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const3
> 	.word	0
303c265
< String_init:
---
> Int_init:
331c293
< Int_init:
---
> IO_init:
345c307
< IO_init:
---
> Main_init:
352c314
< 	jal	Object_init
---
> 	jal	IO_init
359c321
< Main_init:
---
> String_init:
366c328
< 	jal	IO_init
---
> 	jal	Object_init
374,377c336,339
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
380,414c342,346
< 	lw	$s1 12($s0)
< 	lw	$a0 16($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
417,420c349,352
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
423,441c355,359
< 	lw	$s1 12($s0)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 16($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
454,455c372,373
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
458c376
< label2:
---
> label0:
461c379
< 	jalr		$t1
---
> 	jalr	$t1
465,466c383,384
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
469c387
< label3:
---
> label1:
472c390
< 	jalr		$t1
---
> 	jalr	$t1
476,477c394,395
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
480c398
< label4:
---
> label2:
483c401
< 	jalr		$t1
---
> 	jalr	$t1
490,491c408,409
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label3
> 	la	$a0 str_const0
494c412
< label5:
---
> label3:
497c415
< 	jalr		$t1
---
> 	jalr	$t1
501,502c419,420
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label4
> 	la	$a0 str_const0
505c423
< label6:
---
> label4:
508c426
< 	jalr		$t1
---
> 	jalr	$t1
515,516c433,434
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label5
> 	la	$a0 str_const0
519c437
< label7:
---
> label5:
522c440
< 	jalr		$t1
---
> 	jalr	$t1
526,527c444,445
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label6
> 	la	$a0 str_const0
530c448
< label8:
---
> label6:
533,535c451,453
< 	jalr		$t1
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label7
> 	la	$a0 str_const0
538c456
< label9:
---
> label7:
541,543c459,461
< 	jalr		$t1
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label8
> 	la	$a0 str_const0
546c464
< label10:
---
> label8:
549c467
< 	jalr		$t1
---
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ spim_outname=multiple-dispatch.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-dispatch.cl
+ spim_errname=multiple-dispatch.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.spim.out
6,11c6,25
< 13
< 20
< 22
< COOL program successfully executed
< Stats -- #instructions : 1324
<          #reads : 300  #writes 195  #branches 281  #other 548
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.spim.out.filtered
6,9c6,25
< 13
< 20
< 22
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-dispatch.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 208 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-dispatch.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/multiple-dispatch.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ outname=multiple-static-dispatch.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ errname=multiple-static-dispatch.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.out
13c13
< 	.word	5
---
> 	.word	2
15c15
< 	.word	6
---
> 	.word	1
17c17
< 	.word	7
---
> 	.word	3
29c29
< 	.word	7
---
> 	.word	3
36,38c36,38
< str_const10:
< 	.word	7
< 	.word	6
---
> str_const8:
> 	.word	3
> 	.word	5
40,41c40,41
< 	.word	int_const6
< 	.ascii	"String"
---
> 	.word	int_const0
> 	.ascii	"A"
46c46,55
< 	.word	7
---
> 	.word	3
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.ascii	"B"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const4:
> 	.word	3
54,55c63,64
< str_const8:
< 	.word	7
---
> str_const7:
> 	.word	3
58,59c67,68
< 	.word	int_const4
< 	.ascii	"Int"
---
> 	.word	int_const6
> 	.ascii	"IO"
63,65c72,74
< str_const7:
< 	.word	7
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	21
67,68c76,77
< 	.word	int_const1
< 	.ascii	"Main"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl"
72,74c81,83
< str_const6:
< 	.word	7
< 	.word	5
---
> str_const3:
> 	.word	3
> 	.word	6
76,77c85,86
< 	.word	int_const0
< 	.ascii	"B"
---
> 	.word	int_const8
> 	.ascii	"Object"
81,82c90,91
< str_const5:
< 	.word	7
---
> str_const1:
> 	.word	3
86c95
< 	.ascii	"A"
---
> 	.ascii	"\n"
90,92c99,101
< str_const4:
< 	.word	7
< 	.word	5
---
> str_const6:
> 	.word	3
> 	.word	6
94,95c103,104
< 	.word	int_const7
< 	.ascii	"IO"
---
> 	.word	int_const8
> 	.ascii	"String"
99,100c108,109
< str_const3:
< 	.word	7
---
> str_const10:
> 	.word	3
103,104c112,113
< 	.word	int_const6
< 	.ascii	"Object"
---
> 	.word	int_const1
> 	.ascii	"Main"
109c118
< 	.word	7
---
> 	.word	3
112,120d120
< 	.word	int_const8
< 	.ascii	"<basic class>"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const1:
< 	.word	7
< 	.word	21
< 	.word	String_dispTab
122c122
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl"
---
> 	.ascii	"<basic class>"
126,127c126,127
< str_const0:
< 	.word	7
---
> str_const5:
> 	.word	3
130,131c130,131
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const4
> 	.ascii	"Int"
135,136c135,136
< int_const9:
< 	.word	5
---
> int_const5:
> 	.word	2
139c139
< 	.word	64
---
> 	.word	0
141,142c141,142
< int_const8:
< 	.word	5
---
> int_const0:
> 	.word	2
145c145
< 	.word	13
---
> 	.word	1
147,148c147,148
< int_const7:
< 	.word	5
---
> int_const9:
> 	.word	2
151c151
< 	.word	2
---
> 	.word	13
154c154
< 	.word	5
---
> 	.word	2
157c157
< 	.word	6
---
> 	.word	2
159,160c159,160
< int_const5:
< 	.word	5
---
> int_const4:
> 	.word	2
163c163
< 	.word	0
---
> 	.word	3
165,166c165,166
< int_const4:
< 	.word	5
---
> int_const1:
> 	.word	2
169c169
< 	.word	3
---
> 	.word	4
172c172
< 	.word	5
---
> 	.word	2
177,178c177,178
< int_const2:
< 	.word	5
---
> int_const8:
> 	.word	2
181c181
< 	.word	8
---
> 	.word	6
183,184c183,184
< int_const1:
< 	.word	5
---
> int_const2:
> 	.word	2
187c187
< 	.word	4
---
> 	.word	8
189,190c189,190
< int_const0:
< 	.word	5
---
> int_const7:
> 	.word	2
193c193
< 	.word	1
---
> 	.word	64
196c196
< 	.word	6
---
> 	.word	1
202c202
< 	.word	6
---
> 	.word	1
217a218,223
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	String_protObj
> 	.word	String_init
226,288c232
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	A.f
< 	.word	A.g
< B_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	B.f
< 	.word	A.g
< 	.word	-1
---
> Object_dispTabBool_dispTabInt_dispTabString_dispTabIO_dispTabA_dispTabB_dispTabMain_dispTab	.word	-1
294,300d237
< String_protObj:
< 	.word	7
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const5
< 	.word	0
< 	.word	-1
302c239
< 	.word	6
---
> 	.word	1
308c245
< 	.word	5
---
> 	.word	2
313,314c250
< IO_protObj:
< 	.word	1
---
> String_protObj:
316c252,255
< 	.word	IO_dispTab
---
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const5
> 	.word	0
318,319c257
< Main_protObj:
< 	.word	4
---
> IO_protObj:
321,322c259,260
< 	.word	Main_dispTab
< 	.word	0
---
> 	.word	3
> 	.word	IO_dispTab
325c263
< 	.word	2
---
> 	.word	5
331c269
< 	.word	3
---
> 	.word	6
334a273,278
> 	.word	-1
> Main_protObj:
> 	.word	7
> 	.word	4
> 	.word	Main_dispTab
> 	.word	0
357c301
< String_init:
---
> Bool_init:
371c315
< Bool_init:
---
> Int_init:
385c329
< Int_init:
---
> String_init:
413c357
< Main_init:
---
> A_init:
421,424c365
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	jal	B_init
< 	sw	$a0 12($s0)
---
> 	la	$a0 int_const0
431c372
< A_init:
---
> B_init:
438,440c379
< 	jal	IO_init
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
---
> 	jal	A_init
447c386
< B_init:
---
> Main_init:
454c393
< 	jal	A_init
---
> 	jal	IO_init
461c400
< Main.main:
---
> A.f:
468,516c407
< 	la	$a0 int_const4
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t1 12($a0)
< 	neg	$t1 $t1
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	la	$t1 A_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	la	$t1 A_dispTab
< 	lw	$t1 32($t1)
< 	jalr		$t1
---
> 	move	$a0 null
520,565c411
< 	addiu	$sp $sp 12
< 	jr	$ra	
< A.f:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 12($s0)
< 	lw	$a0 16($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp 16
568,610c414,424
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 12($s0)
< 	lw	$a0 16($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
613,655c427,449
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	lw	$s1 12($s0)
< 	lw	$a0 16($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ spim_outname=multiple-static-dispatch.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/multiple-static-dispatch.cl
+ spim_errname=multiple-static-dispatch.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.spim.out
6,12c6,29
< 5
< 13
< 65
< 62
< COOL program successfully executed
< Stats -- #instructions : 778
<          #reads : 172  #writes 118  #branches 154  #other 334
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.spim.out.filtered
6,10c6,29
< 5
< 13
< 65
< 62
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/multiple-static-dispatch.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 232 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/multiple-static-dispatch.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/multiple-static-dispatch.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ outname=nested-arith.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ errname=nested-arith.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.out /home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.out /home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.out
13c13
< 	.word	3
---
> 	.word	5
17c17
< 	.word	5
---
> 	.word	1
29c29
< 	.word	5
---
> 	.word	1
36,37c36,37
< str_const8:
< 	.word	5
---
> str_const7:
> 	.word	1
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45c45,46
< str_const7:
---
> str_const5:
> 	.word	1
47c48,56
< 	.word	6
---
> 	.word	String_dispTab
> 	.word	int_const0
> 	.ascii	"IO"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const0:
> 	.word	1
> 	.word	18
50c59
< 	.ascii	"Bool"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/nested-arith.cl"
54,56c63,65
< str_const6:
< 	.word	5
< 	.word	5
---
> str_const3:
> 	.word	1
> 	.word	6
58,59c67,68
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const6
> 	.ascii	"Object"
63c72,73
< str_const5:
---
> str_const1:
> 	.word	1
65d74
< 	.word	6
67,68c76,77
< 	.word	int_const5
< 	.ascii	"Main"
---
> 	.word	int_const1
> 	.ascii	"\n"
73,74c82,83
< 	.word	5
< 	.word	5
---
> 	.word	1
> 	.word	6
76,77c85,86
< 	.word	int_const0
< 	.ascii	"IO"
---
> 	.word	int_const6
> 	.ascii	"String"
81,82c90,91
< str_const3:
< 	.word	5
---
> str_const6:
> 	.word	1
86c95
< 	.ascii	"Object"
---
> 	.ascii	"Main"
91c100
< 	.word	5
---
> 	.word	1
94c103
< 	.word	int_const6
---
> 	.word	int_const7
99c108,109
< str_const1:
---
> str_const8:
> 	.word	1
101d110
< 	.word	18
103,104c112,113
< 	.word	int_const7
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/nested-arith.cl"
---
> 	.word	int_const2
> 	.ascii	"Int"
108,109c117
< str_const0:
< 	.word	5
---
> int_const3:
111,118d118
< 	.word	String_dispTab
< 	.word	int_const1
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const7:
< 	.word	3
121c121
< 	.word	52
---
> 	.word	0
123,124c123,124
< int_const6:
< 	.word	3
---
> int_const1:
> 	.word	5
127c127
< 	.word	13
---
> 	.word	1
129,130c129,130
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	5
133c133
< 	.word	4
---
> 	.word	13
135,136c135,136
< int_const4:
< 	.word	3
---
> int_const0:
> 	.word	5
139c139
< 	.word	6
---
> 	.word	2
141,142c141,142
< int_const3:
< 	.word	3
---
> int_const2:
> 	.word	5
145,147d144
< 	.word	0
< 	.word	-1
< int_const2:
148a146,148
> 	.word	-1
> int_const4:
> 	.word	5
151c151
< 	.word	3
---
> 	.word	4
153,154c153,154
< int_const1:
< 	.word	3
---
> int_const6:
> 	.word	5
157c157
< 	.word	1
---
> 	.word	6
159,160c159,160
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	5
163c163
< 	.word	2
---
> 	.word	52
185a186,187
> 	.word	String_protObj
> 	.word	String_init
190,191d191
< 	.word	Int_protObj
< 	.word	Int_init
194,232c194,196
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabString_dispTabIO_dispTabMain_dispTabBool_dispTabInt_dispTab	.word	-1
239c203
< 	.word	5
---
> 	.word	1
245,256d208
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
258c210
< 	.word	1
---
> 	.word	2
263c215
< 	.word	2
---
> 	.word	3
268a221,232
> 	.word	-1
> Bool_protObj:
> 	.word	4
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> Int_protObj:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
305c269
< Bool_init:
---
> IO_init:
319c283
< Int_init:
---
> Main_init:
326c290,293
< 	jal	Object_init
---
> 	jal	IO_init
> 	la	$a0 int_const0
> 	la	$a0 int_const1
> 	la	$a0 int_const2
333c300
< IO_init:
---
> Bool_init:
347c314
< Main_init:
---
> Int_init:
354,360c321
< 	jal	IO_init
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
< 	la	$a0 int_const1
< 	sw	$a0 16($s0)
< 	la	$a0 int_const2
< 	sw	$a0 20($s0)
---
> 	jal	Object_init
368,371c329,332
< 	addiu	$sp $sp -2156
< 	sw	$fp 2156($sp)
< 	sw	$s0 2152($sp)
< 	sw	$ra 2148($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
374,6770c335,339
< 	lw	$s1 12($s0)
< 	lw	$s2 16($s0)
< 	lw	$s3 12($s0)
< 	lw	$s4 16($s0)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s3 $a0
< 	lw	$s4 16($s0)
< 	lw	$s5 12($s0)
< 	lw	$s6 16($s0)
< 	lw	$a0 12($s0)
< 	sw	$a0 24($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 28($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 28($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 24($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 28($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 32($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 36($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 40($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 44($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 44($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 40($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 40($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 44($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 48($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 52($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 56($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 60($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 60($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 56($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 56($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 60($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 64($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 68($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 72($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 76($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 76($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 72($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 72($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 76($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 80($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 84($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 88($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 92($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 92($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 88($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 88($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 92($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 96($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 100($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 104($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 108($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 108($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 104($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 104($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 108($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 112($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 116($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 120($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 124($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 124($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 120($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 120($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 124($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 128($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 132($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 136($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 140($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 140($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 136($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 136($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 140($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 144($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 148($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 152($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 156($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 156($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 152($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 152($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 156($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 160($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 164($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 168($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 172($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 172($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 168($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 168($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 172($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 176($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 180($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 184($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 188($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 188($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 184($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 184($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 188($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 192($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 196($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 200($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 204($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 204($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 200($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 200($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 204($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 208($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 212($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 216($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 220($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 220($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 216($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 216($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 220($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 224($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 228($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 232($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 236($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 236($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 232($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 232($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 236($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 240($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 244($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 248($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 252($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 252($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 248($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 248($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 252($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 256($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 260($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 264($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 268($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 268($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 264($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 264($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 268($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 272($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 276($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 280($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 284($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 284($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 280($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 280($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 284($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 288($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 292($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 296($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 300($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 300($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 296($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 296($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 300($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 304($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 308($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 312($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 316($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 316($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 312($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 312($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 316($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 320($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 324($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 328($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 332($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 332($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 328($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 328($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 332($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 336($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 340($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 344($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 348($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 348($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 344($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 344($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 348($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 352($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 356($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 360($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 364($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 364($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 360($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 360($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 364($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 368($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 372($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 376($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 380($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 380($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 376($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 376($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 380($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 384($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 388($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 392($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 396($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 396($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 392($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 392($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 396($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 400($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 404($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 408($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 412($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 412($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 408($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 408($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 412($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 416($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 420($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 424($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 428($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 428($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 424($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 424($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 428($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 432($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 436($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 440($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 444($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 444($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 440($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 440($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 444($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 448($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 452($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 456($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 460($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 460($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 456($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 456($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 460($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 464($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 468($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 472($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 476($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 476($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 472($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 472($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 476($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 480($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 484($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 488($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 492($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 492($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 488($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 488($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 492($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 496($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 500($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 504($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 508($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 508($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 504($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 504($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 508($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 512($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 516($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 520($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 524($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 524($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 520($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 520($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 524($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 528($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 532($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 536($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 540($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 540($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 536($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 536($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 540($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 544($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 548($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 552($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 556($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 556($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 552($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 552($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 556($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 560($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 564($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 568($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 572($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 572($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 568($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 568($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 572($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 576($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 580($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 584($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 588($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 588($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 584($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 584($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 588($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 592($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 596($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 600($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 604($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 604($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 600($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 600($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 604($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 608($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 612($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 616($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 620($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 624($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 628($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 632($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 636($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 636($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 632($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 632($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 636($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 640($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 644($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 648($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 652($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 652($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 648($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 648($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 652($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 656($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 660($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 664($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 668($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 668($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 664($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 664($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 668($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 672($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 676($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 680($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 684($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 684($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 680($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 680($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 684($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 688($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 692($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 696($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 700($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 700($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 696($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 696($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 700($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 704($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 708($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 712($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 716($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 716($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 712($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 712($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 716($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 720($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 724($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 728($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 732($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 732($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 728($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 728($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 732($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 736($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 740($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 744($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 748($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 748($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 744($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 744($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 748($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 752($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 756($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 760($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 764($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 764($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 760($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 760($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 764($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 768($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 772($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 776($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 780($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 780($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 776($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 776($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 780($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 784($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 788($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 792($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 796($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 796($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 792($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 792($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 796($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 800($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 804($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 808($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 812($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 812($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 808($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 808($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 812($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 816($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 820($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 824($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 828($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 828($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 824($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 824($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 828($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 832($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 836($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 840($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 844($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 844($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 840($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 840($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 844($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 848($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 852($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 856($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 860($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 860($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 856($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 856($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 860($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 864($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 868($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 872($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 876($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 876($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 872($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 872($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 876($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 880($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 884($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 888($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 892($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 892($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 888($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 888($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 892($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 896($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 900($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 904($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 908($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 908($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 904($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 904($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 908($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 912($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 916($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 920($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 924($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 924($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 920($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 920($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 924($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 928($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 932($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 936($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 940($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 940($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 936($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 936($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 940($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 944($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 948($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 952($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 956($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 956($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 952($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 952($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 956($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 960($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 964($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 968($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 972($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 972($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 968($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 968($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 972($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 976($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 980($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 984($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 988($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 988($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 984($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 984($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 988($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 992($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 996($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1000($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1004($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1004($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1000($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1000($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1004($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1008($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1012($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1016($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1020($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1020($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1016($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1016($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1020($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1024($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1028($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1032($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1036($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1036($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1032($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1032($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1036($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1040($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1044($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1048($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1052($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1052($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1048($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1048($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1052($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1056($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1060($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1064($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1068($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1068($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1064($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1064($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1068($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1072($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1076($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1080($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1084($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1084($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1080($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1080($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1084($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1088($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1092($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1096($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1100($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1100($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1096($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1096($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1100($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1104($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1108($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1112($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1116($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1116($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1112($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1112($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1116($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1120($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1124($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1128($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1132($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1132($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1128($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1128($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1132($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1136($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1140($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1144($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1148($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1148($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1144($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1144($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1148($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1152($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1156($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1160($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1164($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1164($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1160($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1160($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1164($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1168($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1172($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1176($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1180($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1180($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1176($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1176($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1180($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1184($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1188($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1192($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1196($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1196($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1192($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1192($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1196($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1200($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1204($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1208($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1212($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1212($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1208($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1208($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1212($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1216($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1220($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1224($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1228($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1228($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1224($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1224($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1228($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1232($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1236($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1240($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1244($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1244($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1240($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1240($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1244($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1248($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1252($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1256($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1260($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1260($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1256($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1256($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1260($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1264($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1268($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1272($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1276($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1276($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1272($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1272($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1276($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1280($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1284($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1288($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1292($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1292($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1288($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1288($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1292($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1296($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1300($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1304($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1308($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1308($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1304($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1304($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1308($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1312($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1316($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1320($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1324($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1324($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1320($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1320($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1324($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1328($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1332($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1336($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1340($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1340($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1336($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1336($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1340($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1344($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1348($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1352($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1356($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1356($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1352($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1352($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1356($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1360($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1364($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1368($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1372($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1372($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1368($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1368($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1372($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1376($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1380($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1384($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1388($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1388($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1384($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1384($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1388($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1392($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1396($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1400($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1404($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1404($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1400($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1400($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1404($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1408($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1412($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1416($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1420($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1420($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1416($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1416($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1420($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1424($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1428($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1432($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1436($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1436($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1432($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1432($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1436($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1440($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1444($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1448($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1452($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1452($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1448($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1448($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1452($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1456($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1460($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1464($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1468($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1468($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1464($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1464($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1468($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1472($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1476($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1480($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1484($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1484($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1480($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1480($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1484($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1488($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1492($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1496($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1500($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1500($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1496($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1496($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1500($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1504($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1508($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1512($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1516($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1516($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1512($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1512($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1516($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1520($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1524($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1528($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1532($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1532($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1528($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1528($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1532($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1536($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1540($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1544($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1548($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1548($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1544($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1544($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1548($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1552($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1556($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1560($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1564($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1564($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1560($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1560($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1564($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1568($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1572($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1576($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1580($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1580($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1576($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1576($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1580($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1584($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1588($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1592($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1596($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1596($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1592($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1592($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1596($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1600($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1604($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1608($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1612($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1612($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1608($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1608($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1612($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1616($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1620($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1624($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1628($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1628($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1624($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1624($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1628($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1632($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1636($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1640($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1644($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1644($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1640($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1640($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1644($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1648($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1652($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1656($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1660($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1660($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1656($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1656($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1660($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1664($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1668($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1672($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1676($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1676($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1672($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1672($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1676($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1680($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1684($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1688($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1692($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1696($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1700($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1704($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1708($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1708($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1704($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1704($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1708($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1712($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1716($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1720($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1724($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1724($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1720($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1720($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1724($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1728($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1732($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1736($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1740($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1740($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1736($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1736($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1740($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1744($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1748($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1752($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1756($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1756($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1752($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1752($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1756($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1760($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1764($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1768($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1772($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1772($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1768($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1768($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1772($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1776($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1780($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1784($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1788($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1788($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1784($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1784($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1788($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1792($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1796($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1800($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1804($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1804($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1800($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1800($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1804($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1808($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1812($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1816($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1820($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1820($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1816($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1816($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1820($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1824($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1828($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1832($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1836($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1836($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1832($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1832($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1836($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1840($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1844($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1848($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1852($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1852($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1848($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1848($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1852($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1856($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1860($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1864($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1868($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1868($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1864($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1864($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1868($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1872($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1876($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1880($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1884($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1884($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1880($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1880($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1884($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1888($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1892($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1896($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1900($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1900($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1896($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1896($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1900($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1904($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1908($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1912($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1916($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1916($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1912($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1912($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1916($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1920($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1924($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1928($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1932($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1932($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1928($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1928($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1932($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1936($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1940($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1944($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1948($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1948($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1944($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1944($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1948($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1952($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1956($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1960($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1964($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1964($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1960($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1960($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1964($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1968($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1972($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1976($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1980($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1980($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1976($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1976($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1980($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1984($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1988($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 1992($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1996($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 1996($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1992($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 1992($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 1996($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2000($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2004($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2008($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2012($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2012($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2008($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2008($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2012($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2016($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2020($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2024($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2028($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2028($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2024($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2024($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2028($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2032($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2036($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2040($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2044($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2044($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2040($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2040($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2044($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2048($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2052($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2056($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2060($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2060($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2056($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2056($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2060($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2064($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2068($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2072($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2076($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2076($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2072($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2072($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2076($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2080($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2084($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2088($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2092($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2092($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2088($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2088($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2092($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2096($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2100($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2104($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2108($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2108($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2104($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2104($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2108($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2112($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2116($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2120($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2124($fp)
< 	lw	$a0 12($s0)
< 	jal	Object.copy
< 	lw	$t1 2124($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2120($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 2120($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2124($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2128($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2132($fp)
< 	lw	$a0 12($s0)
< 	sw	$a0 2136($fp)
< 	lw	$a0 16($s0)
< 	sw	$a0 2140($fp)
< 	lw	$a0 20($s0)
< 	jal	Object.copy
< 	lw	$t1 2140($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2136($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2132($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2128($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2124($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2120($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2116($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2112($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2108($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2104($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2100($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2096($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2092($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2088($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2084($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2080($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2076($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2072($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2068($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2064($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2060($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2056($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2052($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2048($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2044($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2040($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2036($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2032($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2028($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2024($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2020($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2016($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2012($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2008($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2004($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 2000($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1996($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1992($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1988($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1984($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1980($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1976($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1972($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1968($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1964($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1960($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1956($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1952($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1948($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1944($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1940($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1936($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1932($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1928($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1924($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1920($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1916($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1912($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1908($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1904($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1900($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1896($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1892($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1888($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1884($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1880($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1876($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1872($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1868($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1864($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1860($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1856($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1852($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1848($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1844($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1840($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1836($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1832($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1828($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1824($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1820($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1816($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1812($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1808($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1804($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1800($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1796($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1792($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1788($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1784($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1780($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1776($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1772($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1768($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1764($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1760($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1756($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1752($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1748($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1744($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1740($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1736($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1732($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1728($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1724($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1720($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1716($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1712($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1708($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1704($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1700($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1696($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1692($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1688($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1684($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1680($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1676($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1672($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1668($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1664($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1660($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1656($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1652($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1648($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1644($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1640($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1636($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1632($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1628($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1624($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1620($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1616($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1612($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1608($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1604($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1600($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1596($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1592($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1588($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1584($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1580($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1576($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1572($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1568($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1564($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1560($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1556($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1552($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1548($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1544($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1540($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1536($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1532($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1528($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1524($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1520($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1516($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1512($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1508($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1504($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1500($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1496($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1492($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1488($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1484($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1480($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1476($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1472($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1468($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1464($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1460($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1456($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1452($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1448($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1444($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1440($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1436($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1432($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1428($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1424($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1420($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1416($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1412($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1408($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1404($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1400($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1396($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1392($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1388($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1384($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1380($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1376($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1372($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1368($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1364($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1360($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1356($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1352($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1348($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1344($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1340($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1336($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1332($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1328($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1324($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1320($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1316($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1312($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1308($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1304($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1300($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1296($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1292($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1288($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1284($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1280($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1276($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1272($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1268($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1264($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1260($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1256($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1252($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1248($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1244($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1240($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1236($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1232($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1228($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1224($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1220($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1216($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1212($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1208($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1204($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1200($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1196($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1192($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1188($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1184($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1180($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1176($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1172($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1168($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1164($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1160($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1156($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1152($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1148($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1144($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1140($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1136($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1132($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1128($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1124($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1120($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1116($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1112($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1108($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1104($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1100($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1096($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1092($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1088($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1084($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1080($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1076($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1072($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1068($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1064($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1060($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1056($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1052($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1048($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1044($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1040($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1036($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1032($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1028($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1024($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1020($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1016($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1012($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1008($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1004($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 1000($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 996($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 992($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 988($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 984($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 980($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 976($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 972($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 968($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 964($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 960($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 956($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 952($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 948($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 944($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 940($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 936($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 932($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 928($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 924($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 920($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 916($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 912($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 908($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 904($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 900($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 896($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 892($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 888($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 884($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 880($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 876($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 872($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 868($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 864($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 860($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 856($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 852($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 848($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 844($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 840($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 836($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 832($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 828($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 824($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 820($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 816($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 812($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 808($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 804($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 800($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 796($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 792($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 788($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 784($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 780($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 776($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 772($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 768($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 764($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 760($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 756($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 752($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 748($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 744($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 740($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 736($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 732($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 728($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 724($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 720($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 716($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 712($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 708($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 704($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 700($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 696($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 692($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 688($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 684($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 680($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 676($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 672($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 668($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 664($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 660($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 656($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 652($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 648($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 644($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 640($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 636($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 632($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 628($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 624($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 620($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 616($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 612($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 608($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 604($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 600($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 596($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 592($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 588($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 584($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 580($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 576($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 572($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 568($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 564($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 560($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 556($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 552($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 548($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 544($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 540($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 536($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 532($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 528($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 524($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 520($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 516($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 512($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 508($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 504($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 500($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 496($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 492($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 488($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 484($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 480($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 476($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 472($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 468($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 464($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 460($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 456($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 452($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 448($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 444($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 440($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 436($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 432($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 428($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 424($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 420($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 416($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 412($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 408($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 404($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 400($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 396($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 392($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 388($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 384($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 380($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 376($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 372($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 368($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 364($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 360($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 356($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 352($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 348($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 344($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 340($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 336($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 332($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 328($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 324($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 320($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 316($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 312($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 308($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 304($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 300($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 296($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 292($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 288($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 284($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 280($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 276($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 272($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 268($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 264($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 260($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 256($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 252($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 248($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 244($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 240($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 236($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 232($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 228($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 224($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 220($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 216($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 212($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 208($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 204($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 200($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 196($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 192($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 188($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 184($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 180($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 176($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 172($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 168($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 164($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 160($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 156($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 152($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 148($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 144($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 140($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 136($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 132($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 128($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 124($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 120($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 116($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 112($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 108($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 104($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 100($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 96($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 92($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 88($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 84($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 80($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 76($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 72($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 68($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 64($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 60($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 56($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 52($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 48($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 44($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 40($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 36($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 32($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 28($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t1 24($fp)
< 	lw	$t2 12($a0)
< 	lw	$t1 12($t1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s6)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s5)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s4)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 2156($sp)
< 	lw	$s0 2152($sp)
< 	lw	$ra 2148($sp)
< 	addiu	$sp $sp 2156
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ spim_outname=nested-arith.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/nested-arith.cl
+ spim_errname=nested-arith.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.spim.out
6,9c6,25
< 801
< COOL program successfully executed
< Stats -- #instructions : 49257
<          #reads : 11200  #writes 7204  #branches 11206  #other 19647
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.spim.out.filtered
6,7c6,25
< 801
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/nested-arith.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 196 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/nested-arith.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/nested-arith.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ outname=newbasic.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ errname=newbasic.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.out /home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.out /home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.out
13,14d12
< 	.word	2
< _bool_tag:
15a14,15
> _bool_tag:
> 	.word	2
36c36
< str_const8:
---
> str_const5:
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
45c45
< str_const7:
---
> str_const4:
47c47
< 	.word	6
---
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54c54
< str_const6:
---
> str_const3:
58,59c58,59
< 	.word	int_const2
< 	.ascii	"Bool"
---
> 	.word	int_const4
> 	.ascii	"Object"
63c63
< str_const5:
---
> str_const1:
67,68c67,68
< 	.word	int_const4
< 	.ascii	"Int"
---
> 	.word	int_const0
> 	.ascii	"\n"
72c72
< str_const4:
---
> str_const7:
74c74
< 	.word	5
---
> 	.word	6
76,77c76,77
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const4
> 	.ascii	"String"
81c81
< str_const3:
---
> str_const8:
85,86c85,86
< 	.word	int_const3
< 	.ascii	"Object"
---
> 	.word	int_const2
> 	.ascii	"Main"
94c94
< 	.word	int_const6
---
> 	.word	int_const5
99c99
< str_const1:
---
> str_const0:
103c103
< 	.word	int_const7
---
> 	.word	int_const6
108c108
< str_const0:
---
> str_const6:
112,113c112,113
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const7
> 	.ascii	"Int"
117,118c117,118
< int_const7:
< 	.word	2
---
> int_const1:
> 	.word	3
121c121
< 	.word	48
---
> 	.word	0
123,124c123,124
< int_const6:
< 	.word	2
---
> int_const0:
> 	.word	3
127c127
< 	.word	13
---
> 	.word	1
130c130
< 	.word	2
---
> 	.word	3
133c133
< 	.word	2
---
> 	.word	13
135c135,138
< int_const4:
---
> int_const3:
> 	.word	3
> 	.word	4
> 	.word	Int_dispTab
136a140,142
> 	.word	-1
> int_const7:
> 	.word	3
141,142c147,148
< int_const3:
< 	.word	2
---
> int_const6:
> 	.word	3
145c151
< 	.word	6
---
> 	.word	48
148c154
< 	.word	2
---
> 	.word	3
153,160c159,160
< int_const1:
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
< int_const0:
< 	.word	2
---
> int_const4:
> 	.word	3
163c163
< 	.word	1
---
> 	.word	6
166c166
< 	.word	3
---
> 	.word	2
172c172
< 	.word	3
---
> 	.word	2
188,189d187
< 	.word	Int_protObj
< 	.word	Int_init
191a190,191
> 	.word	Int_protObj
> 	.word	Int_init
196,228c196
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> Object_dispTabIO_dispTabBool_dispTabInt_dispTabString_dispTabMain_dispTab	.word	-1
234,235c202,208
< Main_protObj:
< 	.word	5
---
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> Bool_protObj:
> 	.word	2
237c210,216
< 	.word	Main_dispTab
---
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> Int_protObj:
> 	.word	3
> 	.word	4
> 	.word	Int_dispTab
247,254c226,227
< Bool_protObj:
< 	.word	3
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	2
---
> Main_protObj:
> 	.word	5
256c229
< 	.word	Int_dispTab
---
> 	.word	Main_dispTab
258,262d230
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
285c253
< Main_init:
---
> IO_init:
293,296d260
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	sw	$a0 12($s0)
303c267
< String_init:
---
> Bool_init:
317c281
< Bool_init:
---
> Int_init:
331c295
< Int_init:
---
> String_init:
345c309
< IO_init:
---
> Main_init:
360,363c324,327
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
366,489c330,334
< 	la	$a0 Bool_protObj
< 	jal	Object.copy
< 	jal	Bool_init
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label0
< 	la	$a0 bool_const0
< label0:
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 Int_protObj
< 	jal	Object.copy
< 	jal	Int_init
< 	move	$s1 $a0
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 String_protObj
< 	jal	Object.copy
< 	jal	String_init
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ spim_outname=newbasic.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/newbasic.cl
+ spim_errname=newbasic.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.spim.out
6,11c6,25
< Bool
< 1
< String
< COOL program successfully executed
< Stats -- #instructions : 850
<          #reads : 176  #writes 123  #branches 174  #other 377
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.spim.out.filtered
6,9c6,25
< Bool
< 1
< String
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/newbasic.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 196 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/newbasic.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/newbasic.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ outname=new-self-dispatch.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ errname=new-self-dispatch.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.out /home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.out
13c13
< 	.word	4
---
> 	.word	1
15c15
< 	.word	5
---
> 	.word	2
17c17
< 	.word	6
---
> 	.word	3
29c29
< 	.word	6
---
> 	.word	3
36,37c36,37
< str_const11:
< 	.word	6
---
> str_const10:
> 	.word	3
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Derived"
45,47c45,47
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	19
50,59c50
< 	.ascii	"String"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	6
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl"
64c55
< 	.word	6
---
> 	.word	3
68c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
73c64
< 	.word	6
---
> 	.word	3
77c68
< 	.ascii	"Derived"
---
> 	.ascii	"String"
81,82c72,73
< str_const6:
< 	.word	6
---
> str_const1:
> 	.word	3
85,86c76,77
< 	.word	int_const1
< 	.ascii	"Base"
---
> 	.word	int_const5
> 	.ascii	"base\n"
90,92c81,83
< str_const5:
< 	.word	6
< 	.word	5
---
> str_const3:
> 	.word	3
> 	.word	8
94,95c85,86
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
99,100c90,91
< str_const4:
< 	.word	6
---
> str_const9:
> 	.word	3
103,104c94,95
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const7
> 	.ascii	"Base"
108,110c99,101
< str_const3:
< 	.word	6
< 	.word	8
---
> str_const5:
> 	.word	3
> 	.word	5
112,113c103,104
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const8
> 	.ascii	"Int"
117c108,109
< str_const2:
---
> str_const6:
> 	.word	3
119d110
< 	.word	7
122c113
< 	.ascii	"derived\n"
---
> 	.ascii	"Bool"
126c117,118
< str_const1:
---
> str_const4:
> 	.word	3
128d119
< 	.word	19
130,131c121,122
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl"
---
> 	.word	int_const4
> 	.ascii	"Object"
135,136c126,127
< str_const0:
< 	.word	6
---
> str_const11:
> 	.word	3
138a130,138
> 	.word	int_const7
> 	.ascii	"Main"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const2:
> 	.word	3
> 	.word	7
> 	.word	String_dispTab
140c140
< 	.ascii	"base\n"
---
> 	.ascii	"derived\n"
144,145c144,145
< int_const9:
< 	.word	4
---
> int_const0:
> 	.word	1
148c148
< 	.word	5
---
> 	.word	0
150,151c150,151
< int_const8:
< 	.word	4
---
> int_const6:
> 	.word	1
154c154
< 	.word	57
---
> 	.word	13
156,157c156,157
< int_const7:
< 	.word	4
---
> int_const3:
> 	.word	1
160c160
< 	.word	8
---
> 	.word	2
162,163c162,163
< int_const6:
< 	.word	4
---
> int_const2:
> 	.word	1
166c166
< 	.word	13
---
> 	.word	57
168,169c168,169
< int_const5:
< 	.word	4
---
> int_const8:
> 	.word	1
172c172
< 	.word	2
---
> 	.word	3
174,175c174,175
< int_const4:
< 	.word	4
---
> int_const7:
> 	.word	1
178,180d177
< 	.word	7
< 	.word	-1
< int_const3:
181a179,181
> 	.word	-1
> int_const5:
> 	.word	1
184c184
< 	.word	3
---
> 	.word	5
186,187c186,187
< int_const2:
< 	.word	4
---
> int_const4:
> 	.word	1
193c193
< 	.word	4
---
> 	.word	1
196c196
< 	.word	4
---
> 	.word	7
198,199c198,199
< int_const0:
< 	.word	4
---
> int_const9:
> 	.word	1
202c202
< 	.word	0
---
> 	.word	8
205c205
< 	.word	5
---
> 	.word	2
211c211
< 	.word	5
---
> 	.word	2
227,232d226
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Base_protObj
< 	.word	Base_init
< 	.word	Derived_protObj
< 	.word	Derived_init
238a233,238
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Base_protObj
> 	.word	Base_init
> 	.word	Derived_protObj
> 	.word	Derived_init
241,293c241
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< 	.word	Base.duplicate
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Derived.identify
< 	.word	Base.duplicate
< 	.word	-1
---
> Object_dispTabInt_dispTabBool_dispTabString_dispTabIO_dispTabBase_dispTabDerived_dispTabMain_dispTab	.word	-1
299,308c247,250
< Main_protObj:
< 	.word	7
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
< String_protObj:
< 	.word	6
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
312c254
< 	.word	5
---
> 	.word	2
317,320c259,263
< Int_protObj:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	3
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
324c267
< 	.word	1
---
> 	.word	4
329c272
< 	.word	2
---
> 	.word	5
334c277
< 	.word	3
---
> 	.word	6
336a280,284
> 	.word	-1
> Main_protObj:
> 	.word	7
> 	.word	3
> 	.word	Main_dispTab
359,373c307
< Main_init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	jal	Object_init
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< String_init:
---
> Int_init:
401c335
< Int_init:
---
> String_init:
457c391
< Main.main:
---
> Main_init:
464,482c398,399
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
---
> 	jal	Object_init
> 	move	$a0 $s0
495c412
< 	la	$a0 str_const0
---
> 	la	$a0 str_const1
499,500c416,417
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
503c420
< label2:
---
> label0:
506c423
< 	jalr		$t1
---
> 	jalr	$t1
519,527d435
< 	la	$t1 class_objTab
< 	lw	$t2 0($s0)
< 	sll	$t2 $t2 3
< 	addu	$t1 $t1 $t2
< 	move	$s1 $t1
< 	lw	$a0 0($t1)
< 	jal	Object.copy
< 	lw	$t1 4($s1)
< 	jalr		$t1
543a452,479
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label1:
> 	lw	$t1 8($a0)
> 	lw	$t1 12($t1)
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label2:
> 	lw	$t1 8($a0)
> 	lw	$t1 32($t1)
> 	jalr	$t1
545c481
< 	la	$a0 str_const1
---
> 	la	$a0 str_const0
550,551c486,487
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	lw	$t1 28($t1)
> 	jalr	$t1
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ spim_outname=new-self-dispatch.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-dispatch.cl
+ spim_errname=new-self-dispatch.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.spim.out
6,9c6,29
< derived
< COOL program successfully executed
< Stats -- #instructions : 383
<          #reads : 79  #writes 61  #branches 74  #other 169
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.spim.out.filtered
6,7c6,29
< derived
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-dispatch.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 241 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-dispatch.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/new-self-dispatch.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ outname=new-self-init.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ errname=new-self-init.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.out /home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.out /home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.out
13c13
< 	.word	4
---
> 	.word	1
15c15
< 	.word	5
---
> 	.word	4
17c17
< 	.word	6
---
> 	.word	3
29c29
< 	.word	6
---
> 	.word	3
36,37c36,37
< str_const12:
< 	.word	6
---
> str_const2:
> 	.word	3
40,41c40,41
< 	.word	int_const5
< 	.ascii	"Main"
---
> 	.word	int_const2
> 	.ascii	"old: "
45,46c45,46
< str_const11:
< 	.word	6
---
> str_const12:
> 	.word	3
49,50c49,50
< 	.word	int_const6
< 	.ascii	"String"
---
> 	.word	int_const5
> 	.ascii	"Derived"
55,56c55,56
< 	.word	6
< 	.word	6
---
> 	.word	3
> 	.word	5
58,59c58,59
< 	.word	int_const5
< 	.ascii	"Bool"
---
> 	.word	int_const1
> 	.ascii	"IO"
63,64c63,64
< str_const9:
< 	.word	6
---
> str_const1:
> 	.word	3
67,68c67,68
< 	.word	int_const7
< 	.ascii	"Int"
---
> 	.word	int_const0
> 	.ascii	"\n"
73c73
< 	.word	6
---
> 	.word	3
76,77c76,77
< 	.word	int_const8
< 	.ascii	"Derived"
---
> 	.word	int_const6
> 	.ascii	"String"
81,83c81,83
< str_const7:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	18
85,86c85,86
< 	.word	int_const5
< 	.ascii	"Base"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/new-self-init.cl"
90,92c90,92
< str_const6:
< 	.word	6
< 	.word	5
---
> str_const4:
> 	.word	3
> 	.word	8
94,95c94,95
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const8
> 	.ascii	"<basic class>"
99,100c99,100
< str_const5:
< 	.word	6
---
> str_const11:
> 	.word	3
103,104c103,104
< 	.word	int_const6
< 	.ascii	"Object"
---
> 	.word	int_const9
> 	.ascii	"Base"
108,110c108,110
< str_const4:
< 	.word	6
< 	.word	8
---
> str_const6:
> 	.word	3
> 	.word	5
112,113c112,113
< 	.word	int_const9
< 	.ascii	"<basic class>"
---
> 	.word	int_const10
> 	.ascii	"Int"
118c118
< 	.word	6
---
> 	.word	3
121c121
< 	.word	int_const10
---
> 	.word	int_const11
126,127c126,127
< str_const2:
< 	.word	6
---
> str_const9:
> 	.word	3
130,131c130,131
< 	.word	int_const2
< 	.ascii	"old: "
---
> 	.word	int_const9
> 	.ascii	"Bool"
135c135,136
< str_const1:
---
> str_const5:
> 	.word	3
137d137
< 	.word	18
139,140c139,140
< 	.word	int_const11
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/new-self-init.cl"
---
> 	.word	int_const6
> 	.ascii	"Object"
144c144,145
< str_const0:
---
> str_const7:
> 	.word	3
146d146
< 	.word	5
148,149c148,149
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const9
> 	.ascii	"Main"
153,154c153,154
< int_const11:
< 	.word	4
---
> int_const4:
> 	.word	1
157c157
< 	.word	53
---
> 	.word	0
159,160c159,160
< int_const10:
< 	.word	4
---
> int_const0:
> 	.word	1
163c163
< 	.word	8
---
> 	.word	1
165,166c165,166
< int_const9:
< 	.word	4
---
> int_const8:
> 	.word	1
171,172c171,172
< int_const8:
< 	.word	4
---
> int_const1:
> 	.word	1
175c175
< 	.word	7
---
> 	.word	2
177,178c177,178
< int_const7:
< 	.word	4
---
> int_const10:
> 	.word	1
183,184c183,184
< int_const6:
< 	.word	4
---
> int_const9:
> 	.word	1
187,189d186
< 	.word	6
< 	.word	-1
< int_const5:
190a188,190
> 	.word	-1
> int_const2:
> 	.word	1
193c193
< 	.word	4
---
> 	.word	5
195,196c195,196
< int_const4:
< 	.word	4
---
> int_const6:
> 	.word	1
199c199
< 	.word	0
---
> 	.word	6
201,202c201,202
< int_const3:
< 	.word	4
---
> int_const5:
> 	.word	1
205c205
< 	.word	29
---
> 	.word	7
207,208c207,208
< int_const2:
< 	.word	4
---
> int_const3:
> 	.word	1
211c211
< 	.word	5
---
> 	.word	29
213,214c213,214
< int_const1:
< 	.word	4
---
> int_const11:
> 	.word	1
217c217
< 	.word	2
---
> 	.word	8
219,220c219,220
< int_const0:
< 	.word	4
---
> int_const7:
> 	.word	1
223c223
< 	.word	1
---
> 	.word	53
226c226
< 	.word	5
---
> 	.word	4
232c232
< 	.word	5
---
> 	.word	4
247a248,255
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Bool_protObj
> 	.word	Bool_init
254,314c262
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.report
< 	.word	Base.duplicate
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Derived.report
< 	.word	Base.duplicate
< 	.word	-1
---
> Object_dispTabInt_dispTabMain_dispTabString_dispTabBool_dispTabIO_dispTabBase_dispTabDerived_dispTab	.word	-1
319a268,273
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
321c275
< 	.word	7
---
> 	.word	2
326c280
< 	.word	6
---
> 	.word	3
333,338d286
< 	.word	5
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
341c289
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
345c293
< 	.word	1
---
> 	.word	5
350c298
< 	.word	2
---
> 	.word	6
356c304
< 	.word	3
---
> 	.word	7
383c331
< Main_init:
---
> Int_init:
397c345
< String_init:
---
> Main_init:
411c359
< Bool_init:
---
> String_init:
425c373
< Int_init:
---
> Bool_init:
461,474d408
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
489,502d422
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 int_const1
< 	sw	$a0 16($s0)
522,526c442,443
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
---
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
529c446
< label2:
---
> label0:
532,534c449,451
< 	jalr		$t1
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label1
> 	la	$a0 str_const0
537c454
< label3:
---
> label1:
540,542c457,459
< 	jalr		$t1
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
---
> 	jalr	$t1
> 	bne	$a0 $zero label2
> 	la	$a0 str_const0
545c462
< label4:
---
> label2:
548c465
< 	jalr		$t1
---
> 	jalr	$t1
561,585c478
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	move	$a0 $s0
---
> 	move	$a0 null
598,606d490
< 	la	$t1 class_objTab
< 	lw	$t2 0($s0)
< 	sll	$t2 $t2 3
< 	addu	$t1 $t1 $t2
< 	move	$s1 $t1
< 	lw	$a0 0($t1)
< 	jal	Object.copy
< 	lw	$t1 4($s1)
< 	jalr		$t1
619,668c503
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const3
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	lw	$a0 16($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ spim_outname=new-self-init.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/new-self-init.cl
+ spim_errname=new-self-init.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.spim.out
6,14c6,29
< old: 0.  new: 1
< old: 1.  new: 2
< old: 2.  new: 5
< old: 0.  new: 1
< old: 1.  new: 2
< old: 2.  new: 29
< COOL program successfully executed
< Stats -- #instructions : 1166
<          #reads : 284  #writes 178  #branches 198  #other 506
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.spim.out.filtered
6,12c6,29
< old: 0.  new: 1
< old: 1.  new: 2
< old: 2.  new: 5
< old: 0.  new: 1
< old: 1.  new: 2
< old: 2.  new: 29
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-self-init.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 262 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-self-init.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/new-self-init.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/new-st.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/new-st.cl
+ outname=new-st.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/new-st.cl
+ errname=new-st.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.out /home/raj/cool/distro/testsuite/cgen/new-st.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.out /home/raj/cool/distro/testsuite/cgen/new-st.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.out
13c13
< 	.word	2
---
> 	.word	4
15c15
< 	.word	3
---
> 	.word	1
17c17
< 	.word	4
---
> 	.word	2
29c29
< 	.word	4
---
> 	.word	2
36,46c36,37
< str_const10:
< 	.word	4
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const2
< 	.ascii	"Main"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	4
---
> str_const7:
> 	.word	2
54,55c45,46
< str_const8:
< 	.word	4
---
> str_const5:
> 	.word	2
58,59c49,50
< 	.word	int_const3
< 	.ascii	"String"
---
> 	.word	int_const2
> 	.ascii	"Bool"
63,64c54,55
< str_const7:
< 	.word	4
---
> str_const1:
> 	.word	2
67,68c58,59
< 	.word	int_const2
< 	.ascii	"Bool"
---
> 	.word	int_const3
> 	.ascii	"x is "
72,73c63,64
< str_const6:
< 	.word	4
---
> str_const9:
> 	.word	2
77c68
< 	.ascii	"Int"
---
> 	.ascii	"IO"
81,83c72,74
< str_const5:
< 	.word	4
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	6
86c77
< 	.ascii	"IO"
---
> 	.ascii	"Object"
90,92c81,83
< str_const4:
< 	.word	4
< 	.word	6
---
> str_const2:
> 	.word	2
> 	.word	5
94,95c85,86
< 	.word	int_const3
< 	.ascii	"Object"
---
> 	.word	int_const0
> 	.ascii	"\n"
99,101c90,92
< str_const3:
< 	.word	4
< 	.word	8
---
> str_const6:
> 	.word	2
> 	.word	6
103,104c94,95
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const5
> 	.ascii	"String"
108,109c99,100
< str_const2:
< 	.word	4
---
> str_const0:
> 	.word	2
112c103
< 	.word	int_const7
---
> 	.word	int_const6
117,119c108,110
< str_const1:
< 	.word	4
< 	.word	5
---
> str_const10:
> 	.word	2
> 	.word	6
121,122c112,113
< 	.word	int_const0
< 	.ascii	"\n"
---
> 	.word	int_const2
> 	.ascii	"Main"
126,128c117,119
< str_const0:
< 	.word	4
< 	.word	6
---
> str_const3:
> 	.word	2
> 	.word	8
130,131c121,122
< 	.word	int_const8
< 	.ascii	"x is "
---
> 	.word	int_const7
> 	.ascii	"<basic class>"
135c126
< int_const8:
---
> str_const8:
136a128,136
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const8
> 	.ascii	"Int"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> int_const1:
> 	.word	4
139c139
< 	.word	5
---
> 	.word	0
141,142c141,142
< int_const7:
< 	.word	2
---
> int_const0:
> 	.word	4
145c145
< 	.word	46
---
> 	.word	1
147,148c147,148
< int_const6:
< 	.word	2
---
> int_const7:
> 	.word	4
153,154c153,154
< int_const5:
< 	.word	2
---
> int_const6:
> 	.word	4
157c157
< 	.word	2
---
> 	.word	46
160c160
< 	.word	2
---
> 	.word	4
163,165d162
< 	.word	3
< 	.word	-1
< int_const3:
166a164,166
> 	.word	-1
> int_const8:
> 	.word	4
169c169
< 	.word	6
---
> 	.word	3
172c172
< 	.word	2
---
> 	.word	4
177,178c177,178
< int_const1:
< 	.word	2
---
> int_const3:
> 	.word	4
181c181
< 	.word	0
---
> 	.word	5
183,184c183,184
< int_const0:
< 	.word	2
---
> int_const5:
> 	.word	4
187c187
< 	.word	1
---
> 	.word	6
190c190
< 	.word	3
---
> 	.word	1
196c196
< 	.word	3
---
> 	.word	1
211,214d210
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Int_protObj
< 	.word	Int_init
220a217,220
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	IO_protObj
> 	.word	IO_init
223,262c223
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.printX
< 	.word	A.new_st
< 	.word	A.bump
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> Object_dispTabBool_dispTabString_dispTabA_dispTabInt_dispTabIO_dispTabMain_dispTab	.word	-1
268,274c229,230
< Main_protObj:
< 	.word	6
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
< A_protObj:
< 	.word	5
---
> Bool_protObj:
> 	.word	1
276,277c232,233
< 	.word	A_dispTab
< 	.word	int_const1
---
> 	.word	Bool_dispTab
> 	.word	0
280c236
< 	.word	4
---
> 	.word	2
286c242
< Bool_protObj:
---
> A_protObj:
289,290c245,246
< 	.word	Bool_dispTab
< 	.word	0
---
> 	.word	A_dispTab
> 	.word	int_const1
293c249
< 	.word	2
---
> 	.word	4
299c255
< 	.word	1
---
> 	.word	5
301a258,262
> 	.word	-1
> Main_protObj:
> 	.word	6
> 	.word	3
> 	.word	Main_dispTab
324c285
< Main_init:
---
> Bool_init:
338,359d298
< A_init:
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	jal	Object_init
< 	lw	$s1 12($s0)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
< 	jr	$ra	
374c313
< Bool_init:
---
> A_init:
416,420c355,359
< Main.main:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> Main_init:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
423,536c362,367
< 	la	$a0 A_protObj
< 	jal	Object.copy
< 	jal	A_init
< 	move	$s1 $a0
< 	move	$s2 $zero
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s2 $a0
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	jal	Object_init
> 	move	$a0 $s0
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
545,586c376
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	bne	$a0 $zero label8
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	bne	$a0 $zero label9
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	bne	$a0 $zero label10
< 	la	$a0 str_const2
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
599,607d388
< 	la	$t1 class_objTab
< 	lw	$t2 0($s0)
< 	sll	$t2 $t2 3
< 	addu	$t1 $t1 $t2
< 	move	$s1 $t1
< 	lw	$a0 0($t1)
< 	jal	Object.copy
< 	lw	$t1 4($s1)
< 	jalr		$t1
614,617c395,398
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
620,631c401,420
< 	lw	$s1 12($s0)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	sw	$a0 0($fp)
> 	sw	$zero 4($fp)
> 	move	$a0 null
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 20
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/new-st.cl
+ spim_outname=new-st.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/new-st.cl
+ spim_errname=new-st.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.spim.out
6,12c6,27
< x is 1
< x is 4
< x is 1
< x is 4
< COOL program successfully executed
< Stats -- #instructions : 1890
<          #reads : 412  #writes 296  #branches 393  #other 789
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.spim.out.filtered
6,10c6,27
< x is 1
< x is 4
< x is 1
< x is 4
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/new-st.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 223 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/new-st.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/new-st.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/not.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/not.cl
+ outname=not.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/not.cl
+ errname=not.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.out /home/raj/cool/distro/testsuite/cgen/not.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.out /home/raj/cool/distro/testsuite/cgen/not.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.out
13c13
< 	.word	2
---
> 	.word	1
15,16d14
< 	.word	3
< _string_tag:
17a16,17
> _string_tag:
> 	.word	5
29c29
< 	.word	4
---
> 	.word	5
36,37c36,37
< str_const7:
< 	.word	4
---
> str_const6:
> 	.word	5
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
45,47c45,47
< str_const6:
< 	.word	4
< 	.word	6
---
> str_const0:
> 	.word	5
> 	.word	15
50c50
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/not.cl"
55,56c55,56
< 	.word	4
< 	.word	6
---
> 	.word	5
> 	.word	5
58,59c58,59
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const5
> 	.ascii	"IO"
63,64c63
< str_const4:
< 	.word	4
---
> str_const2:
65a65
> 	.word	6
67,68c67,68
< 	.word	int_const5
< 	.ascii	"Int"
---
> 	.word	int_const6
> 	.ascii	"Object"
72,73c72
< str_const3:
< 	.word	4
---
> str_const7:
74a74
> 	.word	6
77c77
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,82c81,82
< str_const2:
< 	.word	4
---
> str_const4:
> 	.word	5
85,86c85,86
< 	.word	int_const4
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
91c91
< 	.word	4
---
> 	.word	5
99,101c99,101
< str_const0:
< 	.word	4
< 	.word	15
---
> str_const3:
> 	.word	5
> 	.word	5
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/not.cl"
---
> 	.ascii	"Int"
108,109c108,109
< int_const8:
< 	.word	2
---
> int_const0:
> 	.word	1
112c112
< 	.word	43
---
> 	.word	0
114,115c114,115
< int_const7:
< 	.word	2
---
> int_const2:
> 	.word	1
118c118
< 	.word	13
---
> 	.word	1
120,121c120,121
< int_const6:
< 	.word	2
---
> int_const1:
> 	.word	1
124c124
< 	.word	2
---
> 	.word	100
126,127c126,127
< int_const5:
< 	.word	2
---
> int_const7:
> 	.word	1
130c130
< 	.word	3
---
> 	.word	13
132c132,135
< int_const4:
---
> int_const5:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
133a137,139
> 	.word	-1
> int_const8:
> 	.word	1
136c142
< 	.word	6
---
> 	.word	3
139c145
< 	.word	2
---
> 	.word	1
144,147c150
< int_const2:
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
---
> int_const6:
149,151d151
< 	.word	-1
< int_const1:
< 	.word	2
154c154
< 	.word	100
---
> 	.word	6
156,157c156,157
< int_const0:
< 	.word	2
---
> int_const4:
> 	.word	1
160c160
< 	.word	0
---
> 	.word	43
163c163
< 	.word	3
---
> 	.word	4
169c169
< 	.word	3
---
> 	.word	4
183,184d182
< 	.word	IO_protObj
< 	.word	IO_init
186a185,188
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	IO_protObj
> 	.word	IO_init
191,225c193
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> Object_dispTabInt_dispTabMain_dispTabIO_dispTabBool_dispTabString_dispTab	.word	-1
230a199,204
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
232c206
< 	.word	5
---
> 	.word	2
236,241c210,213
< String_protObj:
< 	.word	4
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
---
> IO_protObj:
> 	.word	3
> 	.word	3
> 	.word	IO_dispTab
244c216
< 	.word	3
---
> 	.word	4
249,252c221,225
< Int_protObj:
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	5
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
254,258d226
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
281c249
< Main_init:
---
> Int_init:
295c263
< String_init:
---
> Main_init:
309c277
< Bool_init:
---
> IO_init:
323c291
< Int_init:
---
> Bool_init:
337c305
< IO_init:
---
> String_init:
352,355c320,323
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
---
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
358,713d325
< 	la	$s1 int_const0
< 	la	$s2 bool_const0
< label0:
< 	move	$s3 $s1
< 	la	$a0 int_const1
< 	lw	$t1 12($s3)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label2
< 	la	$a0 bool_const0
< label2:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label1
< 	move	$s3 $s2
< 	lw	$t1 12($s2)
< 	la	$a0 bool_const1
< 	beqz	$t1 label14
< 	la	$a0 bool_const0
< label14:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label13
< 	la	$a0 bool_const0
< label13:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label12
< 	la	$a0 bool_const0
< label12:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label11
< 	la	$a0 bool_const0
< label11:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label10
< 	la	$a0 bool_const0
< label10:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label9
< 	la	$a0 bool_const0
< label9:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label8
< 	la	$a0 bool_const0
< label8:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label7
< 	la	$a0 bool_const0
< label7:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label6
< 	la	$a0 bool_const0
< label6:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label5
< 	la	$a0 bool_const0
< label5:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label4
< 	la	$a0 bool_const0
< label4:
< 	move	$t1 $s3
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label3
< 	la	$a1 bool_const0
< 	jal	equality_test
< label3:
< 	move	$s3 $s2
< 	lw	$t1 12($s2)
< 	la	$a0 bool_const1
< 	beqz	$t1 label26
< 	la	$a0 bool_const0
< label26:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label25
< 	la	$a0 bool_const0
< label25:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label24
< 	la	$a0 bool_const0
< label24:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label23
< 	la	$a0 bool_const0
< label23:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label22
< 	la	$a0 bool_const0
< label22:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label21
< 	la	$a0 bool_const0
< label21:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label20
< 	la	$a0 bool_const0
< label20:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label19
< 	la	$a0 bool_const0
< label19:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label18
< 	la	$a0 bool_const0
< label18:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label17
< 	la	$a0 bool_const0
< label17:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label16
< 	la	$a0 bool_const0
< label16:
< 	move	$t1 $s3
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label15
< 	la	$a1 bool_const0
< 	jal	equality_test
< label15:
< 	move	$s3 $s2
< 	lw	$t1 12($s2)
< 	la	$a0 bool_const1
< 	beqz	$t1 label38
< 	la	$a0 bool_const0
< label38:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label37
< 	la	$a0 bool_const0
< label37:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label36
< 	la	$a0 bool_const0
< label36:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label35
< 	la	$a0 bool_const0
< label35:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label34
< 	la	$a0 bool_const0
< label34:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label33
< 	la	$a0 bool_const0
< label33:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label32
< 	la	$a0 bool_const0
< label32:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label31
< 	la	$a0 bool_const0
< label31:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label30
< 	la	$a0 bool_const0
< label30:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label29
< 	la	$a0 bool_const0
< label29:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label28
< 	la	$a0 bool_const0
< label28:
< 	move	$t1 $s3
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label27
< 	la	$a1 bool_const0
< 	jal	equality_test
< label27:
< 	move	$s3 $s2
< 	lw	$t1 12($s2)
< 	la	$a0 bool_const1
< 	beqz	$t1 label50
< 	la	$a0 bool_const0
< label50:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label49
< 	la	$a0 bool_const0
< label49:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label48
< 	la	$a0 bool_const0
< label48:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label47
< 	la	$a0 bool_const0
< label47:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label46
< 	la	$a0 bool_const0
< label46:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label45
< 	la	$a0 bool_const0
< label45:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label44
< 	la	$a0 bool_const0
< label44:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label43
< 	la	$a0 bool_const0
< label43:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label42
< 	la	$a0 bool_const0
< label42:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label41
< 	la	$a0 bool_const0
< label41:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label40
< 	la	$a0 bool_const0
< label40:
< 	move	$t1 $s3
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label39
< 	la	$a1 bool_const0
< 	jal	equality_test
< label39:
< 	move	$s3 $s2
< 	lw	$t1 12($s2)
< 	la	$a0 bool_const1
< 	beqz	$t1 label62
< 	la	$a0 bool_const0
< label62:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label61
< 	la	$a0 bool_const0
< label61:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label60
< 	la	$a0 bool_const0
< label60:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label59
< 	la	$a0 bool_const0
< label59:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label58
< 	la	$a0 bool_const0
< label58:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label57
< 	la	$a0 bool_const0
< label57:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label56
< 	la	$a0 bool_const0
< label56:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label55
< 	la	$a0 bool_const0
< label55:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label54
< 	la	$a0 bool_const0
< label54:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label53
< 	la	$a0 bool_const0
< label53:
< 	lw	$t1 12($a0)
< 	la	$a0 bool_const1
< 	beqz	$t1 label52
< 	la	$a0 bool_const0
< label52:
< 	move	$t1 $s3
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label51
< 	la	$a1 bool_const0
< 	jal	equality_test
< label51:
< 	move	$s3 $s1
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	b	label0
< label1:
< 	move	$a0 $zero
< 	lw	$t1 12($s2)
< 	beqz	$t1 label63
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label65
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label65:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	b	label64
< label63:
715,719c327,334
< label64:
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
---
> 	sw	$a0 0($fp)
> 	la	$a0 bool_const0
> 	sw	$a0 4($fp)
> 	move	$a0 null
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 20
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/not.cl
+ spim_outname=not.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/not.cl
+ spim_errname=not.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.spim.out
6,8c6,25
< COOL program successfully executed
< Stats -- #instructions : 47045
<          #reads : 10024  #writes 817  #branches 11726  #other 24478
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.spim.out.filtered
6c6,25
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/not.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 193 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/not.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/not.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ outname=objectequality.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ errname=objectequality.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.out /home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.out /home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.out
13c13
< 	.word	2
---
> 	.word	7
15c15
< 	.word	3
---
> 	.word	1
17c17
< 	.word	4
---
> 	.word	2
29c29
< 	.word	4
---
> 	.word	2
36,38c36,38
< str_const9:
< 	.word	4
< 	.word	6
---
> str_const5:
> 	.word	2
> 	.word	5
41c41
< 	.ascii	"Main"
---
> 	.ascii	"A"
45,46c45,46
< str_const8:
< 	.word	4
---
> str_const6:
> 	.word	2
49c49
< 	.word	int_const4
---
> 	.word	int_const3
54,56c54,56
< str_const7:
< 	.word	4
< 	.word	5
---
> str_const3:
> 	.word	2
> 	.word	6
59c59
< 	.ascii	"A"
---
> 	.ascii	"Bool"
63,65c63,65
< str_const6:
< 	.word	4
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	18
68c68
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/objectequality.cl"
72,74c72,74
< str_const5:
< 	.word	4
< 	.word	6
---
> str_const8:
> 	.word	2
> 	.word	5
76,77c76,77
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const6
> 	.ascii	"IO"
81,83c81,83
< str_const4:
< 	.word	4
< 	.word	5
---
> str_const2:
> 	.word	2
> 	.word	6
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Int"
---
> 	.word	int_const7
> 	.ascii	"Object"
90,92c90,92
< str_const3:
< 	.word	4
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	6
94,95c94,95
< 	.word	int_const6
< 	.ascii	"IO"
---
> 	.word	int_const7
> 	.ascii	"String"
99,100c99,100
< str_const2:
< 	.word	4
---
> str_const7:
> 	.word	2
103,104c103,104
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const4
> 	.ascii	"Main"
109c109
< 	.word	4
---
> 	.word	2
112c112
< 	.word	int_const7
---
> 	.word	int_const8
117,119c117,119
< str_const0:
< 	.word	4
< 	.word	18
---
> str_const9:
> 	.word	2
> 	.word	5
121,122c121,122
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/objectequality.cl"
---
> 	.word	int_const2
> 	.ascii	"Int"
126,127c126,127
< int_const8:
< 	.word	2
---
> int_const1:
> 	.word	7
130c130
< 	.word	54
---
> 	.word	0
132,133c132,139
< int_const7:
< 	.word	2
---
> int_const3:
> 	.word	7
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
> 	.word	-1
> int_const8:
> 	.word	7
139c145
< 	.word	2
---
> 	.word	7
144,145c150,151
< int_const5:
< 	.word	2
---
> int_const2:
> 	.word	7
148c154
< 	.word	6
---
> 	.word	3
151,157c157
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
< 	.word	1
< 	.word	-1
< int_const3:
< 	.word	2
---
> 	.word	7
162,163c162,163
< int_const2:
< 	.word	2
---
> int_const0:
> 	.word	7
166c166
< 	.word	3
---
> 	.word	5
168,169c168,169
< int_const1:
< 	.word	2
---
> int_const7:
> 	.word	7
172c172
< 	.word	0
---
> 	.word	6
174,175c174,175
< int_const0:
< 	.word	2
---
> int_const5:
> 	.word	7
178c178
< 	.word	5
---
> 	.word	54
181c181
< 	.word	3
---
> 	.word	1
187c187
< 	.word	3
---
> 	.word	1
203,206d202
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Int_protObj
< 	.word	Int_init
217,259c213,217
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.foo
< B_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.foo
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabBool_dispTabString_dispTabA_dispTabB_dispTabMain_dispTabIO_dispTabInt_dispTab	.word	-1
265,268c223,227
< Main_protObj:
< 	.word	7
< 	.word	3
< 	.word	Main_dispTab
---
> Bool_protObj:
> 	.word	1
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
270c229,230
< A_protObj:
---
> String_protObj:
> 	.word	2
271a232,237
> 	.word	String_dispTab
> 	.word	int_const1
> 	.word	0
> 	.word	-1
> A_protObj:
> 	.word	3
277c243
< 	.word	6
---
> 	.word	4
282,283c248
< String_protObj:
< 	.word	4
---
> Main_protObj:
285,287c250,251
< 	.word	String_dispTab
< 	.word	int_const1
< 	.word	0
---
> 	.word	3
> 	.word	Main_dispTab
289c253,254
< Bool_protObj:
---
> IO_protObj:
> 	.word	6
291,293c256
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
---
> 	.word	IO_dispTab
296c259
< 	.word	2
---
> 	.word	7
300,304d262
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
327c285
< Main_init:
---
> Bool_init:
341c299
< A_init:
---
> String_init:
349,350d306
< 	la	$a0 int_const0
< 	sw	$a0 12($s0)
357c313
< B_init:
---
> A_init:
364c320,321
< 	jal	A_init
---
> 	jal	Object_init
> 	la	$a0 int_const0
371c328
< String_init:
---
> B_init:
378c335
< 	jal	Object_init
---
> 	jal	A_init
385c342
< Bool_init:
---
> Main_init:
399c356
< Int_init:
---
> IO_init:
413c370
< IO_init:
---
> Int_init:
427,636d383
< Main.main:
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	jal	B_init
< 	move	$s1 $a0
< 	move	$s2 $s1
< 	move	$t1 $s2
< 	move	$t2 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label2
< 	la	$a1 bool_const0
< 	jal	equality_test
< label2:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	la	$a0 int_const1
< 	b	label1
< label0:
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< label1:
< 	move	$s2 $s1
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	B_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$t1 $s2
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label6
< 	la	$a1 bool_const0
< 	jal	equality_test
< label6:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label5
< label4:
< 	la	$a0 int_const1
< label5:
< 	la	$a0 A_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	A_init
< 	lw	$s1 0($fp)
< 	move	$s2 $a0
< 	la	$a0 A_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	jal	A_init
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$t1 $s2
< 	move	$t2 $a0
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label10
< 	la	$a1 bool_const0
< 	jal	equality_test
< label10:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label8
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label11
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label9
< label8:
< 	la	$a0 int_const1
< label9:
< 	move	$s2 $s1
< 	move	$s3 $s2
< 	move	$t1 $s3
< 	move	$t2 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label14
< 	la	$a1 bool_const0
< 	jal	equality_test
< label14:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label12
< 	la	$a0 int_const1
< 	b	label13
< label12:
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label15
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label13:
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s2
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label19
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label19:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	move	$s3 $a0
< 	move	$t1 $s3
< 	move	$t2 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label18
< 	la	$a1 bool_const0
< 	jal	equality_test
< label18:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label16
< 	la	$a0 int_const1
< 	b	label17
< label16:
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label20
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label17:
< 	move	$s1 $zero
< 	move	$s2 $zero
< 	move	$s3 $s1
< 	move	$t1 $s3
< 	move	$t2 $s2
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label23
< 	la	$a1 bool_const0
< 	jal	equality_test
< label23:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label21
< 	la	$a0 int_const1
< 	b	label22
< label21:
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label24
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label24:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< label22:
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
644,646c391
< 	lw	$a0 12($fp)
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
650a396,408
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -20
> 	sw	$fp 20($sp)
> 	sw	$s0 16($sp)
> 	sw	$ra 12($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 20($sp)
> 	lw	$s0 16($sp)
> 	lw	$ra 12($sp)
> 	addiu	$sp $sp 20
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ spim_outname=objectequality.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/objectequality.cl
+ spim_errname=objectequality.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.spim.out
6,8c6,29
< COOL program successfully executed
< Stats -- #instructions : 632
<          #reads : 119  #writes 91  #branches 134  #other 288
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.spim.out.filtered
6c6,29
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/objectequality.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 217 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/objectequality.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/objectequality.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ outname=override-basic.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ errname=override-basic.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.out /home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.out /home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.out
13c13
< 	.word	4
---
> 	.word	2
15c15
< 	.word	5
---
> 	.word	1
17c17
< 	.word	6
---
> 	.word	4
29c29
< 	.word	6
---
> 	.word	4
37c37
< 	.word	6
---
> 	.word	4
41,50c41
< 	.ascii	"Main"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const10:
< 	.word	6
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const2
< 	.ascii	"String"
---
> 	.ascii	"Derived"
55,56c46,47
< 	.word	6
< 	.word	6
---
> 	.word	4
> 	.word	5
58,59c49,50
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const2
> 	.ascii	"IO"
63,64c54,55
< str_const8:
< 	.word	6
---
> str_const1:
> 	.word	4
68c59
< 	.ascii	"Int"
---
> 	.ascii	"\n"
72,73c63,64
< str_const7:
< 	.word	6
---
> str_const8:
> 	.word	4
77c68
< 	.ascii	"Derived"
---
> 	.ascii	"String"
81,83c72,74
< str_const6:
< 	.word	6
< 	.word	6
---
> str_const3:
> 	.word	4
> 	.word	8
85,86c76,77
< 	.word	int_const1
< 	.ascii	"Base"
---
> 	.word	int_const5
> 	.ascii	"<basic class>"
90c81,82
< str_const5:
---
> str_const10:
> 	.word	4
92d83
< 	.word	5
94,95c85,86
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const6
> 	.ascii	"Base"
99,101c90,92
< str_const4:
< 	.word	6
< 	.word	6
---
> str_const6:
> 	.word	4
> 	.word	5
103,104c94,95
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const7
> 	.ascii	"Int"
108,110c99,101
< str_const3:
< 	.word	6
< 	.word	8
---
> str_const0:
> 	.word	4
> 	.word	18
112,113c103,104
< 	.word	int_const6
< 	.ascii	"<basic class>"
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/override-basic.cl"
118c109
< 	.word	6
---
> 	.word	4
121c112
< 	.word	int_const7
---
> 	.word	int_const9
126c117,118
< str_const1:
---
> str_const5:
> 	.word	4
128d119
< 	.word	18
130,131c121,122
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/override-basic.cl"
---
> 	.word	int_const6
> 	.ascii	"Bool"
135c126,127
< str_const0:
---
> str_const4:
> 	.word	4
137d128
< 	.word	5
139,140c130,131
< 	.word	int_const9
< 	.ascii	"\n"
---
> 	.word	int_const4
> 	.ascii	"Object"
144,145c135
< int_const9:
< 	.word	4
---
> str_const7:
147,148c137,142
< 	.word	Int_dispTab
< 	.word	1
---
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"Main"
> 	.byte	0	
> 	.align	2
150,151c144,145
< int_const8:
< 	.word	4
---
> int_const0:
> 	.word	2
154c148
< 	.word	54
---
> 	.word	0
156,157c150,151
< int_const7:
< 	.word	4
---
> int_const3:
> 	.word	2
160c154
< 	.word	8
---
> 	.word	1
162,163c156,157
< int_const6:
< 	.word	4
---
> int_const5:
> 	.word	2
168,169c162,163
< int_const5:
< 	.word	4
---
> int_const2:
> 	.word	2
174,175c168,169
< int_const4:
< 	.word	4
---
> int_const7:
> 	.word	2
178c172
< 	.word	7
---
> 	.word	3
180,181c174,175
< int_const3:
< 	.word	4
---
> int_const6:
> 	.word	2
184,186d177
< 	.word	3
< 	.word	-1
< int_const2:
187a179,181
> 	.word	-1
> int_const4:
> 	.word	2
193c187
< 	.word	4
---
> 	.word	2
196c190
< 	.word	4
---
> 	.word	7
198c192,193
< int_const0:
---
> int_const9:
> 	.word	2
199a195,199
> 	.word	Int_dispTab
> 	.word	8
> 	.word	-1
> int_const8:
> 	.word	2
202c202
< 	.word	0
---
> 	.word	54
205c205
< 	.word	5
---
> 	.word	1
211c211
< 	.word	5
---
> 	.word	1
226a227,234
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	String_protObj
> 	.word	String_init
233,291c241
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Derived.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< 	.word	-1
---
> Object_dispTabBool_dispTabInt_dispTabMain_dispTabString_dispTabIO_dispTabBase_dispTabDerived_dispTab	.word	-1
297,308d246
< Main_protObj:
< 	.word	7
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
< String_protObj:
< 	.word	6
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
310c248
< 	.word	5
---
> 	.word	1
316c254
< 	.word	4
---
> 	.word	2
320a259,270
> Main_protObj:
> 	.word	3
> 	.word	3
> 	.word	Main_dispTab
> 	.word	-1
> String_protObj:
> 	.word	4
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
> 	.word	-1
322c272
< 	.word	1
---
> 	.word	5
327c277
< 	.word	2
---
> 	.word	6
332c282
< 	.word	3
---
> 	.word	7
357c307
< Main_init:
---
> Bool_init:
371c321
< String_init:
---
> Int_init:
385c335
< Bool_init:
---
> Main_init:
399c349
< Int_init:
---
> String_init:
462,517c412
< 	la	$a0 Base_protObj
< 	jal	Object.copy
< 	jal	Base_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	la	$t1 Base_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	la	$t1 Derived_dispTab
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	move	$a0 null
530,561c425
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	la	$t1 Base_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
574,609c438
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	la	$t1 Base_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	la	$t1 Base_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	la	$t1 Base_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ spim_outname=override-basic.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/override-basic.cl
+ spim_errname=override-basic.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.spim.out
6,7c6,27
< Base
< derived Derived
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
9,15c29
< derived Derived
< 
< derived Derived
< 
< COOL program successfully executed
< Stats -- #instructions : 860
<          #reads : 177  #writes 124  #branches 159  #other 400
---
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.spim.out.filtered
6,7c6,27
< Base
< derived Derived
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
9,13c29
< derived Derived
< 
< derived Derived
< 
< COOL program successfully executed
---
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override-basic.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 241 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override-basic.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/override-basic.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/override.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/override.cl
+ outname=override.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/override.cl
+ errname=override.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.out /home/raj/cool/distro/testsuite/cgen/override.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.out /home/raj/cool/distro/testsuite/cgen/override.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	9
17c17
< 	.word	5
---
> 	.word	6
29c29
< 	.word	5
---
> 	.word	6
36,37c36,37
< str_const12:
< 	.word	5
---
> str_const4:
> 	.word	6
41c41
< 	.ascii	"D"
---
> 	.ascii	"A"
45c45,46
< str_const11:
---
> str_const5:
> 	.word	6
46a48,55
> 	.word	String_dispTab
> 	.word	int_const0
> 	.ascii	"B"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const6:
> 	.word	6
54,55c63,64
< str_const10:
< 	.word	5
---
> str_const7:
> 	.word	6
59c68
< 	.ascii	"B"
---
> 	.ascii	"D"
63c72,73
< str_const9:
---
> str_const10:
> 	.word	6
64a75,82
> 	.word	String_dispTab
> 	.word	int_const1
> 	.ascii	"IO"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const1:
> 	.word	6
68c86
< 	.ascii	"A"
---
> 	.ascii	"\n"
72,73c90,91
< str_const8:
< 	.word	5
---
> str_const9:
> 	.word	6
81,82c99
< str_const7:
< 	.word	5
---
> str_const2:
83a101
> 	.word	8
85,86c103,104
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const7
> 	.ascii	"<basic class>"
90,91c108,109
< str_const6:
< 	.word	5
---
> str_const8:
> 	.word	6
99,100c117
< str_const5:
< 	.word	5
---
> str_const0:
101a119
> 	.word	17
103,104c121,122
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const8
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/override.cl"
108,110c126,128
< str_const4:
< 	.word	5
< 	.word	5
---
> str_const12:
> 	.word	6
> 	.word	6
112,113c130,131
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const3
> 	.ascii	"Bool"
118c136
< 	.word	5
---
> 	.word	6
126,128c144,146
< str_const2:
< 	.word	5
< 	.word	8
---
> str_const11:
> 	.word	6
> 	.word	6
130,131c148,149
< 	.word	int_const7
< 	.ascii	"<basic class>"
---
> 	.word	int_const3
> 	.ascii	"Main"
135,136c153
< str_const1:
< 	.word	5
---
> int_const6:
138,142c155,157
< 	.word	String_dispTab
< 	.word	int_const0
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
---
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
144c159
< str_const0:
---
> int_const0:
146,154d160
< 	.word	17
< 	.word	String_dispTab
< 	.word	int_const8
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/override.cl"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const8:
< 	.word	3
157c163
< 	.word	48
---
> 	.word	1
160c166
< 	.word	3
---
> 	.word	5
165,166c171,172
< int_const6:
< 	.word	3
---
> int_const1:
> 	.word	5
169c175
< 	.word	0
---
> 	.word	2
171,172c177,178
< int_const5:
< 	.word	3
---
> int_const2:
> 	.word	5
175,177d180
< 	.word	6
< 	.word	-1
< int_const4:
178a182,184
> 	.word	-1
> int_const8:
> 	.word	5
181c187
< 	.word	5
---
> 	.word	48
184c190
< 	.word	3
---
> 	.word	5
189,196c195,196
< int_const2:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	3
< 	.word	-1
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	5
199c199
< 	.word	2
---
> 	.word	5
201,202c201,202
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	5
205c205
< 	.word	1
---
> 	.word	6
208c208
< 	.word	4
---
> 	.word	9
214c214
< 	.word	4
---
> 	.word	9
232,241d231
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
250,310c240,250
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.f
< 	.word	A.g
< B_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.f
< 	.word	B.g
< C_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	C.f
< 	.word	B.g
< D_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	D.f
< 	.word	D.g
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> 	.word	String_protObj
> 	.word	String_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabA_dispTabB_dispTabC_dispTabD_dispTabInt_dispTabString_dispTabIO_dispTabMain_dispTabBool_dispTab	.word	-1
317c257
< 	.word	6
---
> 	.word	1
322c262
< 	.word	7
---
> 	.word	2
327c267
< 	.word	8
---
> 	.word	3
332c272
< 	.word	9
---
> 	.word	4
336,337c276
< String_protObj:
< 	.word	5
---
> Int_protObj:
339,343d277
< 	.word	String_dispTab
< 	.word	int_const6
< 	.word	0
< 	.word	-1
< Bool_protObj:
345,346c279
< 	.word	4
< 	.word	Bool_dispTab
---
> 	.word	Int_dispTab
349,352c282,286
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	6
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const6
356c290
< 	.word	1
---
> 	.word	7
361c295
< 	.word	2
---
> 	.word	8
367a302,307
> 	.word	-1
> Bool_protObj:
> 	.word	9
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
446c386
< String_init:
---
> Int_init:
460c400
< Bool_init:
---
> String_init:
474c414
< Int_init:
---
> IO_init:
488c428
< IO_init:
---
> Main_init:
495c435
< 	jal	Object_init
---
> 	jal	IO_init
502c442
< Main_init:
---
> Bool_init:
509,525c449
< 	jal	IO_init
< 	la	$a0 A_protObj
< 	jal	Object.copy
< 	jal	A_init
< 	sw	$a0 12($s0)
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	jal	B_init
< 	sw	$a0 16($s0)
< 	la	$a0 C_protObj
< 	jal	Object.copy
< 	jal	C_init
< 	sw	$a0 20($s0)
< 	la	$a0 D_protObj
< 	jal	Object.copy
< 	jal	D_init
< 	sw	$a0 24($s0)
---
> 	jal	Object_init
617,1080c541
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	bne	$a0 $zero label8
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label9
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label9:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	bne	$a0 $zero label10
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 24($s0)
< 	bne	$a0 $zero label12
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label12:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label13
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label13:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 24($s0)
< 	bne	$a0 $zero label14
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label15
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label16
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label16:
< 	la	$t1 A_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label17
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label17:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label18
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label18:
< 	la	$t1 A_dispTab
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label19
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label19:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label20
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label20:
< 	la	$t1 A_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label21
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label21:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label22
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label22:
< 	la	$t1 A_dispTab
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label23
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label23:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	bne	$a0 $zero label24
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label24:
< 	la	$t1 B_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label25
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label25:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	bne	$a0 $zero label26
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label26:
< 	la	$t1 B_dispTab
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label27
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label27:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 24($s0)
< 	bne	$a0 $zero label28
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label28:
< 	la	$t1 C_dispTab
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label29
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label29:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 24($s0)
< 	bne	$a0 $zero label30
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label30:
< 	la	$t1 C_dispTab
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label31
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label31:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	jal	B_init
< 	sw	$a0 12($s0)
< 	la	$a0 C_protObj
< 	jal	Object.copy
< 	jal	C_init
< 	sw	$a0 16($s0)
< 	la	$a0 D_protObj
< 	jal	Object.copy
< 	jal	D_init
< 	sw	$a0 20($s0)
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label32
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label32:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label33
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label33:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label34
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label34:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label35
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label35:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label36
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label36:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label37
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label37:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label38
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label38:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label39
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label39:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	bne	$a0 $zero label40
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label40:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label41
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label41:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$a0 20($s0)
< 	bne	$a0 $zero label42
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label42:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label43
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label43:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label44
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label44:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/override.cl
+ spim_outname=override.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/override.cl
+ spim_errname=override.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.spim.out
6,9c6,33
< 1213435612121343134356
< COOL program successfully executed
< Stats -- #instructions : 1632
<          #reads : 406  #writes 263  #branches 307  #other 656
---
> The following symbols are undefined:
> heap_start
> D_protObj
> A_init
> Int_protObj
> C_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> D_init
> String_dispTab
> Main_init
> Bool_protObj
> C_init
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.spim.out.filtered
6,7c6,33
< 1213435612121343134356
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> D_protObj
> A_init
> Int_protObj
> C_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> D_init
> String_dispTab
> Main_init
> Bool_protObj
> C_init
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/override.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 250 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/override.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/override.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/primes.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/primes.cl
+ outname=primes.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/primes.cl
+ errname=primes.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.out /home/raj/cool/distro/testsuite/cgen/primes.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.out /home/raj/cool/distro/testsuite/cgen/primes.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.out
15c15
< 	.word	4
---
> 	.word	2
17c17
< 	.word	5
---
> 	.word	1
29c29
< 	.word	5
---
> 	.word	1
36,38c36,38
< str_const11:
< 	.word	5
< 	.word	6
---
> str_const1:
> 	.word	1
> 	.word	10
41c41
< 	.ascii	"String"
---
> 	.ascii	"2 is trivially prime.\n"
46,55c46
< 	.word	5
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const5
< 	.ascii	"Bool"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const9:
< 	.word	5
---
> 	.word	1
58,59c49,50
< 	.word	int_const6
< 	.ascii	"Int"
---
> 	.word	int_const1
> 	.ascii	"IO"
63,64c54,55
< str_const8:
< 	.word	5
---
> str_const7:
> 	.word	1
68,77c59
< 	.ascii	"Main"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const7:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.ascii	"String"
81,83c63,65
< str_const6:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	1
> 	.word	16
85,86c67,68
< 	.word	int_const4
< 	.ascii	"Object"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/primes.cl"
91c73
< 	.word	5
---
> 	.word	1
99c81,82
< str_const4:
---
> str_const9:
> 	.word	1
101d83
< 	.word	16
104c86
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/primes.cl"
---
> 	.ascii	"Int"
109,110c91,92
< 	.word	5
< 	.word	7
---
> 	.word	1
> 	.word	6
113c95
< 	.ascii	"continue"
---
> 	.ascii	"halt"
118c100,109
< 	.word	5
---
> 	.word	1
> 	.word	7
> 	.word	String_dispTab
> 	.word	int_const10
> 	.ascii	" is prime.\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const8:
> 	.word	1
121,122c112,113
< 	.word	int_const5
< 	.ascii	"halt"
---
> 	.word	int_const9
> 	.ascii	"Bool"
126,127c117,118
< str_const1:
< 	.word	5
---
> str_const4:
> 	.word	1
130,131c121,122
< 	.word	int_const10
< 	.ascii	" is prime.\n"
---
> 	.word	int_const11
> 	.ascii	"continue"
135,137c126,128
< str_const0:
< 	.word	5
< 	.word	10
---
> str_const6:
> 	.word	1
> 	.word	6
139,140c130,131
< 	.word	int_const11
< 	.ascii	"2 is trivially prime.\n"
---
> 	.word	int_const5
> 	.ascii	"Object"
144c135,144
< int_const11:
---
> str_const11:
> 	.word	1
> 	.word	6
> 	.word	String_dispTab
> 	.word	int_const9
> 	.ascii	"Main"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> int_const10:
148c148
< 	.word	22
---
> 	.word	11
150c150
< int_const10:
---
> int_const4:
154c154
< 	.word	11
---
> 	.word	22
156c156
< int_const9:
---
> int_const0:
160c160
< 	.word	8
---
> 	.word	0
162c162
< int_const8:
---
> int_const3:
166c166
< 	.word	46
---
> 	.word	1
178c178
< 	.word	3
---
> 	.word	46
180c180
< int_const5:
---
> int_const1:
184c184
< 	.word	4
---
> 	.word	2
186c186
< int_const4:
---
> int_const8:
190c190
< 	.word	6
---
> 	.word	3
192c192
< int_const3:
---
> int_const9:
196c196
< 	.word	1
---
> 	.word	4
204c204
< int_const1:
---
> int_const5:
208c208
< 	.word	2
---
> 	.word	6
210c210
< int_const0:
---
> int_const11:
214c214
< 	.word	0
---
> 	.word	8
217c217
< 	.word	4
---
> 	.word	2
223c223
< 	.word	4
---
> 	.word	2
236a237,242
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
241,283c247
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabString_dispTabBool_dispTabInt_dispTabIO_dispTabMain_dispTab	.word	-1
290c254
< 	.word	5
---
> 	.word	1
297c261
< 	.word	4
---
> 	.word	2
309c273
< 	.word	1
---
> 	.word	4
314c278
< 	.word	2
---
> 	.word	5
401,404c365,368
< 	addiu	$sp $sp -24
< 	sw	$fp 24($sp)
< 	sw	$s0 20($sp)
< 	sw	$ra 16($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
408,423d371
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 int_const1
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	sw	$a0 16($s0)
425,540d372
< 	sw	$a0 24($s0)
< label1:
< 	la	$a0 bool_const1
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label2
< 	lw	$s1 16($s0)
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	la	$a0 int_const1
< 	sw	$a0 20($s0)
< label3:
< 	lw	$s1 16($s0)
< 	lw	$s2 20($s0)
< 	lw	$a0 20($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label7
< 	la	$a0 bool_const0
< label7:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label5
< 	la	$a0 bool_const0
< 	b	label6
< label5:
< 	lw	$s1 16($s0)
< 	lw	$s2 20($s0)
< 	lw	$s3 16($s0)
< 	lw	$a0 20($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s3)
< 	div	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	sub	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$t2 int_const0
< 	move	$t1 $s1
< 	la	$a0 bool_const1
< 	beq	$t1 $t2 label10
< 	la	$a1 bool_const0
< 	jal	equality_test
< label10:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label8
< 	la	$a0 bool_const0
< 	b	label9
< label8:
< 	la	$a0 bool_const1
< label9:
< label6:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label4
< 	lw	$s1 20($s0)
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 20($s0)
< 	b	label3
< label4:
< 	move	$a0 $zero
< 	lw	$s1 16($s0)
< 	lw	$s2 20($s0)
< 	lw	$a0 20($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	mul	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label13
< 	la	$a0 bool_const0
< label13:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label11
< 	lw	$a0 16($s0)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label14
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label14:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
542,585c374,377
< 	bne	$a0 $zero label15
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label15:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	b	label12
< label11:
< 	la	$a0 int_const0
< label12:
< 	lw	$s1 24($s0)
< 	lw	$a0 16($s0)
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	ble	$t1 $t2 label18
< 	la	$a0 bool_const0
< label18:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label16
< 	la	$a0 str_const2
< 	bne	$a0 $zero label19
< 	la	$a0 str_const4
< 	li	$t1 1
< 	jal	_dispatch_abort
< label19:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	b	label17
< label16:
< 	la	$a0 str_const3
< label17:
< 	b	label1
< label2:
< 	move	$a0 $zero
< 	sw	$a0 28($s0)
< 	move	$a0 $s0
< 	lw	$fp 24($sp)
< 	lw	$s0 20($sp)
< 	lw	$ra 16($sp)
< 	addiu	$sp $sp 24
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/primes.cl
+ spim_outname=primes.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/primes.cl
+ spim_errname=primes.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.spim.out
6,106c6,25
< 2 is trivially prime.
< 3 is prime.
< 5 is prime.
< 7 is prime.
< 11 is prime.
< 13 is prime.
< 17 is prime.
< 19 is prime.
< 23 is prime.
< 29 is prime.
< 31 is prime.
< 37 is prime.
< 41 is prime.
< 43 is prime.
< 47 is prime.
< 53 is prime.
< 59 is prime.
< 61 is prime.
< 67 is prime.
< 71 is prime.
< 73 is prime.
< 79 is prime.
< 83 is prime.
< 89 is prime.
< 97 is prime.
< 101 is prime.
< 103 is prime.
< 107 is prime.
< 109 is prime.
< 113 is prime.
< 127 is prime.
< 131 is prime.
< 137 is prime.
< 139 is prime.
< 149 is prime.
< 151 is prime.
< 157 is prime.
< 163 is prime.
< 167 is prime.
< 173 is prime.
< 179 is prime.
< 181 is prime.
< Increasing heap...
< 191 is prime.
< 193 is prime.
< 197 is prime.
< 199 is prime.
< 211 is prime.
< 223 is prime.
< 227 is prime.
< 229 is prime.
< 233 is prime.
< 239 is prime.
< 241 is prime.
< 251 is prime.
< 257 is prime.
< 263 is prime.
< 269 is prime.
< 271 is prime.
< 277 is prime.
< 281 is prime.
< 283 is prime.
< 293 is prime.
< 307 is prime.
< 311 is prime.
< 313 is prime.
< 317 is prime.
< Increasing heap...
< 331 is prime.
< 337 is prime.
< 347 is prime.
< 349 is prime.
< 353 is prime.
< 359 is prime.
< 367 is prime.
< 373 is prime.
< 379 is prime.
< 383 is prime.
< 389 is prime.
< 397 is prime.
< 401 is prime.
< 409 is prime.
< 419 is prime.
< 421 is prime.
< 431 is prime.
< 433 is prime.
< 439 is prime.
< 443 is prime.
< Increasing heap...
< 449 is prime.
< 457 is prime.
< 461 is prime.
< 463 is prime.
< 467 is prime.
< 479 is prime.
< 487 is prime.
< 491 is prime.
< 499 is prime.
< Abort called from class String
< Stats -- #instructions : 793239
<          #reads : 180845  #writes 93213  #branches 191164  #other 328017
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.spim.out.filtered
6,104c6,25
< 2 is trivially prime.
< 3 is prime.
< 5 is prime.
< 7 is prime.
< 11 is prime.
< 13 is prime.
< 17 is prime.
< 19 is prime.
< 23 is prime.
< 29 is prime.
< 31 is prime.
< 37 is prime.
< 41 is prime.
< 43 is prime.
< 47 is prime.
< 53 is prime.
< 59 is prime.
< 61 is prime.
< 67 is prime.
< 71 is prime.
< 73 is prime.
< 79 is prime.
< 83 is prime.
< 89 is prime.
< 97 is prime.
< 101 is prime.
< 103 is prime.
< 107 is prime.
< 109 is prime.
< 113 is prime.
< 127 is prime.
< 131 is prime.
< 137 is prime.
< 139 is prime.
< 149 is prime.
< 151 is prime.
< 157 is prime.
< 163 is prime.
< 167 is prime.
< 173 is prime.
< 179 is prime.
< 181 is prime.
< Increasing heap...
< 191 is prime.
< 193 is prime.
< 197 is prime.
< 199 is prime.
< 211 is prime.
< 223 is prime.
< 227 is prime.
< 229 is prime.
< 233 is prime.
< 239 is prime.
< 241 is prime.
< 251 is prime.
< 257 is prime.
< 263 is prime.
< 269 is prime.
< 271 is prime.
< 277 is prime.
< 281 is prime.
< 283 is prime.
< 293 is prime.
< 307 is prime.
< 311 is prime.
< 313 is prime.
< 317 is prime.
< Increasing heap...
< 331 is prime.
< 337 is prime.
< 347 is prime.
< 349 is prime.
< 353 is prime.
< 359 is prime.
< 367 is prime.
< 373 is prime.
< 379 is prime.
< 383 is prime.
< 389 is prime.
< 397 is prime.
< 401 is prime.
< 409 is prime.
< 419 is prime.
< 421 is prime.
< 431 is prime.
< 433 is prime.
< 439 is prime.
< 443 is prime.
< Increasing heap...
< 449 is prime.
< 457 is prime.
< 461 is prime.
< 463 is prime.
< 467 is prime.
< 479 is prime.
< 487 is prime.
< 491 is prime.
< 499 is prime.
< Abort called from class String
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/primes.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 247 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/primes.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/primes.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/recclass.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/recclass.cl
+ outname=recclass.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/recclass.cl
+ errname=recclass.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.out /home/raj/cool/distro/testsuite/cgen/recclass.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.out /home/raj/cool/distro/testsuite/cgen/recclass.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.out
13c13
< 	.word	2
---
> 	.word	1
15c15
< 	.word	3
---
> 	.word	7
17c17
< 	.word	4
---
> 	.word	3
29c29
< 	.word	4
---
> 	.word	3
36,38c36,38
< str_const10:
< 	.word	4
< 	.word	6
---
> str_const7:
> 	.word	3
> 	.word	5
41c41
< 	.ascii	"Main"
---
> 	.ascii	"P"
45,47c45,47
< str_const9:
< 	.word	4
< 	.word	5
---
> str_const0:
> 	.word	3
> 	.word	17
50c50
< 	.ascii	"C"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/recclass.cl"
55c55
< 	.word	4
---
> 	.word	3
58,59c58,59
< 	.word	int_const2
< 	.ascii	"P"
---
> 	.word	int_const1
> 	.ascii	"C"
63,64c63,64
< str_const7:
< 	.word	4
---
> str_const10:
> 	.word	3
68c68
< 	.ascii	"String"
---
> 	.ascii	"Bool"
72,74c72,74
< str_const6:
< 	.word	4
< 	.word	6
---
> str_const9:
> 	.word	3
> 	.word	5
76,77c76,77
< 	.word	int_const1
< 	.ascii	"Bool"
---
> 	.word	int_const4
> 	.ascii	"IO"
81,83c81,83
< str_const5:
< 	.word	4
< 	.word	5
---
> str_const3:
> 	.word	3
> 	.word	6
85,86c85,86
< 	.word	int_const4
< 	.ascii	"Int"
---
> 	.word	int_const5
> 	.ascii	"Object"
90,92c90,92
< str_const4:
< 	.word	4
< 	.word	5
---
> str_const6:
> 	.word	3
> 	.word	6
95c95
< 	.ascii	"IO"
---
> 	.ascii	"String"
99,100c99,100
< str_const3:
< 	.word	4
---
> str_const5:
> 	.word	3
104c104
< 	.ascii	"Object"
---
> 	.ascii	"Main"
109c109
< 	.word	4
---
> 	.word	3
117,118c117,118
< str_const1:
< 	.word	4
---
> str_const4:
> 	.word	3
121,122c121,122
< 	.word	int_const4
< 	.ascii	"ok\n"
---
> 	.word	int_const7
> 	.ascii	"Int"
126,128c126,128
< str_const0:
< 	.word	4
< 	.word	17
---
> str_const1:
> 	.word	3
> 	.word	5
131c131
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/recclass.cl"
---
> 	.ascii	"ok\n"
135,136c135,136
< int_const7:
< 	.word	2
---
> int_const0:
> 	.word	1
139c139,145
< 	.word	48
---
> 	.word	0
> 	.word	-1
> int_const1:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
142c148
< 	.word	2
---
> 	.word	1
147,148c153,154
< int_const5:
< 	.word	2
---
> int_const4:
> 	.word	1
153,154c159,160
< int_const4:
< 	.word	2
---
> int_const7:
> 	.word	1
160c166
< 	.word	2
---
> 	.word	1
163c169
< 	.word	6
---
> 	.word	4
166,168d171
< 	.word	2
< 	.word	4
< 	.word	Int_dispTab
170,172d172
< 	.word	-1
< int_const1:
< 	.word	2
175c175
< 	.word	4
---
> 	.word	48
177,178c177,178
< int_const0:
< 	.word	2
---
> int_const5:
> 	.word	1
181c181
< 	.word	0
---
> 	.word	6
184c184
< 	.word	3
---
> 	.word	7
190c190
< 	.word	3
---
> 	.word	7
206,207d205
< 	.word	IO_protObj
< 	.word	IO_init
210,211c208,209
< 	.word	Bool_protObj
< 	.word	Bool_init
---
> 	.word	Main_protObj
> 	.word	Main_init
218,265c216,220
< 	.word	Main_protObj
< 	.word	Main_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.f1
< 	.word	Main.main
< P_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	P.foo
< 	.word	P.badGuy
< C_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	C.foo
< 	.word	P.badGuy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabInt_dispTabMain_dispTabString_dispTabP_dispTabC_dispTabIO_dispTabBool_dispTab	.word	-1
271,277c226,227
< Main_protObj:
< 	.word	7
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
< P_protObj:
< 	.word	5
---
> Int_protObj:
> 	.word	1
279c229
< 	.word	P_dispTab
---
> 	.word	Int_dispTab
282,286c232,235
< C_protObj:
< 	.word	6
< 	.word	4
< 	.word	C_dispTab
< 	.word	0
---
> Main_protObj:
> 	.word	2
> 	.word	3
> 	.word	Main_dispTab
289c238
< 	.word	4
---
> 	.word	3
295,296c244
< Bool_protObj:
< 	.word	3
---
> P_protObj:
298c246,247
< 	.word	Bool_dispTab
---
> 	.word	4
> 	.word	P_dispTab
301,302c250,251
< Int_protObj:
< 	.word	2
---
> C_protObj:
> 	.word	5
304c253
< 	.word	Int_dispTab
---
> 	.word	C_dispTab
308c257
< 	.word	1
---
> 	.word	6
310a260,265
> 	.word	-1
> Bool_protObj:
> 	.word	7
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
333c288
< Main_init:
---
> Int_init:
347c302
< P_init:
---
> Main_init:
361c316
< C_init:
---
> String_init:
368c323
< 	jal	P_init
---
> 	jal	Object_init
375c330
< String_init:
---
> P_init:
389c344
< Bool_init:
---
> C_init:
396c351
< 	jal	Object_init
---
> 	jal	P_init
403c358
< Int_init:
---
> IO_init:
417c372
< IO_init:
---
> Bool_init:
438,457c393
< 	la	$a0 bool_const0
< 	lw	$t1 12($a0)
< 	beqz	$t1 label0
< 	la	$a0 P_protObj
< 	jal	Object.copy
< 	jal	P_init
< 	sw	$a0 12($fp)
< 	b	label1
< label0:
< 	la	$a0 int_const0
< label1:
< 	lw	$a0 12($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
470,497c406,407
< 	la	$a0 C_protObj
< 	jal	Object.copy
< 	jal	C_init
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label4
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	sw	$a0 0($fp)
> 	move	$a0 null
510,522c420
< 	la	$a0 P_protObj
< 	jal	Object.copy
< 	jal	P_init
< 	sw	$a0 12($s0)
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
---
> 	move	$a0 null
535,536c433,434
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label6
---
> 	move	$a0 null
> 	bne	$a0 $zero label0
540c438
< label6:
---
> label0:
543c441
< 	jalr		$t1
---
> 	jalr	$t1
556,573c454
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 C_protObj
< 	jal	Object.copy
< 	jal	C_init
< 	sw	$a0 12($s0)
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/recclass.cl
+ spim_outname=recclass.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/recclass.cl
+ spim_errname=recclass.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.spim.out
6,10c6,29
< ok
< ok
< COOL program successfully executed
< Stats -- #instructions : 675
<          #reads : 140  #writes 110  #branches 136  #other 289
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> C_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> P_protObj
> IO_init
> Int_init
> Int_dispTab
> P_init
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> C_init
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.spim.out.filtered
6,8c6,29
< ok
< ok
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> C_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> P_protObj
> IO_init
> Int_init
> Int_dispTab
> P_init
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> C_init
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/recclass.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 220 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/recclass.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/recclass.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/scoping.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/scoping.cl
+ outname=scoping.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/scoping.cl
+ errname=scoping.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.out /home/raj/cool/distro/testsuite/cgen/scoping.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.out /home/raj/cool/distro/testsuite/cgen/scoping.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.out
13c13
< 	.word	4
---
> 	.word	6
15c15
< 	.word	5
---
> 	.word	4
17c17
< 	.word	6
---
> 	.word	5
29c29
< 	.word	6
---
> 	.word	5
36,38c36,38
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const6:
> 	.word	5
> 	.word	5
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bob"
45,46c45,55
< str_const9:
< 	.word	6
---
> str_const0:
> 	.word	5
> 	.word	16
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/scoping.cl"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const8:
> 	.word	5
54,55c63,64
< str_const8:
< 	.word	6
---
> str_const5:
> 	.word	5
58,59c67,68
< 	.word	int_const6
< 	.ascii	"Int"
---
> 	.word	int_const3
> 	.ascii	"IO"
63,64c72,73
< str_const7:
< 	.word	6
---
> str_const4:
> 	.word	5
67,68c76,77
< 	.word	int_const0
< 	.ascii	"Main"
---
> 	.word	int_const7
> 	.ascii	"Object"
72,73c81,82
< str_const6:
< 	.word	6
---
> str_const2:
> 	.word	5
76,77c85,86
< 	.word	int_const6
< 	.ascii	"Bob"
---
> 	.word	int_const8
> 	.ascii	"\n"
81,82c90
< str_const5:
< 	.word	6
---
> str_const9:
83a92
> 	.word	6
85,86c94,95
< 	.word	int_const3
< 	.ascii	"IO"
---
> 	.word	int_const7
> 	.ascii	"String"
90,91c99,100
< str_const4:
< 	.word	6
---
> str_const7:
> 	.word	5
94,95c103,104
< 	.word	int_const5
< 	.ascii	"Object"
---
> 	.word	int_const0
> 	.ascii	"Main"
100c109
< 	.word	6
---
> 	.word	5
103c112
< 	.word	int_const7
---
> 	.word	int_const9
108,109c117,118
< str_const2:
< 	.word	6
---
> str_const10:
> 	.word	5
112,113c121,122
< 	.word	int_const8
< 	.ascii	"\n"
---
> 	.word	int_const5
> 	.ascii	"Int"
118c127
< 	.word	6
---
> 	.word	5
126c135
< str_const0:
---
> int_const4:
128,136d136
< 	.word	16
< 	.word	String_dispTab
< 	.word	int_const9
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/scoping.cl"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< int_const9:
< 	.word	4
139c139
< 	.word	47
---
> 	.word	0
142c142
< 	.word	4
---
> 	.word	6
147c147,148
< int_const7:
---
> int_const1:
> 	.word	6
148a150,154
> 	.word	Int_dispTab
> 	.word	23
> 	.word	-1
> int_const9:
> 	.word	6
153,154c159,160
< int_const6:
< 	.word	4
---
> int_const3:
> 	.word	6
157c163
< 	.word	3
---
> 	.word	2
159,160c165,166
< int_const5:
< 	.word	4
---
> int_const6:
> 	.word	6
163c169
< 	.word	6
---
> 	.word	47
165,166c171,172
< int_const4:
< 	.word	4
---
> int_const5:
> 	.word	6
169c175
< 	.word	0
---
> 	.word	3
171,172c177,178
< int_const3:
< 	.word	4
---
> int_const0:
> 	.word	6
175c181
< 	.word	2
---
> 	.word	4
178c184
< 	.word	4
---
> 	.word	6
183,190c189,190
< int_const1:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	23
< 	.word	-1
< int_const0:
< 	.word	4
---
> int_const7:
> 	.word	6
193c193
< 	.word	4
---
> 	.word	6
196c196
< 	.word	5
---
> 	.word	4
202c202
< 	.word	5
---
> 	.word	4
223,224d222
< 	.word	Int_protObj
< 	.word	Int_init
229,275c227,229
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Bob_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.jack
< 	.word	Main.print_z
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabBob_dispTabMain_dispTabBool_dispTabString_dispTabInt_dispTab	.word	-1
281,299d234
< String_protObj:
< 	.word	6
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const4
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	5
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
318a254,272
> 	.word	-1
> Bool_protObj:
> 	.word	4
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> String_protObj:
> 	.word	5
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const4
> 	.word	0
> 	.word	-1
> Int_protObj:
> 	.word	6
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
341c295
< String_init:
---
> IO_init:
355c309
< Bool_init:
---
> Bob_init:
362c316,317
< 	jal	Object_init
---
> 	jal	IO_init
> 	la	$a0 int_const0
369c324
< Int_init:
---
> Main_init:
376c331,332
< 	jal	Object_init
---
> 	jal	Bob_init
> 	la	$a0 int_const1
383c339
< IO_init:
---
> Bool_init:
397c353
< Bob_init:
---
> String_init:
404,406c360
< 	jal	IO_init
< 	la	$a0 int_const0
< 	sw	$a0 16($s0)
---
> 	jal	Object_init
413c367
< Main_init:
---
> Int_init:
420,422c374
< 	jal	Bob_init
< 	la	$a0 int_const1
< 	sw	$a0 20($s0)
---
> 	jal	Object_init
436,473c388
< 	lw	$s1 16($fp)
< 	lw	$a0 16($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s1 16($s0)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	lw	$s1 16($fp)
< 	lw	$a0 16($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	move	$a0 $s1
---
> 	move	$a0 null
486,521c401
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 12($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
534,580c414
< 	lw	$a0 20($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$s1 20($s0)
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label6
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/scoping.cl
+ spim_outname=scoping.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/scoping.cl
+ spim_errname=scoping.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.spim.out
6,11c6,27
< z = 23
< z = 29
< z = 33
< COOL program successfully executed
< Stats -- #instructions : 657
<          #reads : 148  #writes 98  #branches 125  #other 286
---
> The following symbols are undefined:
> heap_start
> Bob_protObj
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Bob_init
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.spim.out.filtered
6,9c6,27
< z = 23
< z = 29
< z = 33
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Bob_protObj
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Bob_init
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/scoping.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 229 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/scoping.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/scoping.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ outname=selftypeattribute.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ errname=selftypeattribute.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.out /home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.out /home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.out
15c15
< 	.word	4
---
> 	.word	7
17c17
< 	.word	5
---
> 	.word	6
29c29
< 	.word	5
---
> 	.word	6
36,37c36,37
< str_const10:
< 	.word	5
---
> str_const4:
> 	.word	6
41c41
< 	.ascii	"B"
---
> 	.ascii	"A"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const5:
> 	.word	6
50c50
< 	.ascii	"A"
---
> 	.ascii	"B"
54,55c54,55
< str_const8:
< 	.word	5
---
> str_const10:
> 	.word	6
59c59
< 	.ascii	"String"
---
> 	.ascii	"Bool"
63a64
> 	.word	6
64a66,72
> 	.word	String_dispTab
> 	.word	int_const1
> 	.ascii	"IO"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const0:
65a74
> 	.word	19
68c77
< 	.ascii	"Bool"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl"
72,74c81,83
< str_const6:
< 	.word	5
< 	.word	5
---
> str_const3:
> 	.word	6
> 	.word	6
77c86
< 	.ascii	"Int"
---
> 	.ascii	"Object"
81,82c90
< str_const5:
< 	.word	5
---
> str_const1:
83a92
> 	.word	5
85,86c94,95
< 	.word	int_const4
< 	.ascii	"Main"
---
> 	.word	int_const0
> 	.ascii	"\n"
90,92c99,101
< str_const4:
< 	.word	5
< 	.word	5
---
> str_const9:
> 	.word	6
> 	.word	6
94,95c103,104
< 	.word	int_const1
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"String"
99,100c108,109
< str_const3:
< 	.word	5
---
> str_const8:
> 	.word	6
104c113
< 	.ascii	"Object"
---
> 	.ascii	"Main"
109c118
< 	.word	5
---
> 	.word	6
117,126c126,127
< str_const1:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.ascii	"\n"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const0:
---
> str_const6:
> 	.word	6
128d128
< 	.word	19
131c131
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl"
---
> 	.ascii	"Int"
135c135
< int_const7:
---
> int_const2:
139c139
< 	.word	57
---
> 	.word	0
141c141
< int_const6:
---
> int_const0:
145c145
< 	.word	13
---
> 	.word	1
147c147
< int_const5:
---
> int_const6:
151c151
< 	.word	3
---
> 	.word	13
157c157
< 	.word	4
---
> 	.word	57
159c159
< int_const3:
---
> int_const1:
163c163
< 	.word	6
---
> 	.word	2
165c165
< int_const2:
---
> int_const7:
169c169
< 	.word	0
---
> 	.word	3
171c171
< int_const1:
---
> int_const3:
175c175
< 	.word	2
---
> 	.word	4
177c177
< int_const0:
---
> int_const5:
181c181
< 	.word	1
---
> 	.word	6
184c184
< 	.word	4
---
> 	.word	7
190c190
< 	.word	4
---
> 	.word	7
205a206,211
> 	.word	A_protObj
> 	.word	A_init
> 	.word	B_protObj
> 	.word	B_init
> 	.word	Int_protObj
> 	.word	Int_init
210,213d215
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
216,270c218,220
< 	.word	A_protObj
< 	.word	A_init
< 	.word	B_protObj
< 	.word	B_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< A_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.init
< 	.word	A.foo
< 	.word	A.getx
< B_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	A.init
< 	.word	B.foo
< 	.word	A.getx
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabA_dispTabB_dispTabInt_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTab	.word	-1
277c227
< 	.word	6
---
> 	.word	1
283c233
< 	.word	7
---
> 	.word	2
288,300d237
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const2
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
308c245
< 	.word	1
---
> 	.word	4
313c250
< 	.word	2
---
> 	.word	5
315a253,265
> 	.word	-1
> String_protObj:
> 	.word	6
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const2
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	7
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
366c316
< String_init:
---
> Int_init:
380c330
< Bool_init:
---
> IO_init:
394c344
< Int_init:
---
> Main_init:
401c351
< 	jal	Object_init
---
> 	jal	IO_init
408c358
< IO_init:
---
> String_init:
422c372
< Main_init:
---
> Bool_init:
429c379
< 	jal	IO_init
---
> 	jal	Object_init
443,452d392
< 	la	$t1 class_objTab
< 	lw	$t2 0($s0)
< 	sll	$t2 $t2 3
< 	addu	$t1 $t1 $t2
< 	move	$s1 $t1
< 	lw	$a0 0($t1)
< 	jal	Object.copy
< 	lw	$t1 4($s1)
< 	jalr		$t1
< 	sw	$a0 12($s0)
478c418
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
504,564c444
< 	la	$a0 B_protObj
< 	jal	Object.copy
< 	jal	B_init
< 	move	$s1 $a0
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ spim_outname=selftypeattribute.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/selftypeattribute.cl
+ spim_errname=selftypeattribute.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.spim.out
6,9c6,29
< 2
< COOL program successfully executed
< Stats -- #instructions : 426
<          #reads : 93  #writes 70  #branches 80  #other 183
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.spim.out.filtered
6,7c6,29
< 2
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> A_init
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> B_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> A_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> B_init
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/selftypeattribute.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 220 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/selftypeattribute.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/selftypeattribute.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/sequence.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/sequence.cl
+ outname=sequence.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/sequence.cl
+ errname=sequence.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.out /home/raj/cool/distro/testsuite/cgen/sequence.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.out /home/raj/cool/distro/testsuite/cgen/sequence.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.out
13c13
< 	.word	3
---
> 	.word	2
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,37c36,37
< str_const7:
< 	.word	5
---
> str_const3:
> 	.word	3
41c41
< 	.ascii	"String"
---
> 	.ascii	"Bool"
45a46
> 	.word	3
47d47
< 	.word	6
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,56c54,56
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const2:
> 	.word	3
> 	.word	6
59c59
< 	.ascii	"Int"
---
> 	.ascii	"Object"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const5:
> 	.word	3
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"String"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const7:
> 	.word	3
> 	.word	6
76,77c76,77
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const2
> 	.ascii	"Main"
81,83c81,83
< str_const2:
< 	.word	5
< 	.word	6
---
> str_const1:
> 	.word	3
> 	.word	8
85,86c85,86
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const5
> 	.ascii	"<basic class>"
90c90,91
< str_const1:
---
> str_const4:
> 	.word	3
92d92
< 	.word	8
95c95
< 	.ascii	"<basic class>"
---
> 	.ascii	"Int"
100c100
< 	.word	5
---
> 	.word	3
108,109c108,109
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	2
112c112
< 	.word	48
---
> 	.word	0
114,115c114,115
< int_const6:
< 	.word	3
---
> int_const1:
> 	.word	2
118c118
< 	.word	13
---
> 	.word	1
121c121,127
< 	.word	3
---
> 	.word	2
> 	.word	4
> 	.word	Int_dispTab
> 	.word	13
> 	.word	-1
> int_const3:
> 	.word	2
126,127c132,133
< int_const4:
< 	.word	3
---
> int_const6:
> 	.word	2
132,133c138,139
< int_const3:
< 	.word	3
---
> int_const7:
> 	.word	2
136c142
< 	.word	4
---
> 	.word	48
139c145
< 	.word	3
---
> 	.word	2
142,145d147
< 	.word	6
< 	.word	-1
< int_const1:
< 	.word	3
147,148d148
< 	.word	Int_dispTab
< 	.word	1
150,151c150,151
< int_const0:
< 	.word	3
---
> int_const4:
> 	.word	2
154c154
< 	.word	0
---
> 	.word	6
157c157
< 	.word	4
---
> 	.word	1
163c163
< 	.word	4
---
> 	.word	1
177,182d176
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
184a179,180
> 	.word	Int_protObj
> 	.word	Int_init
187,223c183,187
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabBool_dispTabInt_dispTabString_dispTabIO_dispTabMain_dispTab	.word	-1
229,235d192
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
237c194
< 	.word	4
---
> 	.word	1
243c200
< 	.word	3
---
> 	.word	2
247a205,211
> String_protObj:
> 	.word	3
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
> 	.word	-1
249c213
< 	.word	1
---
> 	.word	4
254c218
< 	.word	2
---
> 	.word	5
281c245
< String_init:
---
> Bool_init:
295c259
< Bool_init:
---
> Int_init:
309c273
< Int_init:
---
> String_init:
346d309
< 	sw	$a0 12($s0)
348d310
< 	sw	$a0 16($s0)
356,359c318,321
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
362,463c324,328
< 	lw	$s1 16($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	lw	$s1 16($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	lw	$s1 16($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	lw	$s1 16($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	lw	$s1 16($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 16($s0)
< 	lw	$s1 12($s0)
< 	lw	$a0 16($s0)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label0
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/sequence.cl
+ spim_outname=sequence.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/sequence.cl
+ spim_errname=sequence.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.spim.out
6,8c6,25
< 21COOL program successfully executed
< Stats -- #instructions : 848
<          #reads : 174  #writes 124  #branches 184  #other 366
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.spim.out.filtered
6c6,25
< 21COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sequence.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 187 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sequence.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/sequence.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ outname=shadow-attr-case.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ errname=shadow-attr-case.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.out
13c13
< 	.word	3
---
> 	.word	2
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36c36,37
< str_const10:
---
> str_const1:
> 	.word	3
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const6:
> 	.word	3
54,55c54,55
< str_const8:
< 	.word	5
---
> str_const9:
> 	.word	3
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	3
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,73c72,73
< str_const6:
< 	.word	5
---
> str_const3:
> 	.word	3
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"\n"
81,82c81,82
< str_const5:
< 	.word	5
---
> str_const8:
> 	.word	3
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const4
> 	.ascii	"String"
90,92c90,92
< str_const4:
< 	.word	5
< 	.word	8
---
> str_const10:
> 	.word	3
> 	.word	6
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const2
> 	.ascii	"Main"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	19
---
> str_const4:
> 	.word	3
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl"
---
> 	.ascii	"<basic class>"
109,110c109,110
< 	.word	5
< 	.word	5
---
> 	.word	3
> 	.word	6
112,113c112,113
< 	.word	int_const7
< 	.ascii	"\n"
---
> 	.word	int_const2
> 	.ascii	"good"
117c117,118
< str_const1:
---
> str_const7:
> 	.word	3
119d119
< 	.word	6
121,122c121,122
< 	.word	int_const2
< 	.ascii	"good"
---
> 	.word	int_const1
> 	.ascii	"Int"
127,128c127,128
< 	.word	5
< 	.word	5
---
> 	.word	3
> 	.word	19
130,131c130,131
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	2
139c139
< 	.word	1
---
> 	.word	0
141,142c141,142
< int_const6:
< 	.word	3
---
> int_const7:
> 	.word	2
148c148,154
< 	.word	3
---
> 	.word	2
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
> 	.word	-1
> int_const6:
> 	.word	2
153,154c159,160
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	2
159,160c165,166
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	2
166c172
< 	.word	3
---
> 	.word	2
171,172c177,178
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	2
177,182d182
< int_const0:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
184c184
< 	.word	4
---
> 	.word	1
190c190
< 	.word	4
---
> 	.word	1
204,209d203
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
< 	.word	Int_protObj
< 	.word	Int_init
211a206,207
> 	.word	Int_protObj
> 	.word	Int_init
214,250c210,214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabBool_dispTabInt_dispTabString_dispTabIO_dispTabMain_dispTab	.word	-1
256,262d219
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
264c221
< 	.word	4
---
> 	.word	1
270c227
< 	.word	3
---
> 	.word	2
274a232,238
> String_protObj:
> 	.word	3
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
> 	.word	-1
276c240
< 	.word	1
---
> 	.word	4
281c245
< 	.word	2
---
> 	.word	5
307c271
< String_init:
---
> Bool_init:
321c285
< Bool_init:
---
> Int_init:
335c299
< Int_init:
---
> String_init:
371,372c335
< 	la	$a0 str_const0
< 	sw	$a0 12($s0)
---
> 	la	$a0 str_const1
380,383c343,346
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
386,428c349,353
< 	la	$a0 str_const1
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_case_abort2
< label1:
< 	lw	$t2 0($a0)
< 	blt	$t2 5 label2
< 	bgt	$t2 5 label2
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	b	label0
< label2:
< 	jal	_case_abort
< label0:
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ spim_outname=shadow-attr-case.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-case.cl
+ spim_errname=shadow-attr-case.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 190
<          #reads : 34  #writes 27  #branches 36  #other 93
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-case.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-case.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-attr-case.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ outname=shadow-attr-formal.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ errname=shadow-attr-formal.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	3
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36c36,37
< str_const10:
---
> str_const1:
> 	.word	2
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const8:
> 	.word	2
54,55c54,55
< str_const8:
< 	.word	5
---
> str_const9:
> 	.word	2
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	2
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,73c72,73
< str_const6:
< 	.word	5
---
> str_const3:
> 	.word	2
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"\n"
81,82c81,82
< str_const5:
< 	.word	5
---
> str_const7:
> 	.word	2
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const4
> 	.ascii	"String"
90,92c90,92
< str_const4:
< 	.word	5
< 	.word	8
---
> str_const0:
> 	.word	2
> 	.word	19
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	19
---
> str_const10:
> 	.word	2
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl"
---
> 	.word	int_const2
> 	.ascii	"Main"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
117,118c117,118
< str_const1:
< 	.word	5
---
> str_const2:
> 	.word	2
126,127c126,127
< str_const0:
< 	.word	5
---
> str_const6:
> 	.word	2
130,131c130,131
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const1
> 	.ascii	"Int"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	1
139c139
< 	.word	1
---
> 	.word	0
141,142c141,142
< int_const6:
< 	.word	3
---
> int_const5:
> 	.word	1
145c145
< 	.word	58
---
> 	.word	1
147,148c147,148
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	1
153,154c153,154
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	1
159,160c159,166
< int_const3:
< 	.word	3
---
> int_const6:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	58
> 	.word	-1
> int_const1:
> 	.word	1
166c172
< 	.word	3
---
> 	.word	1
171,172c177,178
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	1
177,182d182
< int_const0:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
184c184
< 	.word	4
---
> 	.word	3
190c190
< 	.word	4
---
> 	.word	3
204,207d203
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
210,211d205
< 	.word	Bool_protObj
< 	.word	Bool_init
214,251c208,214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.method
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
> Object_dispTabInt_dispTabString_dispTabBool_dispTabIO_dispTabMain_dispTab	.word	-1
256a220,225
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
258c227
< 	.word	5
---
> 	.word	2
265,270d233
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
273c236
< 	.word	Int_dispTab
---
> 	.word	Bool_dispTab
277c240
< 	.word	1
---
> 	.word	4
282c245
< 	.word	2
---
> 	.word	5
308c271
< String_init:
---
> Int_init:
322c285
< Bool_init:
---
> String_init:
336c299
< Int_init:
---
> Bool_init:
372,373c335
< 	la	$a0 str_const0
< 	sw	$a0 12($s0)
---
> 	la	$a0 str_const1
392c354
< 	la	$a0 str_const3
---
> 	la	$a0 str_const0
398c360
< 	jalr		$t1
---
> 	jalr	$t1
411,434c373
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ spim_outname=shadow-attr-formal.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-formal.cl
+ spim_errname=shadow-attr-formal.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 199
<          #reads : 38  #writes 30  #branches 35  #other 96
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-formal.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-formal.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-attr-formal.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ outname=shadow-attr-let.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ errname=shadow-attr-let.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.out
13c13
< 	.word	3
---
> 	.word	2
15,16d14
< 	.word	4
< _string_tag:
17a16,17
> _string_tag:
> 	.word	1
29c29
< 	.word	5
---
> 	.word	1
36c36,37
< str_const10:
---
> str_const1:
> 	.word	1
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const10:
> 	.word	1
55c55
< 	.word	5
---
> 	.word	1
59,68c59
< 	.ascii	"Int"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const7:
< 	.word	5
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.ascii	"IO"
72,74c63,65
< str_const6:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	1
> 	.word	18
77c68
< 	.ascii	"IO"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl"
82c73
< 	.word	5
---
> 	.word	1
85c76
< 	.word	int_const1
---
> 	.word	int_const5
90c81,82
< str_const4:
---
> str_const3:
> 	.word	1
92c84,92
< 	.word	8
---
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const6:
> 	.word	1
> 	.word	6
95c95
< 	.ascii	"<basic class>"
---
> 	.ascii	"String"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	18
---
> str_const9:
> 	.word	1
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl"
---
> 	.word	int_const2
> 	.ascii	"Main"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	1
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
117,118c117,118
< str_const1:
< 	.word	5
---
> str_const2:
> 	.word	1
126,127c126,127
< str_const0:
< 	.word	5
---
> str_const7:
> 	.word	1
130,131c130,131
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const1
> 	.ascii	"Int"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const4:
> 	.word	2
139c139,145
< 	.word	1
---
> 	.word	55
> 	.word	-1
> int_const0:
> 	.word	2
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
142c148
< 	.word	3
---
> 	.word	2
145c151
< 	.word	55
---
> 	.word	1
147,148c153,154
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	2
153,154c159,160
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	2
159,160c165,166
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	2
166c172
< 	.word	3
---
> 	.word	2
171,172c177,178
< int_const1:
< 	.word	3
---
> int_const5:
> 	.word	2
177,182d182
< int_const0:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
184c184
< 	.word	4
---
> 	.word	5
190c190
< 	.word	4
---
> 	.word	5
203a204,207
> 	.word	String_protObj
> 	.word	String_init
> 	.word	Int_protObj
> 	.word	Int_init
208,209d211
< 	.word	Int_protObj
< 	.word	Int_init
212,250c214
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabString_dispTabInt_dispTabIO_dispTabMain_dispTabBool_dispTab	.word	-1
257c221
< 	.word	5
---
> 	.word	1
263,268d226
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
270c228
< 	.word	3
---
> 	.word	2
276c234
< 	.word	1
---
> 	.word	3
281c239
< 	.word	2
---
> 	.word	4
284a243,248
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
321c285
< Bool_init:
---
> Int_init:
335c299
< Int_init:
---
> IO_init:
349c313
< IO_init:
---
> Main_init:
356c320,321
< 	jal	Object_init
---
> 	jal	IO_init
> 	la	$a0 str_const1
363c328
< Main_init:
---
> Bool_init:
370,372c335
< 	jal	IO_init
< 	la	$a0 str_const0
< 	sw	$a0 12($s0)
---
> 	jal	Object_init
386,411c349
< 	la	$s1 str_const1
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ spim_outname=shadow-attr-let.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-attr-let.cl
+ spim_errname=shadow-attr-let.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 182
<          #reads : 33  #writes 27  #branches 32  #other 90
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-attr-let.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-attr-let.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-attr-let.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ outname=shadow-case-let.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ errname=shadow-case-let.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	2
29c29
< 	.word	5
---
> 	.word	2
36c36,37
< str_const10:
---
> str_const2:
> 	.word	2
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const6:
> 	.word	2
55c55
< 	.word	5
---
> 	.word	2
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	2
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,73c72,73
< str_const6:
< 	.word	5
---
> str_const3:
> 	.word	2
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"\n"
81,83c81,83
< str_const5:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	2
> 	.word	18
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl"
90,92c90,92
< str_const4:
< 	.word	5
< 	.word	8
---
> str_const7:
> 	.word	2
> 	.word	6
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const4
> 	.ascii	"String"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	18
---
> str_const9:
> 	.word	2
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl"
---
> 	.word	int_const2
> 	.ascii	"Main"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	2
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
118c118
< 	.word	5
---
> 	.word	2
126,127c126,127
< str_const0:
< 	.word	5
---
> str_const10:
> 	.word	2
130,131c130,131
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const1
> 	.ascii	"Int"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const6:
> 	.word	5
139c139
< 	.word	1
---
> 	.word	55
141,142c141,142
< int_const6:
< 	.word	3
---
> int_const0:
> 	.word	5
145c145
< 	.word	55
---
> 	.word	0
148c148,154
< 	.word	3
---
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
> 	.word	-1
> int_const7:
> 	.word	5
153,154c159,160
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	5
159,160c165,166
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	5
166c172
< 	.word	3
---
> 	.word	5
171,172c177,178
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	5
177,182d182
< int_const0:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
184c184
< 	.word	4
---
> 	.word	1
190c190
< 	.word	4
---
> 	.word	1
203a204,207
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	String_protObj
> 	.word	String_init
210,250c214
< 	.word	Bool_protObj
< 	.word	Bool_init
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabBool_dispTabString_dispTabIO_dispTabMain_dispTabInt_dispTab	.word	-1
256,262d219
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
264c221
< 	.word	4
---
> 	.word	1
269,272c226,230
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
---
> String_protObj:
> 	.word	2
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
276c234
< 	.word	1
---
> 	.word	3
281c239
< 	.word	2
---
> 	.word	4
283a242,247
> 	.word	-1
> Int_protObj:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
306c270
< String_init:
---
> Bool_init:
320c284
< Bool_init:
---
> String_init:
334c298
< Int_init:
---
> IO_init:
348c312
< IO_init:
---
> Main_init:
355c319
< 	jal	Object_init
---
> 	jal	IO_init
362c326
< Main_init:
---
> Int_init:
369c333
< 	jal	IO_init
---
> 	jal	Object_init
377,380c341,344
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
383,428c347,351
< 	la	$a0 str_const0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_case_abort2
< label1:
< 	lw	$t2 0($a0)
< 	blt	$t2 5 label2
< 	bgt	$t2 5 label2
< 	move	$s1 $a0
< 	la	$s2 str_const1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	b	label0
< label2:
< 	jal	_case_abort
< label0:
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ spim_outname=shadow-case-let.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-case-let.cl
+ spim_errname=shadow-case-let.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 186
<          #reads : 34  #writes 26  #branches 35  #other 91
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-case-let.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-case-let.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-case-let.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ outname=shadow-formal-case.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ errname=shadow-formal-case.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.out
13c13
< 	.word	3
---
> 	.word	5
15c15
< 	.word	4
---
> 	.word	1
17c17
< 	.word	5
---
> 	.word	4
29c29
< 	.word	5
---
> 	.word	4
36c36,37
< str_const10:
---
> str_const2:
> 	.word	4
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const6:
> 	.word	4
54,55c54,55
< str_const8:
< 	.word	5
---
> str_const7:
> 	.word	4
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	4
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,73c72,73
< str_const6:
< 	.word	5
---
> str_const3:
> 	.word	4
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"\n"
81,82c81,82
< str_const5:
< 	.word	5
---
> str_const9:
> 	.word	4
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const4
> 	.ascii	"String"
90,92c90,92
< str_const4:
< 	.word	5
< 	.word	8
---
> str_const8:
> 	.word	4
> 	.word	6
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const2
> 	.ascii	"Main"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	19
---
> str_const4:
> 	.word	4
> 	.word	8
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl"
---
> 	.ascii	"<basic class>"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const1:
> 	.word	4
> 	.word	6
112,113c112,113
< 	.word	int_const7
< 	.ascii	"\n"
---
> 	.word	int_const2
> 	.ascii	"good"
117,118c117,118
< str_const1:
< 	.word	5
---
> str_const10:
> 	.word	4
121,122c121,122
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const1
> 	.ascii	"Int"
127,128c127,128
< 	.word	5
< 	.word	6
---
> 	.word	4
> 	.word	19
130,131c130,131
< 	.word	int_const2
< 	.ascii	"good"
---
> 	.word	int_const7
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	5
139c139
< 	.word	1
---
> 	.word	0
141,142c141,142
< int_const6:
< 	.word	3
---
> int_const5:
> 	.word	5
145c145
< 	.word	58
---
> 	.word	1
147,148c147,148
< int_const5:
< 	.word	3
---
> int_const6:
> 	.word	5
153,154c153,154
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	5
159,160c159,166
< int_const3:
< 	.word	3
---
> int_const7:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	58
> 	.word	-1
> int_const1:
> 	.word	5
166c172
< 	.word	3
---
> 	.word	5
171,172c177,178
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	5
177,182d182
< int_const0:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
184c184
< 	.word	4
---
> 	.word	1
190c190
< 	.word	4
---
> 	.word	1
203a204,205
> 	.word	Bool_protObj
> 	.word	Bool_init
208,211d209
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
214,251c212,214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.method
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabBool_dispTabIO_dispTabMain_dispTabString_dispTabInt_dispTab	.word	-1
257,263d219
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
265c221
< 	.word	4
---
> 	.word	1
270,275d225
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
277c227
< 	.word	1
---
> 	.word	2
282c232
< 	.word	2
---
> 	.word	3
284a235,247
> 	.word	-1
> String_protObj:
> 	.word	4
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
> 	.word	-1
> Int_protObj:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
307c270
< String_init:
---
> Bool_init:
321c284
< Bool_init:
---
> IO_init:
335c298
< Int_init:
---
> Main_init:
342c305
< 	jal	Object_init
---
> 	jal	IO_init
349c312
< IO_init:
---
> String_init:
363c326
< Main_init:
---
> Int_init:
370c333
< 	jal	IO_init
---
> 	jal	Object_init
378,381c341,344
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
384c347
< 	la	$a0 str_const0
---
> 	la	$a0 str_const1
386c349
< 	la	$a0 str_const3
---
> 	la	$a0 str_const0
391,394c354,358
< 	blt	$t2 5 label2
< 	bgt	$t2 5 label2
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
---
> 	blt	$t2 4 label2
> 	bgt	$t2 4 label2
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
397d360
< 	sw	$s1 0($fp)
399c362
< 	la	$a0 str_const3
---
> 	la	$a0 str_const0
405,406c368
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
411,414c373,376
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
423,446c385
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ spim_outname=shadow-formal-case.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-case.cl
+ spim_errname=shadow-formal-case.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 202
<          #reads : 38  #writes 29  #branches 38  #other 97
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-case.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-case.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-formal-case.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ outname=shadow-formal-let.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ errname=shadow-formal-let.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.out
13c13
< 	.word	3
---
> 	.word	5
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36,38c36,38
< str_const10:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	19
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl"
45c45,46
< str_const9:
---
> str_const2:
> 	.word	3
47d47
< 	.word	6
50,59c50
< 	.ascii	"Bool"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const8:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.ascii	"bad"
63,64c54,55
< str_const7:
< 	.word	5
---
> str_const9:
> 	.word	3
67,68c58,59
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const3
> 	.ascii	"Bool"
73c64
< 	.word	5
---
> 	.word	3
82c73
< 	.word	5
---
> 	.word	3
85c76
< 	.word	int_const1
---
> 	.word	int_const5
90c81,82
< str_const4:
---
> str_const3:
> 	.word	3
92c84,92
< 	.word	8
---
> 	.word	String_dispTab
> 	.word	int_const6
> 	.ascii	"\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const8:
> 	.word	3
> 	.word	6
95c95
< 	.ascii	"<basic class>"
---
> 	.ascii	"String"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	19
---
> str_const7:
> 	.word	3
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl"
---
> 	.word	int_const3
> 	.ascii	"Main"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	3
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
118,119c118,119
< 	.word	5
< 	.word	5
---
> 	.word	3
> 	.word	6
122c122
< 	.ascii	"bad"
---
> 	.ascii	"good"
126c126,127
< str_const0:
---
> str_const10:
> 	.word	3
128d128
< 	.word	6
131c131
< 	.ascii	"good"
---
> 	.ascii	"Int"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	5
139c139
< 	.word	1
---
> 	.word	0
142c142
< 	.word	3
---
> 	.word	5
145c145
< 	.word	57
---
> 	.word	1
147,148c147,148
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	5
154c154
< 	.word	3
---
> 	.word	5
159,160c159,160
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	5
163c163
< 	.word	3
---
> 	.word	57
166c166
< 	.word	3
---
> 	.word	5
169,171d168
< 	.word	4
< 	.word	-1
< int_const1:
172a170,172
> 	.word	-1
> int_const3:
> 	.word	5
175c175
< 	.word	6
---
> 	.word	4
177,178c177,178
< int_const0:
< 	.word	3
---
> int_const5:
> 	.word	5
181c181
< 	.word	0
---
> 	.word	6
208,211d207
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
214,251c210,214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.method
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTabInt_dispTab	.word	-1
256a220,229
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> Main_protObj:
> 	.word	2
> 	.word	3
> 	.word	Main_dispTab
> 	.word	-1
258c231
< 	.word	5
---
> 	.word	3
271c244
< 	.word	3
---
> 	.word	5
275,284d247
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Main_protObj:
< 	.word	2
< 	.word	3
< 	.word	Main_dispTab
307c270
< String_init:
---
> IO_init:
321c284
< Bool_init:
---
> Main_init:
328c291
< 	jal	Object_init
---
> 	jal	IO_init
335c298
< Int_init:
---
> String_init:
349c312
< IO_init:
---
> Bool_init:
363c326
< Main_init:
---
> Int_init:
370c333
< 	jal	IO_init
---
> 	jal	Object_init
384,385c347,350
< 	la	$s1 str_const0
< 	sw	$s1 0($sp)
---
> 	la	$a0 str_const1
> 	sw	$a0 0($fp)
> 	lw	$a0 0($fp)
> 	sw	$a0 0($sp)
388d352
< 	sw	$s1 0($fp)
390c354
< 	la	$a0 str_const3
---
> 	la	$a0 str_const0
396,397c360
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
410,433c373
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ spim_outname=shadow-formal-let.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-formal-let.cl
+ spim_errname=shadow-formal-let.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 194
<          #reads : 37  #writes 29  #branches 34  #other 94
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-formal-let.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-formal-let.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-formal-let.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ outname=shadow-let-case.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ errname=shadow-let-case.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.out
13c13
< 	.word	3
---
> 	.word	5
17c17
< 	.word	5
---
> 	.word	3
29c29
< 	.word	5
---
> 	.word	3
36c36,37
< str_const10:
---
> str_const1:
> 	.word	3
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
46c46
< 	.word	5
---
> 	.word	3
54,55c54,55
< str_const8:
< 	.word	5
---
> str_const6:
> 	.word	3
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63,64c63,64
< str_const7:
< 	.word	5
---
> str_const5:
> 	.word	3
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72,73c72,73
< str_const6:
< 	.word	5
---
> str_const3:
> 	.word	3
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"\n"
81,83c81,83
< str_const5:
< 	.word	5
< 	.word	6
---
> str_const0:
> 	.word	3
> 	.word	18
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl"
90,92c90,92
< str_const4:
< 	.word	5
< 	.word	8
---
> str_const8:
> 	.word	3
> 	.word	6
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const4
> 	.ascii	"String"
99,101c99,101
< str_const3:
< 	.word	5
< 	.word	18
---
> str_const7:
> 	.word	3
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl"
---
> 	.word	int_const2
> 	.ascii	"Main"
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	3
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
117,118c117,118
< str_const1:
< 	.word	5
---
> str_const2:
> 	.word	3
126,127c126,127
< str_const0:
< 	.word	5
---
> str_const10:
> 	.word	3
130,131c130,131
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const1
> 	.ascii	"Int"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const6:
> 	.word	5
139c139
< 	.word	1
---
> 	.word	55
141,142c141,142
< int_const6:
< 	.word	3
---
> int_const0:
> 	.word	5
145c145
< 	.word	55
---
> 	.word	0
148c148,154
< 	.word	3
---
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
> 	.word	-1
> int_const7:
> 	.word	5
153,154c159,160
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	5
159,160c165,166
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	5
166c172
< 	.word	3
---
> 	.word	5
171,172c177,178
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	5
177,182d182
< int_const0:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
208,211d207
< 	.word	Int_protObj
< 	.word	Int_init
< 	.word	Bool_protObj
< 	.word	Bool_init
214,250c210,214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> 	.word	Int_protObj
> 	.word	Int_init
> Object_dispTabIO_dispTabMain_dispTabString_dispTabBool_dispTabInt_dispTab	.word	-1
255a220,229
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
> 	.word	-1
> Main_protObj:
> 	.word	2
> 	.word	3
> 	.word	Main_dispTab
> 	.word	-1
257c231
< 	.word	5
---
> 	.word	3
270c244
< 	.word	3
---
> 	.word	5
274,283d247
< 	.word	-1
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Main_protObj:
< 	.word	2
< 	.word	3
< 	.word	Main_dispTab
306c270
< String_init:
---
> IO_init:
320c284
< Bool_init:
---
> Main_init:
327c291
< 	jal	Object_init
---
> 	jal	IO_init
334c298
< Int_init:
---
> String_init:
348c312
< IO_init:
---
> Bool_init:
362c326
< Main_init:
---
> Int_init:
369c333
< 	jal	IO_init
---
> 	jal	Object_init
377,380c341,344
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
---
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
383,428c347,351
< 	la	$s1 str_const0
< 	la	$a0 str_const1
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_case_abort2
< label1:
< 	lw	$t2 0($a0)
< 	blt	$t2 5 label2
< 	bgt	$t2 5 label2
< 	move	$s2 $a0
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	b	label0
< label2:
< 	jal	_case_abort
< label0:
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 16
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ spim_outname=shadow-let-case.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-case.cl
+ spim_errname=shadow-let-case.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 186
<          #reads : 34  #writes 26  #branches 35  #other 91
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-case.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-case.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-let-case.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ outname=shadow-let-let.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ errname=shadow-let-let.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.out /home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.out
13c13
< 	.word	3
---
> 	.word	1
15c15
< 	.word	4
---
> 	.word	2
36c36,37
< str_const10:
---
> str_const1:
> 	.word	5
38d38
< 	.word	6
41c41
< 	.ascii	"String"
---
> 	.ascii	"bad"
45c45
< str_const9:
---
> str_const7:
59c59
< 	.ascii	"Int"
---
> 	.ascii	"IO"
63c63
< str_const7:
---
> str_const5:
67,68c67,68
< 	.word	int_const2
< 	.ascii	"Main"
---
> 	.word	int_const4
> 	.ascii	"Object"
72c72
< str_const6:
---
> str_const3:
76,77c76,77
< 	.word	int_const4
< 	.ascii	"IO"
---
> 	.word	int_const5
> 	.ascii	"\n"
81c81
< str_const5:
---
> str_const10:
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Object"
---
> 	.word	int_const4
> 	.ascii	"String"
90c90
< str_const4:
---
> str_const0:
92c92
< 	.word	8
---
> 	.word	18
94,95c94,95
< 	.word	int_const5
< 	.ascii	"<basic class>"
---
> 	.word	int_const6
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl"
99c99
< str_const3:
---
> str_const9:
101c101
< 	.word	18
---
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl"
---
> 	.word	int_const2
> 	.ascii	"Main"
108,109c108
< str_const2:
< 	.word	5
---
> str_const4:
110a110
> 	.word	8
113c113
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
117c117
< str_const1:
---
> str_const2:
126c126
< str_const0:
---
> str_const6:
130,131c130,131
< 	.word	int_const3
< 	.ascii	"bad"
---
> 	.word	int_const1
> 	.ascii	"Int"
135,136c135,136
< int_const7:
< 	.word	3
---
> int_const0:
> 	.word	1
139c139
< 	.word	1
---
> 	.word	0
141,142c141,142
< int_const6:
< 	.word	3
---
> int_const5:
> 	.word	1
145c145
< 	.word	54
---
> 	.word	1
147,148c147,148
< int_const5:
< 	.word	3
---
> int_const7:
> 	.word	1
153,154c153,154
< int_const4:
< 	.word	3
---
> int_const3:
> 	.word	1
159,160c159,160
< int_const3:
< 	.word	3
---
> int_const1:
> 	.word	1
166c166
< 	.word	3
---
> 	.word	1
171,172c171,172
< int_const1:
< 	.word	3
---
> int_const4:
> 	.word	1
177,178c177,178
< int_const0:
< 	.word	3
---
> int_const6:
> 	.word	1
181c181
< 	.word	0
---
> 	.word	54
184c184
< 	.word	4
---
> 	.word	2
190c190
< 	.word	4
---
> 	.word	2
204,207d203
< 	.word	IO_protObj
< 	.word	IO_init
< 	.word	Main_protObj
< 	.word	Main_init
211a208,211
> 	.word	IO_protObj
> 	.word	IO_init
> 	.word	Main_protObj
> 	.word	Main_init
214,250c214
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabInt_dispTabBool_dispTabIO_dispTabMain_dispTabString_dispTab	.word	-1
256,260c220,223
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
---
> Int_protObj:
> 	.word	1
> 	.word	4
> 	.word	Int_dispTab
264c227
< 	.word	4
---
> 	.word	2
269,274d231
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
276c233
< 	.word	1
---
> 	.word	3
281c238
< 	.word	2
---
> 	.word	4
283a241,247
> 	.word	-1
> String_protObj:
> 	.word	5
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
306c270
< String_init:
---
> Int_init:
334c298
< Int_init:
---
> IO_init:
348c312
< IO_init:
---
> Main_init:
355c319
< 	jal	Object_init
---
> 	jal	IO_init
362c326
< Main_init:
---
> String_init:
369c333
< 	jal	IO_init
---
> 	jal	Object_init
383,411c347
< 	la	$s1 str_const0
< 	la	$s2 str_const1
< 	sw	$s2 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	sw	$s2 4($fp)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	lw	$s2 4($fp)
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ spim_outname=shadow-let-let.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/shadow-let-let.cl
+ spim_errname=shadow-let-let.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.spim.out
6,9c6,25
< good
< COOL program successfully executed
< Stats -- #instructions : 178
<          #reads : 33  #writes 26  #branches 31  #other 88
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.spim.out.filtered
6,7c6,25
< good
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/shadow-let-let.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 214 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/shadow-let-let.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/shadow-let-let.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ outname=simple-gc.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ errname=simple-gc.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.out /home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.out /home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.out
15,16d14
< 	.word	4
< _string_tag:
17a16,17
> _string_tag:
> 	.word	4
29c29
< 	.word	5
---
> 	.word	4
37c37
< 	.word	5
---
> 	.word	4
40,41c40,41
< 	.word	int_const0
< 	.ascii	"String"
---
> 	.word	int_const7
> 	.ascii	"Bool"
45c45,46
< str_const6:
---
> str_const3:
> 	.word	4
47d47
< 	.word	6
49,50c49,50
< 	.word	int_const7
< 	.ascii	"Bool"
---
> 	.word	int_const5
> 	.ascii	"IO"
54,56c54,56
< str_const5:
< 	.word	5
< 	.word	5
---
> str_const2:
> 	.word	4
> 	.word	6
58,59c58,59
< 	.word	int_const6
< 	.ascii	"Int"
---
> 	.word	int_const0
> 	.ascii	"Object"
63,64c63,64
< str_const4:
< 	.word	5
---
> str_const6:
> 	.word	4
67,68c67,68
< 	.word	int_const7
< 	.ascii	"Main"
---
> 	.word	int_const0
> 	.ascii	"String"
72,74c72,74
< str_const3:
< 	.word	5
< 	.word	5
---
> str_const0:
> 	.word	4
> 	.word	17
76,77c76,77
< 	.word	int_const5
< 	.ascii	"IO"
---
> 	.word	int_const10
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/simple-gc.cl"
81,82c81,82
< str_const2:
< 	.word	5
---
> str_const4:
> 	.word	4
85,86c85,86
< 	.word	int_const0
< 	.ascii	"Object"
---
> 	.word	int_const7
> 	.ascii	"Main"
91c91
< 	.word	5
---
> 	.word	4
94c94
< 	.word	int_const10
---
> 	.word	int_const11
99c99,100
< str_const0:
---
> str_const5:
> 	.word	4
101d101
< 	.word	17
103,104c103,104
< 	.word	int_const11
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/simple-gc.cl"
---
> 	.word	int_const6
> 	.ascii	"Int"
108c108
< int_const11:
---
> int_const9:
112c112
< 	.word	49
---
> 	.word	0
114c114,120
< int_const10:
---
> int_const4:
> 	.word	3
> 	.word	4
> 	.word	Int_dispTab
> 	.word	1
> 	.word	-1
> int_const11:
120c126
< int_const9:
---
> int_const5:
124c130
< 	.word	0
---
> 	.word	2
126c132
< int_const8:
---
> int_const6:
130c136
< 	.word	5
---
> 	.word	3
138c144
< int_const6:
---
> int_const10:
142c148
< 	.word	3
---
> 	.word	49
144c150
< int_const5:
---
> int_const8:
148c154
< 	.word	2
---
> 	.word	5
150c156
< int_const4:
---
> int_const0:
154c160
< 	.word	1
---
> 	.word	6
156c162
< int_const3:
---
> int_const1:
160c166
< 	.word	9
---
> 	.word	7
168,174c174
< int_const1:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	7
< 	.word	-1
< int_const0:
---
> int_const3:
178c178
< 	.word	6
---
> 	.word	9
181c181
< 	.word	4
---
> 	.word	5
187c187
< 	.word	4
---
> 	.word	5
207,208d206
< 	.word	Bool_protObj
< 	.word	Bool_init
211,248c209,211
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.f
< 	.word	Main.main
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabIO_dispTabMain_dispTabInt_dispTabString_dispTabBool_dispTab	.word	-1
254,259c217,220
< String_protObj:
< 	.word	5
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const9
< 	.word	0
---
> IO_protObj:
> 	.word	1
> 	.word	3
> 	.word	IO_dispTab
261,262c222,223
< Bool_protObj:
< 	.word	4
---
> Main_protObj:
> 	.word	2
264,265c225,226
< 	.word	Bool_dispTab
< 	.word	0
---
> 	.word	Main_dispTab
> 	.word	int_const9
273,279c234
< IO_protObj:
< 	.word	1
< 	.word	3
< 	.word	IO_dispTab
< 	.word	-1
< Main_protObj:
< 	.word	2
---
> String_protObj:
281c236,237
< 	.word	Main_dispTab
---
> 	.word	5
> 	.word	String_dispTab
282a239,245
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
305c268
< String_init:
---
> IO_init:
319c282
< Bool_init:
---
> Main_init:
326c289
< 	jal	Object_init
---
> 	jal	IO_init
347c310
< IO_init:
---
> String_init:
361c324
< Main_init:
---
> Bool_init:
368c331
< 	jal	IO_init
---
> 	jal	Object_init
376,379c339,342
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
382,414c345,349
< 	lw	$s1 16($fp)
< 	la	$a0 int_const0
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const2
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const3
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
417,420c352,355
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
423,446c358
< 	la	$s1 int_const4
< 	la	$a0 int_const5
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const6
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const7
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	la	$a0 int_const8
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
449d360
< 	sw	$s1 0($fp)
456,473d366
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
475,479c368,372
< 	jalr		$t1
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ spim_outname=simple-gc.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/simple-gc.cl
+ spim_errname=simple-gc.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.spim.out
6,8c6,25
< 45COOL program successfully executed
< Stats -- #instructions : 668
<          #reads : 132  #writes 94  #branches 144  #other 298
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.spim.out.filtered
6c6,25
< 45COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/simple-gc.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 211 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/simple-gc.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/simple-gc.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ outname=sort_list.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ errname=sort_list.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.out /home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.out /home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.out
15,16d14
< 	.word	7
< _string_tag:
17a16,17
> _string_tag:
> 	.word	7
29c29
< 	.word	8
---
> 	.word	7
36,38c36,38
< str_const11:
< 	.word	8
< 	.word	6
---
> str_const0:
> 	.word	7
> 	.word	17
41c41
< 	.ascii	"String"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/sort_list.cl"
45,47c45,47
< str_const10:
< 	.word	8
< 	.word	6
---
> str_const4:
> 	.word	7
> 	.word	5
50c50
< 	.ascii	"Bool"
---
> 	.ascii	"IO"
54,55c54,55
< str_const9:
< 	.word	8
---
> str_const1:
> 	.word	7
58,59c58,59
< 	.word	int_const5
< 	.ascii	"Int"
---
> 	.word	int_const1
> 	.ascii	"\n"
63,64c63,64
< str_const8:
< 	.word	8
---
> str_const10:
> 	.word	7
67,68c67,68
< 	.word	int_const4
< 	.ascii	"Main"
---
> 	.word	int_const5
> 	.ascii	"String"
72c72,73
< str_const7:
---
> str_const2:
> 	.word	7
74d74
< 	.word	5
76,77c76,77
< 	.word	int_const5
< 	.ascii	"Nil"
---
> 	.word	int_const6
> 	.ascii	"<basic class>"
81,83c81,83
< str_const6:
< 	.word	8
< 	.word	6
---
> str_const9:
> 	.word	7
> 	.word	5
85,86c85,86
< 	.word	int_const4
< 	.ascii	"Cons"
---
> 	.word	int_const7
> 	.ascii	"Int"
90,92c90,92
< str_const5:
< 	.word	8
< 	.word	6
---
> str_const6:
> 	.word	7
> 	.word	5
94,95c94,95
< 	.word	int_const4
< 	.ascii	"List"
---
> 	.word	int_const7
> 	.ascii	"Nil"
99,101c99,101
< str_const4:
< 	.word	8
< 	.word	5
---
> str_const7:
> 	.word	7
> 	.word	6
103,104c103,104
< 	.word	int_const6
< 	.ascii	"IO"
---
> 	.word	int_const8
> 	.ascii	"Cons"
108,109c108,109
< str_const3:
< 	.word	8
---
> str_const11:
> 	.word	7
112,113c112,113
< 	.word	int_const3
< 	.ascii	"Object"
---
> 	.word	int_const8
> 	.ascii	"Bool"
117,119c117,119
< str_const2:
< 	.word	8
< 	.word	8
---
> str_const5:
> 	.word	7
> 	.word	6
121,122c121,122
< 	.word	int_const7
< 	.ascii	"<basic class>"
---
> 	.word	int_const8
> 	.ascii	"List"
126,128c126,128
< str_const1:
< 	.word	8
< 	.word	5
---
> str_const3:
> 	.word	7
> 	.word	6
130,131c130,131
< 	.word	int_const1
< 	.ascii	"\n"
---
> 	.word	int_const5
> 	.ascii	"Object"
135,137c135,137
< str_const0:
< 	.word	8
< 	.word	17
---
> str_const8:
> 	.word	7
> 	.word	6
140c140
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/sort_list.cl"
---
> 	.ascii	"Main"
144c144
< int_const8:
---
> int_const0:
148c148
< 	.word	49
---
> 	.word	0
150c150
< int_const7:
---
> int_const1:
154c154
< 	.word	13
---
> 	.word	1
159a160,165
> 	.word	13
> 	.word	-1
> int_const4:
> 	.word	6
> 	.word	4
> 	.word	Int_dispTab
162c168
< int_const5:
---
> int_const7:
168c174
< int_const4:
---
> int_const8:
178c184
< 	.word	6
---
> 	.word	49
180c186
< int_const2:
---
> int_const5:
184,186d189
< 	.word	20
< 	.word	-1
< int_const1:
188,190d190
< 	.word	4
< 	.word	Int_dispTab
< 	.word	1
192c192
< int_const0:
---
> int_const2:
196c196
< 	.word	0
---
> 	.word	20
199c199
< 	.word	7
---
> 	.word	8
205c205
< 	.word	7
---
> 	.word	8
226,227d225
< 	.word	Cons_protObj
< 	.word	Cons_init
229a228,229
> 	.word	Cons_protObj
> 	.word	Cons_init
234,235d233
< 	.word	Bool_protObj
< 	.word	Bool_init
238,327c236,238
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.iota
< 	.word	Main.main
< List_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	List.isNil
< 	.word	List.cons
< 	.word	List.car
< 	.word	List.cdr
< 	.word	List.rev
< 	.word	List.sort
< 	.word	List.insert
< 	.word	List.rcons
< 	.word	List.print_list
< Nil_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Nil.isNil
< 	.word	List.cons
< 	.word	List.car
< 	.word	List.cdr
< 	.word	Nil.rev
< 	.word	Nil.sort
< 	.word	Nil.insert
< 	.word	Nil.rcons
< 	.word	Nil.print_list
< Cons_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Cons.isNil
< 	.word	List.cons
< 	.word	Cons.car
< 	.word	Cons.cdr
< 	.word	Cons.rev
< 	.word	Cons.sort
< 	.word	Cons.insert
< 	.word	Cons.rcons
< 	.word	Cons.print_list
< 	.word	Cons.init
< 	.word	-1
---
> 	.word	Bool_protObj
> 	.word	Bool_init
> Object_dispTabIO_dispTabList_dispTabNil_dispTabCons_dispTabMain_dispTabInt_dispTabString_dispTabBool_dispTab	.word	-1
333,351d243
< String_protObj:
< 	.word	8
< 	.word	5
< 	.word	String_dispTab
< 	.word	int_const0
< 	.word	0
< 	.word	-1
< Bool_protObj:
< 	.word	7
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	6
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
357,362d248
< Main_protObj:
< 	.word	5
< 	.word	4
< 	.word	Main_dispTab
< 	.word	0
< 	.word	-1
369c255
< 	.word	4
---
> 	.word	3
374c260
< 	.word	3
---
> 	.word	4
378a265,289
> 	.word	-1
> Main_protObj:
> 	.word	5
> 	.word	4
> 	.word	Main_dispTab
> 	.word	0
> 	.word	-1
> Int_protObj:
> 	.word	6
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
> String_protObj:
> 	.word	7
> 	.word	5
> 	.word	String_dispTab
> 	.word	int_const0
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	8
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
401c312
< String_init:
---
> IO_init:
415c326
< Bool_init:
---
> List_init:
422c333
< 	jal	Object_init
---
> 	jal	IO_init
429c340
< Int_init:
---
> Nil_init:
436c347
< 	jal	Object_init
---
> 	jal	List_init
443c354
< IO_init:
---
> Cons_init:
450c361
< 	jal	Object_init
---
> 	jal	List_init
471,485c382
< List_init:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	jal	IO_init
< 	move	$a0 $s0
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
< Nil_init:
---
> Int_init:
492c389
< 	jal	List_init
---
> 	jal	Object_init
499c396
< Cons_init:
---
> String_init:
506c403
< 	jal	List_init
---
> 	jal	Object_init
513,574c410
< Main.iota:
< 	addiu	$sp $sp -20
< 	sw	$fp 20($sp)
< 	sw	$s0 16($sp)
< 	sw	$ra 12($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 Nil_protObj
< 	jal	Object.copy
< 	jal	Nil_init
< 	sw	$a0 12($s0)
< 	la	$s1 int_const0
< label0:
< 	move	$s2 $s1
< 	lw	$a0 20($fp)
< 	lw	$t1 12($s2)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label2
< 	la	$a0 bool_const0
< label2:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label1
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	sw	$s1 0($fp)
< 	jal	Cons_init
< 	lw	$s1 0($fp)
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label3
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	sw	$a0 12($s0)
< 	move	$s2 $s1
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s2)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	move	$s1 $a0
< 	b	label0
< label1:
< 	move	$a0 $zero
< 	lw	$a0 12($s0)
< 	lw	$fp 20($sp)
< 	lw	$s0 16($sp)
< 	lw	$ra 12($sp)
< 	addiu	$sp $sp 24
< 	jr	$ra	
< Main.main:
---
> Bool_init:
581,583c417
< 	la	$a0 int_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
---
> 	jal	Object_init
585,616d418
< 	bne	$a0 $zero label4
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label5
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 44($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label6
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 48($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label7
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 60($t1)
< 	jalr		$t1
629,638c431
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 bool_const1
---
> 	move	$a0 null
651,654c444
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	jal	Cons_init
< 	move	$s1 $a0
---
> 	sw	$a0 0($fp)
661,663c451,452
< 	move	$a0 $s1
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label9
---
> 	lw	$a0 0($fp)
> 	bne	$a0 $zero label0
667c456
< label9:
---
> label0:
670,671c459
< 	jalr		$t1
< 	lw	$s1 0($fp)
---
> 	jalr	$t1
684,695c472
< 	move	$a0 $s0
< 	bne	$a0 $zero label10
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label10:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 Int_protObj
< 	jal	Object.copy
< 	jal	Int_init
---
> 	move	$a0 null
708,719c485
< 	move	$a0 $s0
< 	bne	$a0 $zero label11
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label11:
< 	lw	$t1 8($a0)
< 	lw	$t1 0($t1)
< 	jalr		$t1
< 	la	$a0 List_protObj
< 	jal	Object.copy
< 	jal	List_init
---
> 	move	$a0 null
733c499
< 	bne	$a0 $zero label12
---
> 	bne	$a0 $zero label1
737c503
< label12:
---
> label1:
740c506
< 	jalr		$t1
---
> 	jalr	$t1
754c520
< 	bne	$a0 $zero label13
---
> 	bne	$a0 $zero label2
758c524
< label13:
---
> label2:
761c527
< 	jalr		$t1
---
> 	jalr	$t1
775c541
< 	bne	$a0 $zero label14
---
> 	bne	$a0 $zero label3
779c545
< label14:
---
> label3:
782c548
< 	jalr		$t1
---
> 	jalr	$t1
796c562
< 	bne	$a0 $zero label15
---
> 	bne	$a0 $zero label4
800c566
< label15:
---
> label4:
803c569
< 	jalr		$t1
---
> 	jalr	$t1
817c583
< 	bne	$a0 $zero label16
---
> 	bne	$a0 $zero label5
821c587
< label16:
---
> label5:
824c590
< 	jalr		$t1
---
> 	jalr	$t1
880c646
< 	bne	$a0 $zero label17
---
> 	bne	$a0 $zero label6
884c650
< label17:
---
> label6:
887c653
< 	jalr		$t1
---
> 	jalr	$t1
906,909c672
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	jal	Cons_init
< 	bne	$a0 $zero label18
---
> 	bne	$a0 $zero label7
913c676
< label18:
---
> label7:
916c679
< 	jalr		$t1
---
> 	jalr	$t1
955,959c718
< 	lw	$a0 16($fp)
< 	sw	$a0 12($s0)
< 	lw	$a0 12($fp)
< 	sw	$a0 16($s0)
< 	move	$a0 $s0
---
> 	move	$a0 null
972c731
< 	lw	$a0 12($s0)
---
> 	move	$a0 null
985c744
< 	lw	$a0 16($s0)
---
> 	move	$a0 null
998,999c757
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
1001,1002c759,760
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label19
---
> 	move	$a0 null
> 	bne	$a0 $zero label8
1006c764
< label19:
---
> label8:
1009,1010c767,768
< 	jalr		$t1
< 	bne	$a0 $zero label20
---
> 	jalr	$t1
> 	bne	$a0 $zero label9
1014c772
< label20:
---
> label9:
1017c775
< 	jalr		$t1
---
> 	jalr	$t1
1030,1031c788
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
1033,1034c790,791
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label21
---
> 	move	$a0 null
> 	bne	$a0 $zero label10
1038c795
< label21:
---
> label10:
1041,1042c798,799
< 	jalr		$t1
< 	bne	$a0 $zero label22
---
> 	jalr	$t1
> 	bne	$a0 $zero label11
1046c803
< label22:
---
> label11:
1049c806
< 	jalr		$t1
---
> 	jalr	$t1
1056,1059c813,816
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
1062,1123c819,822
< 	lw	$s1 16($fp)
< 	lw	$a0 12($s0)
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label25
< 	la	$a0 bool_const0
< label25:
< 	lw	$t1 12($a0)
< 	beqz	$t1 label23
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	jal	Cons_init
< 	bne	$a0 $zero label26
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label26:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< 	b	label24
< label23:
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($fp)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label27
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label27:
< 	lw	$t1 8($a0)
< 	lw	$t1 52($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	jal	Cons_init
< 	bne	$a0 $zero label28
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label28:
< 	lw	$t1 8($a0)
< 	lw	$t1 64($t1)
< 	jalr		$t1
< label24:
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 20
---
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 16
1132,1133c831
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
---
> 	sw	null 0($sp)
1138,1139c836,837
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label29
---
> 	move	$a0 null
> 	bne	$a0 $zero label12
1143c841
< label29:
---
> label12:
1146c844
< 	jalr		$t1
---
> 	jalr	$t1
1149,1152c847
< 	la	$a0 Cons_protObj
< 	jal	Object.copy
< 	jal	Cons_init
< 	bne	$a0 $zero label30
---
> 	bne	$a0 $zero label13
1156c851
< label30:
---
> label13:
1159c854
< 	jalr		$t1
---
> 	jalr	$t1
1172,1204c867,893
< 	lw	$a0 12($s0)
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label31
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label31:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label32
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label32:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	lw	$a0 16($s0)
< 	bne	$a0 $zero label33
< 	la	$a0 str_const0
< 	li	$t1 1
< 	jal	_dispatch_abort
< label33:
< 	lw	$t1 8($a0)
< 	lw	$t1 60($t1)
< 	jalr		$t1
---
> 	move	$a0 null
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
> 	jr	$ra	
> Main.iota:
> 	addiu	$sp $sp -16
> 	sw	$fp 16($sp)
> 	sw	$s0 12($sp)
> 	sw	$ra 8($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
> 	lw	$fp 16($sp)
> 	lw	$s0 12($sp)
> 	lw	$ra 8($sp)
> 	addiu	$sp $sp 20
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ spim_outname=sort_list.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/sort_list.cl
+ spim_errname=sort_list.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.spim.out
6,28c6,31
< 0
< 1
< 2
< 3
< 4
< 5
< 6
< 7
< 8
< 9
< 10
< 11
< 12
< 13
< 14
< 15
< 16
< 17
< 18
< 19
< COOL program successfully executed
< Stats -- #instructions : 42648
<          #reads : 10411  #writes 8207  #branches 7951  #other 16079
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> List_init
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Nil_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Nil_protObj
> Cons_protObj
> List_protObj
> Cons_init
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.spim.out.filtered
6,26c6,31
< 0
< 1
< 2
< 3
< 4
< 5
< 6
< 7
< 8
< 9
< 10
< 11
< 12
< 13
< 14
< 15
< 16
< 17
< 18
< 19
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> List_init
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Nil_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Nil_protObj
> Cons_protObj
> List_protObj
> Cons_init
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/sort_list.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 238 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/sort_list.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/sort_list.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ outname=string-methods.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ errname=string-methods.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.out /home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.out /home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.out
13,14d12
< 	.word	3
< _bool_tag:
16c14
< _string_tag:
---
> _bool_tag:
17a16,17
> _string_tag:
> 	.word	1
29c29
< 	.word	5
---
> 	.word	1
36,38c36,38
< str_const10:
< 	.word	5
< 	.word	6
---
> str_const1:
> 	.word	1
> 	.word	7
41c41
< 	.ascii	"String"
---
> 	.ascii	"this is a"
45,46c45,46
< str_const9:
< 	.word	5
---
> str_const10:
> 	.word	1
54,56c54,56
< str_const8:
< 	.word	5
< 	.word	5
---
> str_const3:
> 	.word	1
> 	.word	7
59c59
< 	.ascii	"Int"
---
> 	.ascii	" string\n"
64,73c64
< 	.word	5
< 	.word	6
< 	.word	String_dispTab
< 	.word	int_const4
< 	.ascii	"Main"
< 	.byte	0	
< 	.align	2
< 	.word	-1
< str_const6:
< 	.word	5
---
> 	.word	1
82c73
< 	.word	5
---
> 	.word	1
85c76
< 	.word	int_const3
---
> 	.word	int_const6
90c81,82
< str_const4:
---
> str_const2:
> 	.word	1
92c84,92
< 	.word	8
---
> 	.word	String_dispTab
> 	.word	int_const7
> 	.ascii	"\n"
> 	.byte	0	
> 	.align	2
> 	.word	-1
> str_const6:
> 	.word	1
> 	.word	6
95c95
< 	.ascii	"<basic class>"
---
> 	.ascii	"String"
99,100c99,100
< str_const3:
< 	.word	5
---
> str_const0:
> 	.word	1
103c103
< 	.word	int_const7
---
> 	.word	int_const8
108,110c108,110
< str_const2:
< 	.word	5
< 	.word	7
---
> str_const8:
> 	.word	1
> 	.word	6
112,113c112,113
< 	.word	int_const8
< 	.ascii	" string\n"
---
> 	.word	int_const4
> 	.ascii	"Main"
117,119c117,119
< str_const1:
< 	.word	5
< 	.word	5
---
> str_const4:
> 	.word	1
> 	.word	8
122c122
< 	.ascii	"\n"
---
> 	.ascii	"<basic class>"
126c126,127
< str_const0:
---
> str_const9:
> 	.word	1
128d128
< 	.word	7
131c131
< 	.ascii	"this is a"
---
> 	.ascii	"Int"
135,136c135,136
< int_const10:
< 	.word	3
---
> int_const2:
> 	.word	4
139c139
< 	.word	9
---
> 	.word	0
141,142c141,142
< int_const9:
< 	.word	3
---
> int_const7:
> 	.word	4
147,148c147
< int_const8:
< 	.word	3
---
> int_const9:
150,154d148
< 	.word	Int_dispTab
< 	.word	8
< 	.word	-1
< int_const7:
< 	.word	3
157c151
< 	.word	54
---
> 	.word	13
159,160c153,154
< int_const6:
< 	.word	3
---
> int_const1:
> 	.word	4
163c157
< 	.word	13
---
> 	.word	2
165,166c159,160
< int_const5:
< 	.word	3
---
> int_const10:
> 	.word	4
172c166
< 	.word	3
---
> 	.word	4
177,178c171,178
< int_const3:
< 	.word	3
---
> int_const0:
> 	.word	4
> 	.word	4
> 	.word	Int_dispTab
> 	.word	5
> 	.word	-1
> int_const6:
> 	.word	4
183,184c183,184
< int_const2:
< 	.word	3
---
> int_const5:
> 	.word	4
187c187
< 	.word	0
---
> 	.word	8
189,190c189,190
< int_const1:
< 	.word	3
---
> int_const3:
> 	.word	4
193c193
< 	.word	2
---
> 	.word	9
195,196c195,196
< int_const0:
< 	.word	3
---
> int_const8:
> 	.word	4
199c199
< 	.word	5
---
> 	.word	54
202c202
< 	.word	4
---
> 	.word	5
208c208
< 	.word	4
---
> 	.word	5
221a222,223
> 	.word	String_protObj
> 	.word	String_init
230,268c232
< 	.word	String_protObj
< 	.word	String_init
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Main.main
< 	.word	-1
---
> Object_dispTabString_dispTabIO_dispTabMain_dispTabInt_dispTabBool_dispTab	.word	-1
275c239
< 	.word	5
---
> 	.word	1
281,292d244
< Bool_protObj:
< 	.word	4
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	3
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
294c246
< 	.word	1
---
> 	.word	2
299c251
< 	.word	2
---
> 	.word	3
302a255,266
> 	.word	-1
> Int_protObj:
> 	.word	4
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	5
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
339c303
< Bool_init:
---
> IO_init:
353c317
< Int_init:
---
> Main_init:
360c324,325
< 	jal	Object_init
---
> 	jal	IO_init
> 	la	$a0 str_const1
367c332
< IO_init:
---
> Int_init:
381c346
< Main_init:
---
> Bool_init:
388,390c353
< 	jal	IO_init
< 	la	$a0 str_const0
< 	sw	$a0 12($s0)
---
> 	jal	Object_init
404,494c367
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label0
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label1
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	la	$a0 str_const2
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label2
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 str_const1
< 	bne	$a0 $zero label3
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	la	$a0 int_const1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	lw	$a0 12($s0)
< 	bne	$a0 $zero label5
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 20($t1)
< 	jalr		$t1
< 	bne	$a0 $zero label6
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 16($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label7
< 	la	$a0 str_const3
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ spim_outname=string-methods.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/string-methods.cl
+ spim_errname=string-methods.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.spim.out
6,11c6,25
< 9
< this is a string
< is
< COOL program successfully executed
< Stats -- #instructions : 986
<          #reads : 208  #writes 125  #branches 188  #other 465
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.spim.out.filtered
6,9c6,25
< 9
< this is a string
< is
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/string-methods.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 232 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/string-methods.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/string-methods.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/typename.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/typename.cl
+ outname=typename.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/typename.cl
+ errname=typename.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.out /home/raj/cool/distro/testsuite/cgen/typename.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.out /home/raj/cool/distro/testsuite/cgen/typename.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.out
13,14d12
< 	.word	4
< _bool_tag:
16c14
< _string_tag:
---
> _bool_tag:
17a16,17
> _string_tag:
> 	.word	1
29c29
< 	.word	6
---
> 	.word	1
36,38c36,38
< str_const10:
< 	.word	6
< 	.word	6
---
> str_const0:
> 	.word	1
> 	.word	17
41c41
< 	.ascii	"Main"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/typename.cl"
45,46c45,46
< str_const9:
< 	.word	6
---
> str_const7:
> 	.word	1
50c50
< 	.ascii	"String"
---
> 	.ascii	"Derived"
54,55c54,55
< str_const8:
< 	.word	6
---
> str_const9:
> 	.word	1
58c58
< 	.word	int_const1
---
> 	.word	int_const3
63,64c63,64
< str_const7:
< 	.word	6
---
> str_const5:
> 	.word	1
67,68c67,68
< 	.word	int_const3
< 	.ascii	"Int"
---
> 	.word	int_const4
> 	.ascii	"IO"
72,73c72,73
< str_const6:
< 	.word	6
---
> str_const3:
> 	.word	1
76,77c76,77
< 	.word	int_const4
< 	.ascii	"Derived"
---
> 	.word	int_const5
> 	.ascii	"Object"
81,83c81,83
< str_const5:
< 	.word	6
< 	.word	6
---
> str_const1:
> 	.word	1
> 	.word	5
85,86c85,86
< 	.word	int_const1
< 	.ascii	"Base"
---
> 	.word	int_const6
> 	.ascii	"\n"
90a91
> 	.word	1
92d92
< 	.word	5
95c95
< 	.ascii	"IO"
---
> 	.ascii	"String"
99,100c99,100
< str_const3:
< 	.word	6
---
> str_const10:
> 	.word	1
103,104c103,104
< 	.word	int_const2
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
109c109
< 	.word	6
---
> 	.word	1
112c112
< 	.word	int_const6
---
> 	.word	int_const7
117,119c117,119
< str_const1:
< 	.word	6
< 	.word	17
---
> str_const8:
> 	.word	1
> 	.word	5
121,122c121,122
< 	.word	int_const7
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/typename.cl"
---
> 	.word	int_const8
> 	.ascii	"Int"
126c126,127
< str_const0:
---
> str_const6:
> 	.word	1
128d128
< 	.word	5
130,131c130,131
< 	.word	int_const8
< 	.ascii	"\n"
---
> 	.word	int_const3
> 	.ascii	"Base"
135,136c135,136
< int_const8:
< 	.word	4
---
> int_const0:
> 	.word	5
139c139
< 	.word	1
---
> 	.word	0
141,142c141,142
< int_const7:
< 	.word	4
---
> int_const6:
> 	.word	5
145c145
< 	.word	48
---
> 	.word	1
147,148c147,148
< int_const6:
< 	.word	4
---
> int_const7:
> 	.word	5
153,154c153,154
< int_const5:
< 	.word	4
---
> int_const4:
> 	.word	5
159,160c159,160
< int_const4:
< 	.word	4
---
> int_const8:
> 	.word	5
163c163
< 	.word	7
---
> 	.word	3
166c166
< 	.word	4
---
> 	.word	5
169,171d168
< 	.word	3
< 	.word	-1
< int_const2:
173,175d169
< 	.word	4
< 	.word	Int_dispTab
< 	.word	6
178c172
< 	.word	4
---
> 	.word	5
181c175
< 	.word	4
---
> 	.word	48
183c177,178
< int_const0:
---
> int_const5:
> 	.word	5
184a180,184
> 	.word	Int_dispTab
> 	.word	6
> 	.word	-1
> int_const2:
> 	.word	5
187c187
< 	.word	0
---
> 	.word	7
190c190
< 	.word	5
---
> 	.word	6
196c196
< 	.word	5
---
> 	.word	6
211a212,213
> 	.word	String_protObj
> 	.word	String_init
222,223d223
< 	.word	String_protObj
< 	.word	String_init
226,278c226
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< Base_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< 	.word	Base.test
< Derived_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	Base.identify
< 	.word	Base.test
< 	.word	-1
---
> Object_dispTabString_dispTabIO_dispTabBase_dispTabDerived_dispTabInt_dispTabBool_dispTabMain_dispTab	.word	-1
284,288d231
< Main_protObj:
< 	.word	7
< 	.word	3
< 	.word	Main_dispTab
< 	.word	-1
290c233
< 	.word	6
---
> 	.word	1
296,307d238
< Bool_protObj:
< 	.word	5
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
< Int_protObj:
< 	.word	4
< 	.word	4
< 	.word	Int_dispTab
< 	.word	0
< 	.word	-1
309c240
< 	.word	1
---
> 	.word	2
314c245
< 	.word	2
---
> 	.word	3
319c250
< 	.word	3
---
> 	.word	4
321a253,269
> 	.word	-1
> Int_protObj:
> 	.word	5
> 	.word	4
> 	.word	Int_dispTab
> 	.word	0
> 	.word	-1
> Bool_protObj:
> 	.word	6
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
> Main_protObj:
> 	.word	7
> 	.word	3
> 	.word	Main_dispTab
344c292
< Main_init:
---
> String_init:
358c306
< String_init:
---
> IO_init:
372c320
< Bool_init:
---
> Base_init:
379c327
< 	jal	Object_init
---
> 	jal	IO_init
386c334
< Int_init:
---
> Derived_init:
393c341
< 	jal	Object_init
---
> 	jal	Base_init
400c348
< IO_init:
---
> Int_init:
414c362
< Base_init:
---
> Bool_init:
421c369
< 	jal	IO_init
---
> 	jal	Object_init
428c376
< Derived_init:
---
> Main_init:
435c383
< 	jal	Base_init
---
> 	jal	Object_init
442,464d389
< Main.main:
< 	addiu	$sp $sp -12
< 	sw	$fp 12($sp)
< 	sw	$s0 8($sp)
< 	sw	$ra 4($sp)
< 	addiu	$fp $sp 4
< 	move	$s0 $a0
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	bne	$a0 $zero label0
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label0:
< 	lw	$t1 8($a0)
< 	lw	$t1 32($t1)
< 	jalr		$t1
< 	lw	$fp 12($sp)
< 	lw	$s0 8($sp)
< 	lw	$ra 4($sp)
< 	addiu	$sp $sp 12
< 	jr	$ra	
472,503c397
< 	lw	$a0 12($fp)
< 	bne	$a0 $zero label1
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label1:
< 	lw	$t1 8($a0)
< 	lw	$t1 4($t1)
< 	jalr		$t1
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label2
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label2:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
< 	la	$a0 str_const0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label3
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label3:
< 	lw	$t1 8($a0)
< 	lw	$t1 12($t1)
< 	jalr		$t1
---
> 	move	$a0 null
516,586c410
< 	la	$a0 Base_protObj
< 	jal	Object.copy
< 	jal	Base_init
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label4
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label4:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label5
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label5:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 Main_protObj
< 	jal	Object.copy
< 	jal	Main_init
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label6
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label6:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	la	$a0 Derived_protObj
< 	jal	Object.copy
< 	jal	Derived_init
< 	move	$s1 $a0
< 	sw	$s1 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	sw	$s1 0($fp)
< 	bne	$a0 $zero label7
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label7:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
< 	lw	$s1 0($fp)
< 	move	$a0 $s0
< 	sw	$a0 0($sp)
< 	addiu	$sp $sp -4
< 	move	$a0 $s0
< 	bne	$a0 $zero label8
< 	la	$a0 str_const1
< 	li	$t1 1
< 	jal	_dispatch_abort
< label8:
< 	lw	$t1 8($a0)
< 	lw	$t1 28($t1)
< 	jalr		$t1
---
> 	move	$a0 null
590a415,434
> 	jr	$ra	
> Main.main:
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
> 	addiu	$fp $sp 4
> 	move	$s0 $a0
> 	bne	$a0 $zero label0
> 	la	$a0 str_const0
> 	li	$t1 1
> 	jal	_dispatch_abort
> label0:
> 	lw	$t1 8($a0)
> 	lw	$t1 32($t1)
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/typename.cl
+ spim_outname=typename.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/typename.cl
+ spim_errname=typename.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.spim.out
6,13c6,29
< Base
< Derived
< Main
< Derived
< Derived
< COOL program successfully executed
< Stats -- #instructions : 938
<          #reads : 212  #writes 142  #branches 185  #other 399
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.spim.out.filtered
6,11c6,29
< Base
< Derived
< Main
< Derived
< Derived
< COOL program successfully executed
---
> The following symbols are undefined:
> heap_start
> Derived_init
> Base_init
> Int_protObj
> Bool_dispTab
> Base_protObj
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> Derived_protObj
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/typename.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 226 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/typename.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/typename.cl
+ testfile=/home/raj/cool/distro/testsuite/cgen/while-val.cl
+ results_outdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/out
+ results_refdir=/home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref
+ BUILD_DIR=/home/raj/cool/distro/assignments/pa3
+ REF_DIR=/home/raj/cool/distro/../ref
+ component=cgen
++ basename /home/raj/cool/distro/testsuite/cgen/while-val.cl
+ outname=while-val.cl.out
++ basename /home/raj/cool/distro/testsuite/cgen/while-val.cl
+ errname=while-val.cl.err
+ coolc -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.out /home/raj/cool/distro/testsuite/cgen/while-val.cl
+ refrc=0
+ ./mybackend -o /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.out /home/raj/cool/distro/testsuite/cgen/while-val.cl
+ myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.out
17c17
< 	.word	4
---
> 	.word	1
29c29
< 	.word	4
---
> 	.word	1
36,37c36,37
< str_const7:
< 	.word	4
---
> str_const5:
> 	.word	1
41c41
< 	.ascii	"Main"
---
> 	.ascii	"Bool"
46,47c46,47
< 	.word	4
< 	.word	6
---
> 	.word	1
> 	.word	5
50c50
< 	.ascii	"String"
---
> 	.ascii	"IO"
54,55c54,55
< str_const5:
< 	.word	4
---
> str_const2:
> 	.word	1
58,59c58,59
< 	.word	int_const3
< 	.ascii	"Bool"
---
> 	.word	int_const5
> 	.ascii	"Object"
63,65c63,65
< str_const4:
< 	.word	4
< 	.word	5
---
> str_const3:
> 	.word	1
> 	.word	6
68c68
< 	.ascii	"Int"
---
> 	.ascii	"String"
72,74c72,74
< str_const3:
< 	.word	4
< 	.word	5
---
> str_const0:
> 	.word	1
> 	.word	17
77c77
< 	.ascii	"IO"
---
> 	.ascii	"/home/raj/cool/distro/testsuite/cgen/while-val.cl"
81,82c81,82
< str_const2:
< 	.word	4
---
> str_const7:
> 	.word	1
85,86c85,86
< 	.word	int_const4
< 	.ascii	"Object"
---
> 	.word	int_const3
> 	.ascii	"Main"
91c91
< 	.word	4
---
> 	.word	1
99,101c99,101
< str_const0:
< 	.word	4
< 	.word	17
---
> str_const4:
> 	.word	1
> 	.word	5
104c104
< 	.ascii	"/home/raj/cool/distro/testsuite/cgen/while-val.cl"
---
> 	.ascii	"Int"
108c108
< int_const8:
---
> int_const2:
112c112
< 	.word	49
---
> 	.word	0
114c114
< int_const7:
---
> int_const1:
118c118
< 	.word	13
---
> 	.word	1
120c120
< int_const6:
---
> int_const7:
124c124
< 	.word	2
---
> 	.word	13
126c126
< int_const5:
---
> int_const4:
130c130
< 	.word	3
---
> 	.word	2
132c132
< int_const4:
---
> int_const8:
136c136
< 	.word	6
---
> 	.word	3
144c144
< int_const2:
---
> int_const6:
148c148
< 	.word	0
---
> 	.word	49
150c150
< int_const1:
---
> int_const5:
154c154
< 	.word	1
---
> 	.word	6
183,184c183,184
< 	.word	IO_protObj
< 	.word	IO_init
---
> 	.word	String_protObj
> 	.word	String_init
189,190c189,190
< 	.word	String_protObj
< 	.word	String_init
---
> 	.word	IO_protObj
> 	.word	IO_init
193,225c193
< Object_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Main_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	Main.main
< String_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	String.length
< 	.word	String.concat
< 	.word	String.substr
< Bool_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< Int_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< IO_dispTab:
< 	.word	Object.abort
< 	.word	Object.type_name
< 	.word	Object.copy
< 	.word	IO.out_string
< 	.word	IO.out_int
< 	.word	IO.in_string
< 	.word	IO.in_int
< 	.word	-1
---
> Object_dispTabString_dispTabInt_dispTabBool_dispTabIO_dispTabMain_dispTab	.word	-1
231,236d198
< Main_protObj:
< 	.word	5
< 	.word	4
< 	.word	Main_dispTab
< 	.word	int_const2
< 	.word	-1
238c200
< 	.word	4
---
> 	.word	1
244,249d205
< Bool_protObj:
< 	.word	3
< 	.word	4
< 	.word	Bool_dispTab
< 	.word	0
< 	.word	-1
255a212,217
> Bool_protObj:
> 	.word	3
> 	.word	4
> 	.word	Bool_dispTab
> 	.word	0
> 	.word	-1
257c219
< 	.word	1
---
> 	.word	4
259a222,227
> 	.word	-1
> Main_protObj:
> 	.word	5
> 	.word	4
> 	.word	Main_dispTab
> 	.word	int_const2
282c250
< Main_init:
---
> String_init:
296c264
< String_init:
---
> Int_init:
324c292
< Int_init:
---
> IO_init:
338c306
< IO_init:
---
> Main_init:
353,356c321,324
< 	addiu	$sp $sp -16
< 	sw	$fp 16($sp)
< 	sw	$s0 12($sp)
< 	sw	$ra 8($sp)
---
> 	addiu	$sp $sp -12
> 	sw	$fp 12($sp)
> 	sw	$s0 8($sp)
> 	sw	$ra 4($sp)
359,381c327
< label0:
< 	lw	$s1 12($s0)
< 	la	$a0 int_const0
< 	lw	$t1 12($s1)
< 	lw	$t2 12($a0)
< 	la	$a0 bool_const1
< 	blt	$t1 $t2 label2
< 	la	$a0 bool_const0
< label2:
< 	lw	$t1 12($a0)
< 	beq	$t1 $zero label1
< 	lw	$s1 12($s0)
< 	la	$a0 int_const1
< 	jal	Object.copy
< 	lw	$t2 12($a0)
< 	lw	$t1 12($s1)
< 	add	$t1 $t1 $t2
< 	sw	$t1 12($a0)
< 	sw	$a0 12($s0)
< 	b	label0
< label1:
< 	move	$a0 $zero
< 	bne	$a0 $zero label3
---
> 	bne	$a0 $zero label1
385c331
< label3:
---
> label1:
388c334
< 	jalr		$t1
---
> 	jalr	$t1
391,394c337
< 	la	$a0 IO_protObj
< 	jal	Object.copy
< 	jal	IO_init
< 	bne	$a0 $zero label4
---
> 	bne	$a0 $zero label2
398c341
< label4:
---
> label2:
401,405c344,348
< 	jalr		$t1
< 	lw	$fp 16($sp)
< 	lw	$s0 12($sp)
< 	lw	$ra 8($sp)
< 	addiu	$sp $sp 16
---
> 	jalr	$t1
> 	lw	$fp 12($sp)
> 	lw	$s0 8($sp)
> 	lw	$ra 4($sp)
> 	addiu	$sp $sp 12
+ outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.err
+ errdiffrc=0
++ basename /home/raj/cool/distro/testsuite/cgen/while-val.cl
+ spim_outname=while-val.cl.spim.out
++ basename /home/raj/cool/distro/testsuite/cgen/while-val.cl
+ spim_errname=while-val.cl.spim.err
++ which filter
+ filter='sed -f /home/raj/cool/distro/bin/filter'
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.out
+ spim_refrc=0
+ coolspim -file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.out
+ spim_myrc=0
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.spim.out /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.spim.out
6,8c6,25
< /home/raj/cool/distro/testsuite/cgen/while-val.cl:1: Dispatch to void.
< Stats -- #instructions : 893
<          #reads : 193  #writes 109  #branches 197  #other 394
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ '[' 1 -ne 0 ']'
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.spim.out
+ sed -f /home/raj/cool/distro/bin/filter /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.spim.out
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.spim.out.filtered /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.spim.out.filtered
6c6,25
< /home/raj/cool/distro/testsuite/cgen/while-val.cl:1: Dispatch to void.
---
> The following symbols are undefined:
> heap_start
> Int_protObj
> Bool_dispTab
> Main.main
> Bool_init
> String_protObj
> IO_init
> Int_init
> Int_dispTab
> String_init
> Object_init
> IO_protObj
> Main_protObj
> String_dispTab
> Main_init
> Bool_protObj
> Object_protObj
> 
> [0x0040129c]	0x3c010000  lui $1, 0 [heap_start]          ; 2521: la	$gp heap_start			# set $gp to the start of the heap
+ spim_outdiffrc=1
+ diff /home/raj/cool/distro/assignments/pa3/testsuite/cgen/ref/while-val.cl.spim.err /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.spim.err
0a1,4
> spim: (parser) syntax error on line 193 of file /home/raj/cool/distro/assignments/pa3/testsuite/cgen/out/while-val.cl.out
> 	  .word	-1
> 	  ^
> Instruction references undefined symbol at 0x0040129c
+ spim_errdiffrc=1
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -ne 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 0 -eq 0 ']'
+ '[' 1 -ne 0 ']'
+ exit 1
FAIL: testsuite/cgen/while-val.cl
